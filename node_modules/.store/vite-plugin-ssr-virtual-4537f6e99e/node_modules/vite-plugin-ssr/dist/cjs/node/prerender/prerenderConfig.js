"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPrerenderConfig = void 0;
const utils_1 = require("../utils");
function getPrerenderConfig(vitePluginSsrConfig) {
    const prerenderConfig = {
        partial: undefined,
        noExtraDir: undefined,
        parallel: undefined,
    };
    if (vitePluginSsrConfig.prerender === undefined) {
        return prerenderConfig;
    }
    (0, utils_1.assertUsage)((0, utils_1.hasProp)(vitePluginSsrConfig, 'prerender', 'object'), '[vite.config.js][`ssr({ prerender })`] `prerender` should be an object');
    const { prerender } = vitePluginSsrConfig;
    if (prerender.partial !== undefined) {
        (0, utils_1.assertUsage)((0, utils_1.hasProp)(prerender, 'partial', 'boolean'), '[vite.config.js][`ssr({ prerender: { partial } })`] `partial` should be a boolean');
        prerenderConfig.partial = prerender.partial;
    }
    if (prerender.noExtraDir !== undefined) {
        (0, utils_1.assertUsage)((0, utils_1.hasProp)(prerender, 'noExtraDir', 'boolean'), '[vite.config.js][`ssr({ prerender: { noExtraDir } })`] `noExtraDir` should be a boolean');
        prerenderConfig.noExtraDir = prerender.noExtraDir;
    }
    if (prerender.parallel !== undefined) {
        (0, utils_1.assertUsage)((0, utils_1.hasProp)(prerender, 'parallel', 'number'), '[vite.config.js][`ssr({ prerender: { parallel } })`] `parallel` should be a number');
        prerenderConfig.parallel = prerender.parallel;
    }
    return prerenderConfig;
}
exports.getPrerenderConfig = getPrerenderConfig;
