export { isClientSideRenderable };
import { getPageId } from '../getPageId';
import { isHtmlOnlyPage } from '../../../shared/pageFilesUtils';
async function isClientSideRenderable(url) {
    const { pageId, pageFilesAll } = await getPageId(url);
    if (!pageId) {
        return false;
    }
    await Promise.all(pageFilesAll
        .filter((p) => (p.fileType === '.page' || p.fileType === '.page.client') && p.isRelevant(pageId))
        .map((p) => { var _a; return (_a = p.loadExportNames) === null || _a === void 0 ? void 0 : _a.call(p); }));
    const { isHtmlOnly } = isHtmlOnlyPage(pageId, pageFilesAll, true);
    if (isHtmlOnly) {
        return false;
    }
    return true;
}
