{
  "version": 3,
  "sources": ["../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/RelayFeatureFlags.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/StringInterner.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/ClientID.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/interopRequireDefault.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/arrayLikeToArray.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/iterableToArray.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/nonIterableSpread.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/toConsumableArray.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/RelayDefaultHandleKey.js", "../../.store/invariant-npm-2.2.4-717fbdb119/node_modules/invariant/browser.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/getRelayHandleKey.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/RelayConcreteNode.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/stableCopy.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayStoreUtils.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/handlers/connection/ConnectionInterface.js", "../../.store/fbjs-npm-3.0.4-7d85bbacfa/node_modules/fbjs/lib/emptyFunction.js", "../../.store/fbjs-npm-3.0.4-7d85bbacfa/node_modules/fbjs/lib/warning.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/handlers/connection/ConnectionHandler.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/handlers/connection/MutationHandlers.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/handlers/RelayDefaultHandlerProvider.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/query/GraphQLTag.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/isRelayModernEnvironment.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/deepFreeze.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/getRequestIdentifier.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/defineProperty.js", "../../.store/@babel-runtime-npm-7.17.9-c52a5e9d27/node_modules/@babel/runtime/helpers/objectSpread2.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayConcreteVariables.js", "../../.store/fbjs-npm-3.0.4-7d85bbacfa/node_modules/fbjs/lib/areEqual.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayModernSelector.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayModernOperationDescriptor.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/RelayDeclarativeMutationConfig.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/applyOptimisticMutation.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/commitLocalUpdate.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/validateMutation.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/commitMutation.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/withProvidedVariables.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/isPromise.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/network/RelayObservable.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/network/ConvertToExecuteFunction.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/network/RelayNetwork.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/network/RelayQueryResponseCache.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/handlePotentialSnapshotErrors.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/RelayReplaySubject.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/query/fetchQueryInternal.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/query/fetchQuery.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/query/fetchQuery_DEPRECATED.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/query/PreloadableQueryRegistry.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/getPendingOperationsForFragment.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/isScalarAndEqual.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/recycleNodesInto.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayModernFragmentSpecResolver.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/createFragmentSpecResolver.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/createRelayContext.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/readInlineData.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/multi-actor-environment/ActorIdentifier.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/generateID.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/network/wrapNetworkWithLogObserver.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayOperationTracker.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/registerEnvironmentWithDevTools.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/ViewerPattern.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/defaultGetDataID.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/defaultRequiredFieldLogger.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/getOperation.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/RelayError.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/withDuration.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayModernRecord.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayRecordState.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayRecordSource.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/multi-actor-environment/ActorUtils.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayStoreReactFlightUtils.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/TypeID.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayResponseNormalizer.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/OperationExecutor.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/RelayRecordSourceMutator.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/readUpdatableQuery_EXPERIMENTAL.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/RelayRecordProxy.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/RelayRecordSourceProxy.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/mutations/RelayRecordSourceSelectorProxy.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/ResolverCache.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/ResolverFragments.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayReader.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayPublishQueue.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/StoreInspector.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayModernEnvironment.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/resolveImmediate.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/cloneRelayHandleSourceField.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/cloneRelayScalarHandleSourceField.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/DataChecker.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayOptimisticRecordSource.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayReferenceMarker.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/hasOverlappingIDs.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayStoreSubscriptions.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/store/RelayModernStore.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/subscription/requestSubscription.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/createPayloadFor3DField.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/isEmptyObject.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/getFragmentIdentifier.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/getRefetchMetadata.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/getPaginationMetadata.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/getPaginationVariables.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/getValueAtPath.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/util/RelayProfiler.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/lib/index.js", "../../.store/relay-runtime-npm-13.2.0-1e6b1672a1/node_modules/relay-runtime/index.js"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayFeatureFlags = {\n  ENABLE_CLIENT_EDGES: false,\n  ENABLE_VARIABLE_CONNECTION_KEY: false,\n  ENABLE_PARTIAL_RENDERING_DEFAULT: true,\n  ENABLE_REACT_FLIGHT_COMPONENT_FIELD: false,\n  ENABLE_RELAY_RESOLVERS: false,\n  ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION: false,\n  ENABLE_FRIENDLY_QUERY_NAME_GQL_URL: false,\n  ENABLE_LOAD_QUERY_REQUEST_DEDUPING: true,\n  ENABLE_DO_NOT_WRAP_LIVE_QUERY: false,\n  ENABLE_NOTIFY_SUBSCRIPTION: false,\n  BATCH_ASYNC_MODULE_UPDATES_FN: null,\n  ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT: false,\n  MAX_DATA_ID_LENGTH: null,\n  STRING_INTERN_LEVEL: 0,\n  USE_REACT_CACHE: false\n};\nmodule.exports = RelayFeatureFlags;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar internTable = new Map();\nvar nextIndex = 1;\nvar digits = initDigitTable(); // Character used as the prefix for interned strings. The specific character is\n// chosen to reduce the likelihood that non-interned input strings need to be\n// escaped (choosing eg a-Z would increase the likelihood we need to escape)\n\nvar INTERN_PREFIX = '\\t'; // Character used as the prefix of escaped strings. As above, this is also\n// chosen to be unlikely in normal input strings.\n\nvar ESCAPE_PREFIX = '\\v';\n\nfunction initDigitTable() {\n  // disable lint because digits isn't defined when this function is called\n  // eslint-disable-next-line no-shadow\n  var digits = new Set();\n\n  for (var i = 0; i < 10; ++i) {\n    digits.add(i.toString());\n  }\n\n  return digits;\n} // Escape a string so that it cannot conflict with an interned string\n\n\nfunction escape(str) {\n  if ( // \"\\t<digit>...\" -> \"\\v\\t<digit>...\"\n  str[0] === INTERN_PREFIX && digits.has(str[1]) || // \"\\v...\" -> \"\\v\\v...\"\n  str[0] === ESCAPE_PREFIX) {\n    return ESCAPE_PREFIX + str;\n  }\n\n  return str;\n} // Interns the input string if its length equals or exceeds the given `limit`,\n// returning a shorter replacement string that is uniquely associated with the\n// input: multiple calls to intern() for the equivalent input strings (and limit)\n// will always return the exact same string.\n// Strings shorter than the limit are not interned but are escaped if they\n// could conflict with interned strings.\n\n\nfunction intern(str, limit) {\n  if (limit == null || str.length < limit) {\n    return escape(str);\n  }\n\n  var internedString = internTable.get(str);\n\n  if (internedString != null) {\n    return internedString;\n  }\n\n  internedString = INTERN_PREFIX + nextIndex++;\n  internTable.set(str, internedString);\n  return internedString;\n}\n\nmodule.exports = {\n  intern: intern\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar _require = require('../util/StringInterner'),\n    intern = _require.intern;\n\nvar PREFIX = 'client:';\n\nfunction generateClientID(id, storageKey, index) {\n  var internedId = RelayFeatureFlags.STRING_INTERN_LEVEL <= 0 ? id : intern(id, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n  var key = internedId + ':' + storageKey;\n\n  if (index != null) {\n    key += ':' + index;\n  }\n\n  if (key.indexOf(PREFIX) !== 0) {\n    key = PREFIX + key;\n  }\n\n  return key;\n}\n\nfunction isClientID(id) {\n  return id.indexOf(PREFIX) === 0;\n}\n\nvar localID = 0;\n\nfunction generateUniqueClientID() {\n  return \"\".concat(PREFIX, \"local:\").concat(localID++);\n}\n\nmodule.exports = {\n  generateClientID: generateClientID,\n  generateUniqueClientID: generateUniqueClientID,\n  isClientID: isClientID\n};", "function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nmodule.exports = {\n  DEFAULT_HANDLE_KEY: ''\n};", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./RelayDefaultHandleKey'),\n    DEFAULT_HANDLE_KEY = _require.DEFAULT_HANDLE_KEY;\n\nvar invariant = require('invariant');\n/**\n * @internal\n *\n * Helper to create a unique name for a handle field based on the handle name, handle key and\n * source field.\n */\n\n\nfunction getRelayHandleKey(handleName, key, fieldName) {\n  if (key && key !== DEFAULT_HANDLE_KEY) {\n    return \"__\".concat(key, \"_\").concat(handleName);\n  }\n\n  !(fieldName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getRelayHandleKey: Expected either `fieldName` or `key` in `handle` to be provided') : invariant(false) : void 0;\n  return \"__\".concat(fieldName, \"_\").concat(handleName);\n}\n\nmodule.exports = getRelayHandleKey;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\n/**\n * Represents a common GraphQL request that can be executed, an `operation`\n * containing information to normalize the results, and a `fragment` derived\n * from that operation to read the response data (masking data from child\n * fragments).\n */\n\n/**\n * Contains the parameters required for executing a GraphQL request.\n * The operation can either be provided as a persisted `id` or `text`. If given\n * in `text` format, a `cacheID` as a hash of the text should be set to be used\n * for local caching.\n */\nvar RelayConcreteNode = {\n  ACTOR_CHANGE: 'ActorChange',\n  CONDITION: 'Condition',\n  CLIENT_COMPONENT: 'ClientComponent',\n  CLIENT_EDGE: 'ClientEdge',\n  CLIENT_EXTENSION: 'ClientExtension',\n  DEFER: 'Defer',\n  CONNECTION: 'Connection',\n  FLIGHT_FIELD: 'FlightField',\n  FRAGMENT: 'Fragment',\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_DATA_FRAGMENT_SPREAD: 'InlineDataFragmentSpread',\n  INLINE_DATA_FRAGMENT: 'InlineDataFragment',\n  INLINE_FRAGMENT: 'InlineFragment',\n  LINKED_FIELD: 'LinkedField',\n  LINKED_HANDLE: 'LinkedHandle',\n  LITERAL: 'Literal',\n  LIST_VALUE: 'ListValue',\n  LOCAL_ARGUMENT: 'LocalArgument',\n  MODULE_IMPORT: 'ModuleImport',\n  RELAY_RESOLVER: 'RelayResolver',\n  RELAY_LIVE_RESOLVER: 'RelayLiveResolver',\n  REQUIRED_FIELD: 'RequiredField',\n  OBJECT_VALUE: 'ObjectValue',\n  OPERATION: 'Operation',\n  REQUEST: 'Request',\n  ROOT_ARGUMENT: 'RootArgument',\n  SCALAR_FIELD: 'ScalarField',\n  SCALAR_HANDLE: 'ScalarHandle',\n  SPLIT_OPERATION: 'SplitOperation',\n  STREAM: 'Stream',\n  TYPE_DISCRIMINATOR: 'TypeDiscriminator',\n  UPDATABLE_QUERY: 'UpdatableQuery',\n  VARIABLE: 'Variable'\n};\nmodule.exports = RelayConcreteNode;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n/**\n * Creates a copy of the provided value, ensuring any nested objects have their\n * keys sorted such that equivalent values would have identical JSON.stringify\n * results.\n */\n\nfunction stableCopy(value) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  if (Array.isArray(value)) {\n    return value.map(stableCopy);\n  }\n\n  var keys = Object.keys(value).sort();\n  var stable = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    stable[keys[i]] = stableCopy(value[keys[i]]);\n  }\n\n  return stable;\n}\n\nmodule.exports = stableCopy;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar getRelayHandleKey = require('../util/getRelayHandleKey');\n\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\n\nvar stableCopy = require('../util/stableCopy');\n\nvar invariant = require('invariant');\n\nvar VARIABLE = RelayConcreteNode.VARIABLE,\n    LITERAL = RelayConcreteNode.LITERAL,\n    OBJECT_VALUE = RelayConcreteNode.OBJECT_VALUE,\n    LIST_VALUE = RelayConcreteNode.LIST_VALUE;\nvar MODULE_COMPONENT_KEY_PREFIX = '__module_component_';\nvar MODULE_OPERATION_KEY_PREFIX = '__module_operation_';\n\nfunction getArgumentValue(arg, variables) {\n  if (arg.kind === VARIABLE) {\n    // Variables are provided at runtime and are not guaranteed to be stable.\n    return getStableVariableValue(arg.variableName, variables);\n  } else if (arg.kind === LITERAL) {\n    // The Relay compiler generates stable ConcreteArgument values.\n    return arg.value;\n  } else if (arg.kind === OBJECT_VALUE) {\n    var value = {};\n    arg.fields.forEach(function (field) {\n      value[field.name] = getArgumentValue(field, variables);\n    });\n    return value;\n  } else if (arg.kind === LIST_VALUE) {\n    var _value = [];\n    arg.items.forEach(function (item) {\n      item != null ? _value.push(getArgumentValue(item, variables)) : null;\n    });\n    return _value;\n  }\n}\n/**\n * Returns the values of field/fragment arguments as an object keyed by argument\n * names. Guaranteed to return a result with stable ordered nested values.\n */\n\n\nfunction getArgumentValues(args, variables) {\n  var values = {};\n  args.forEach(function (arg) {\n    values[arg.name] = getArgumentValue(arg, variables);\n  });\n  return values;\n}\n/**\n * Given a handle field and variable values, returns a key that can be used to\n * uniquely identify the combination of the handle name and argument values.\n *\n * Note: the word \"storage\" here refers to the fact this key is primarily used\n * when writing the results of a key in a normalized graph or \"store\". This\n * name was used in previous implementations of Relay internals and is also\n * used here for consistency.\n */\n\n\nfunction getHandleStorageKey(handleField, variables) {\n  var dynamicKey = handleField.dynamicKey,\n      handle = handleField.handle,\n      key = handleField.key,\n      name = handleField.name,\n      args = handleField.args,\n      filters = handleField.filters;\n  var handleName = getRelayHandleKey(handle, key, name);\n  var filterArgs = null;\n\n  if (args && filters && args.length !== 0 && filters.length !== 0) {\n    filterArgs = args.filter(function (arg) {\n      return filters.indexOf(arg.name) > -1;\n    });\n  }\n\n  if (dynamicKey) {\n    // \"Sort\" the arguments by argument name: this is done by the compiler for\n    // user-supplied arguments but the dynamic argument must also be in sorted\n    // order.  Note that dynamic key argument name is double-underscore-\n    // -prefixed, and a double-underscore prefix is disallowed for user-supplied\n    // argument names, so there's no need to actually sort.\n    filterArgs = filterArgs != null ? [dynamicKey].concat((0, _toConsumableArray2[\"default\"])(filterArgs)) : [dynamicKey];\n  }\n\n  if (filterArgs === null) {\n    return handleName;\n  } else {\n    return formatStorageKey(handleName, getArgumentValues(filterArgs, variables));\n  }\n}\n/**\n * Given a field and variable values, returns a key that can be used to\n * uniquely identify the combination of the field name and argument values.\n *\n * Note: the word \"storage\" here refers to the fact this key is primarily used\n * when writing the results of a key in a normalized graph or \"store\". This\n * name was used in previous implementations of Relay internals and is also\n * used here for consistency.\n */\n\n\nfunction getStorageKey(field, variables) {\n  if (field.storageKey) {\n    // TODO T23663664: Handle nodes do not yet define a static storageKey.\n    return field.storageKey;\n  }\n\n  var args = typeof field.args === 'undefined' ? undefined : field.args;\n  var name = field.name;\n  return args && args.length !== 0 ? formatStorageKey(name, getArgumentValues(args, variables)) : name;\n}\n/**\n * Given a `name` (eg. \"foo\") and an object representing argument values\n * (eg. `{orberBy: \"name\", first: 10}`) returns a unique storage key\n * (ie. `foo{\"first\":10,\"orderBy\":\"name\"}`).\n *\n * This differs from getStorageKey which requires a ConcreteNode where arguments\n * are assumed to already be sorted into a stable order.\n */\n\n\nfunction getStableStorageKey(name, args) {\n  return formatStorageKey(name, stableCopy(args));\n}\n/**\n * Given a name and argument values, format a storage key.\n *\n * Arguments and the values within them are expected to be ordered in a stable\n * alphabetical ordering.\n */\n\n\nfunction formatStorageKey(name, argValues) {\n  if (!argValues) {\n    return name;\n  }\n\n  var values = [];\n\n  for (var argName in argValues) {\n    if (argValues.hasOwnProperty(argName)) {\n      var value = argValues[argName];\n\n      if (value != null) {\n        var _JSON$stringify;\n\n        values.push(argName + ':' + ((_JSON$stringify = JSON.stringify(value)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'undefined'));\n      }\n    }\n  }\n\n  return values.length === 0 ? name : name + \"(\".concat(values.join(','), \")\");\n}\n/**\n * Given Variables and a variable name, return a variable value with\n * all values in a stable order.\n */\n\n\nfunction getStableVariableValue(name, variables) {\n  !variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getVariableValue(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n  return stableCopy(variables[name]);\n}\n\nfunction getModuleComponentKey(documentName) {\n  return \"\".concat(MODULE_COMPONENT_KEY_PREFIX).concat(documentName);\n}\n\nfunction getModuleOperationKey(documentName) {\n  return \"\".concat(MODULE_OPERATION_KEY_PREFIX).concat(documentName);\n}\n/**\n * Constants shared by all implementations of RecordSource/MutableRecordSource/etc.\n */\n\n\nvar RelayStoreUtils = {\n  ACTOR_IDENTIFIER_KEY: '__actorIdentifier',\n  CLIENT_EDGE_TRAVERSAL_PATH: '__clientEdgeTraversalPath',\n  FRAGMENTS_KEY: '__fragments',\n  FRAGMENT_OWNER_KEY: '__fragmentOwner',\n  FRAGMENT_PROP_NAME_KEY: '__fragmentPropName',\n  MODULE_COMPONENT_KEY: '__module_component',\n  // alias returned by Reader\n  ID_KEY: '__id',\n  REF_KEY: '__ref',\n  REFS_KEY: '__refs',\n  ROOT_ID: 'client:root',\n  ROOT_TYPE: '__Root',\n  TYPENAME_KEY: '__typename',\n  INVALIDATED_AT_KEY: '__invalidated_at',\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT: '__isWithinUnmatchedTypeRefinement',\n  RELAY_RESOLVER_VALUE_KEY: '__resolverValue',\n  RELAY_RESOLVER_INVALIDATION_KEY: '__resolverValueMayBeInvalid',\n  RELAY_RESOLVER_INPUTS_KEY: '__resolverInputValues',\n  RELAY_RESOLVER_READER_SELECTOR_KEY: '__resolverReaderSelector',\n  RELAY_RESOLVER_MISSING_REQUIRED_FIELDS_KEY: '__resolverMissingRequiredFields',\n  RELAY_RESOLVER_ERROR_KEY: '__resolverError',\n  formatStorageKey: formatStorageKey,\n  getArgumentValue: getArgumentValue,\n  getArgumentValues: getArgumentValues,\n  getHandleStorageKey: getHandleStorageKey,\n  getStorageKey: getStorageKey,\n  getStableStorageKey: getStableStorageKey,\n  getModuleComponentKey: getModuleComponentKey,\n  getModuleOperationKey: getModuleOperationKey\n};\nmodule.exports = RelayStoreUtils;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar CONNECTION_CALLS = {\n  after: true,\n  before: true,\n  find: true,\n  first: true,\n  last: true,\n  surrounds: true\n};\nvar config = {\n  CLIENT_MUTATION_ID: 'clientMutationId',\n  CURSOR: 'cursor',\n  EDGES: 'edges',\n  END_CURSOR: 'endCursor',\n  HAS_NEXT_PAGE: 'hasNextPage',\n  HAS_PREV_PAGE: 'hasPreviousPage',\n  NODE: 'node',\n  PAGE_INFO_TYPE: 'PageInfo',\n  PAGE_INFO: 'pageInfo',\n  START_CURSOR: 'startCursor'\n};\n/**\n * @internal\n *\n * Defines logic relevant to the informal \"Connection\" GraphQL interface.\n */\n\nvar ConnectionInterface = {\n  inject: function inject(newConfig) {\n    config = newConfig;\n  },\n  get: function get() {\n    return config;\n  },\n\n  /**\n   * Checks whether a call exists strictly to encode which parts of a connection\n   * to fetch. Fields that only differ by connection call values should have the\n   * same identity.\n   */\n  isConnectionCall: function isConnectionCall(call) {\n    return CONNECTION_CALLS.hasOwnProperty(call.name);\n  }\n};\nmodule.exports = ConnectionInterface;", "\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\n\n\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\n\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;", "/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyFunction = require(\"./emptyFunction\");\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\n\nfunction printWarning(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var argIndex = 0;\n  var message = 'Warning: ' + format.replace(/%s/g, function () {\n    return args[argIndex++];\n  });\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    // --- Welcome to debugging React ---\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n  } catch (x) {}\n}\n\nvar warning = process.env.NODE_ENV !== \"production\" ? function (condition, format) {\n  if (format === undefined) {\n    throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n  }\n\n  if (!condition) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    printWarning.apply(void 0, [format].concat(args));\n  }\n} : emptyFunction;\nmodule.exports = warning;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../../store/ClientID'),\n    generateClientID = _require.generateClientID;\n\nvar _require2 = require('../../store/RelayStoreUtils'),\n    getStableStorageKey = _require2.getStableStorageKey;\n\nvar getRelayHandleKey = require('../../util/getRelayHandleKey');\n\nvar ConnectionInterface = require('./ConnectionInterface');\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar CONNECTION = 'connection'; // Per-instance incrementing index used to generate unique edge IDs\n\nvar NEXT_EDGE_INDEX = '__connection_next_edge_index';\n/**\n * @public\n *\n * A default runtime handler for connection fields that appends newly fetched\n * edges onto the end of a connection, regardless of the arguments used to fetch\n * those edges.\n */\n\nfunction update(store, payload) {\n  var record = store.get(payload.dataID);\n\n  if (!record) {\n    return;\n  }\n\n  var _ConnectionInterface$ = ConnectionInterface.get(),\n      EDGES = _ConnectionInterface$.EDGES,\n      END_CURSOR = _ConnectionInterface$.END_CURSOR,\n      HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE,\n      HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE,\n      PAGE_INFO = _ConnectionInterface$.PAGE_INFO,\n      PAGE_INFO_TYPE = _ConnectionInterface$.PAGE_INFO_TYPE,\n      START_CURSOR = _ConnectionInterface$.START_CURSOR;\n\n  var serverConnection = record.getLinkedRecord(payload.fieldKey);\n  var serverPageInfo = serverConnection && serverConnection.getLinkedRecord(PAGE_INFO);\n\n  if (!serverConnection) {\n    record.setValue(null, payload.handleKey);\n    return;\n  } // In rare cases the handleKey field may be unset even though the client\n  // connection record exists, in this case new edges should still be merged\n  // into the existing client connection record (and the field reset to point\n  // to that record).\n\n\n  var clientConnectionID = generateClientID(record.getDataID(), payload.handleKey);\n  var clientConnectionField = record.getLinkedRecord(payload.handleKey);\n  var clientConnection = clientConnectionField !== null && clientConnectionField !== void 0 ? clientConnectionField : store.get(clientConnectionID);\n  var clientPageInfo = clientConnection && clientConnection.getLinkedRecord(PAGE_INFO);\n\n  if (!clientConnection) {\n    // Initial fetch with data: copy fields from the server record\n    var connection = store.create(clientConnectionID, serverConnection.getType());\n    connection.setValue(0, NEXT_EDGE_INDEX);\n    connection.copyFieldsFrom(serverConnection);\n    var serverEdges = serverConnection.getLinkedRecords(EDGES);\n\n    if (serverEdges) {\n      serverEdges = serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, connection, edge);\n      });\n      connection.setLinkedRecords(serverEdges, EDGES);\n    }\n\n    record.setLinkedRecord(connection, payload.handleKey);\n    clientPageInfo = store.create(generateClientID(connection.getDataID(), PAGE_INFO), PAGE_INFO_TYPE);\n    clientPageInfo.setValue(false, HAS_NEXT_PAGE);\n    clientPageInfo.setValue(false, HAS_PREV_PAGE);\n    clientPageInfo.setValue(null, END_CURSOR);\n    clientPageInfo.setValue(null, START_CURSOR);\n\n    if (serverPageInfo) {\n      clientPageInfo.copyFieldsFrom(serverPageInfo);\n    }\n\n    connection.setLinkedRecord(clientPageInfo, PAGE_INFO);\n  } else {\n    if (clientConnectionField == null) {\n      // If the handleKey field was unset but the client connection record\n      // existed, update the field to point to the record\n      record.setLinkedRecord(clientConnection, payload.handleKey);\n    }\n\n    var _connection = clientConnection; // Subsequent fetches:\n    // - updated fields on the connection\n    // - merge prev/next edges, de-duplicating by node id\n    // - synthesize page info fields\n\n    var _serverEdges = serverConnection.getLinkedRecords(EDGES);\n\n    if (_serverEdges) {\n      _serverEdges = _serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, _connection, edge);\n      });\n    }\n\n    var prevEdges = _connection.getLinkedRecords(EDGES);\n\n    var prevPageInfo = _connection.getLinkedRecord(PAGE_INFO);\n\n    _connection.copyFieldsFrom(serverConnection); // Reset EDGES and PAGE_INFO fields\n\n\n    if (prevEdges) {\n      _connection.setLinkedRecords(prevEdges, EDGES);\n    }\n\n    if (prevPageInfo) {\n      _connection.setLinkedRecord(prevPageInfo, PAGE_INFO);\n    }\n\n    var nextEdges = [];\n    var args = payload.args;\n\n    if (prevEdges && _serverEdges) {\n      if (args.after != null) {\n        // Forward pagination from the end of the connection: append edges\n        if (clientPageInfo && args.after === clientPageInfo.getValue(END_CURSOR)) {\n          var nodeIDs = new Set();\n          mergeEdges(prevEdges, nextEdges, nodeIDs);\n          mergeEdges(_serverEdges, nextEdges, nodeIDs);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected after cursor `%s`, edges must ' + 'be fetched from the end of the list (`%s`).', args.after, clientPageInfo && clientPageInfo.getValue(END_CURSOR)) : void 0;\n          return;\n        }\n      } else if (args.before != null) {\n        // Backward pagination from the start of the connection: prepend edges\n        if (clientPageInfo && args.before === clientPageInfo.getValue(START_CURSOR)) {\n          var _nodeIDs = new Set();\n\n          mergeEdges(_serverEdges, nextEdges, _nodeIDs);\n          mergeEdges(prevEdges, nextEdges, _nodeIDs);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected before cursor `%s`, edges must ' + 'be fetched from the beginning of the list (`%s`).', args.before, clientPageInfo && clientPageInfo.getValue(START_CURSOR)) : void 0;\n          return;\n        }\n      } else {\n        // The connection was refetched from the beginning/end: replace edges\n        nextEdges = _serverEdges;\n      }\n    } else if (_serverEdges) {\n      nextEdges = _serverEdges;\n    } else {\n      nextEdges = prevEdges;\n    } // Update edges only if they were updated, the null check is\n    // for Flow (prevEdges could be null).\n\n\n    if (nextEdges != null && nextEdges !== prevEdges) {\n      _connection.setLinkedRecords(nextEdges, EDGES);\n    } // Page info should be updated even if no new edge were returned.\n\n\n    if (clientPageInfo && serverPageInfo) {\n      if (args.after == null && args.before == null) {\n        // The connection was refetched from the beginning/end: replace\n        // page_info\n        clientPageInfo.copyFieldsFrom(serverPageInfo);\n      } else if (args.before != null || args.after == null && args.last) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_PREV_PAGE), HAS_PREV_PAGE);\n        var startCursor = serverPageInfo.getValue(START_CURSOR);\n\n        if (typeof startCursor === 'string') {\n          clientPageInfo.setValue(startCursor, START_CURSOR);\n        }\n      } else if (args.after != null || args.before == null && args.first) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_NEXT_PAGE), HAS_NEXT_PAGE);\n        var endCursor = serverPageInfo.getValue(END_CURSOR);\n\n        if (typeof endCursor === 'string') {\n          clientPageInfo.setValue(endCursor, END_CURSOR);\n        }\n      }\n    }\n  }\n}\n/**\n * @public\n *\n * Given a record and the name of the schema field for which a connection was\n * fetched, returns the linked connection record.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * The `friends` connection record can be accessed with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   // Access fields on the connection:\n *   const edges = friends.getLinkedRecords('edges');\n * }\n * ```\n *\n * TODO: t15733312\n * Currently we haven't run into this case yet, but we need to add a `getConnections`\n * that returns an array of the connections under the same `key` regardless of the variables.\n */\n\n\nfunction getConnection(record, key, filters) {\n  var handleKey = getRelayHandleKey(CONNECTION, key, null);\n  return record.getLinkedRecord(handleKey, filters);\n}\n/**\n * @public\n *\n * Given a record ID, the key of a connection field, and optional filters used\n * to identify the connection, returns the connection ID.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<user-id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *     edges {\n *       node {\n *         id\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * The ID of the `friends` connection record can be accessed with:\n *\n * ```\n * store => {\n *   const connectionID = ConnectionHandler.getConnectionID('<user-id>', 'FriendsFragment_friends');\n * }\n * ```\n */\n\n\nfunction getConnectionID(recordID, key, filters) {\n  var handleKey = getRelayHandleKey(CONNECTION, key, null);\n  var storageKey = getStableStorageKey(handleKey, filters);\n  return generateClientID(recordID, storageKey);\n}\n/**\n * @public\n *\n * Inserts an edge after the given cursor, or at the end of the list if no\n * cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be appended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   ConnectionHandler.insertEdgeAfter(friends, edge);\n * }\n * ```\n */\n\n\nfunction insertEdgeAfter(record, newEdge, cursor) {\n  var _ConnectionInterface$2 = ConnectionInterface.get(),\n      CURSOR = _ConnectionInterface$2.CURSOR,\n      EDGES = _ConnectionInterface$2.EDGES;\n\n  var edges = record.getLinkedRecords(EDGES);\n\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n\n  var nextEdges;\n\n  if (cursor == null) {\n    nextEdges = edges.concat(newEdge);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n      nextEdges.push(edge);\n\n      if (edge == null) {\n        continue;\n      }\n\n      var edgeCursor = edge.getValue(CURSOR);\n\n      if (cursor === edgeCursor) {\n        nextEdges.push(newEdge);\n        foundCursor = true;\n      }\n    }\n\n    if (!foundCursor) {\n      nextEdges.push(newEdge);\n    }\n  }\n\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n/**\n * @public\n *\n * Creates an edge for a connection record, given a node and edge type.\n */\n\n\nfunction createEdge(store, record, node, edgeType) {\n  var _ConnectionInterface$3 = ConnectionInterface.get(),\n      NODE = _ConnectionInterface$3.NODE; // An index-based client ID could easily conflict (unless it was\n  // auto-incrementing, but there is nowhere to the store the id)\n  // Instead, construct a client ID based on the connection ID and node ID,\n  // which will only conflict if the same node is added to the same connection\n  // twice. This is acceptable since the `insertEdge*` functions ignore\n  // duplicates.\n\n\n  var edgeID = generateClientID(record.getDataID(), node.getDataID());\n  var edge = store.get(edgeID);\n\n  if (!edge) {\n    edge = store.create(edgeID, edgeType);\n  }\n\n  edge.setLinkedRecord(node, NODE);\n\n  if (edge.getValue('cursor') == null) {\n    // Always use null instead of undefined value for cursor\n    // to avoid considering it as missing data\n    edge.setValue(null, 'cursor');\n  }\n\n  return edge;\n}\n/**\n * @public\n *\n * Inserts an edge before the given cursor, or at the beginning of the list if\n * no cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be prepended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   ConnectionHandler.insertEdgeBefore(friends, edge);\n * }\n * ```\n */\n\n\nfunction insertEdgeBefore(record, newEdge, cursor) {\n  var _ConnectionInterface$4 = ConnectionInterface.get(),\n      CURSOR = _ConnectionInterface$4.CURSOR,\n      EDGES = _ConnectionInterface$4.EDGES;\n\n  var edges = record.getLinkedRecords(EDGES);\n\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n\n  var nextEdges;\n\n  if (cursor == null) {\n    nextEdges = [newEdge].concat(edges);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n\n      if (edge != null) {\n        var edgeCursor = edge.getValue(CURSOR);\n\n        if (cursor === edgeCursor) {\n          nextEdges.push(newEdge);\n          foundCursor = true;\n        }\n      }\n\n      nextEdges.push(edge);\n    }\n\n    if (!foundCursor) {\n      nextEdges.unshift(newEdge);\n    }\n  }\n\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n/**\n * @public\n *\n * Remove any edges whose `node.id` matches the given id.\n */\n\n\nfunction deleteNode(record, nodeID) {\n  var _ConnectionInterface$5 = ConnectionInterface.get(),\n      EDGES = _ConnectionInterface$5.EDGES,\n      NODE = _ConnectionInterface$5.NODE;\n\n  var edges = record.getLinkedRecords(EDGES);\n\n  if (!edges) {\n    return;\n  }\n\n  var nextEdges;\n\n  for (var ii = 0; ii < edges.length; ii++) {\n    var edge = edges[ii];\n    var node = edge && edge.getLinkedRecord(NODE);\n\n    if (node != null && node.getDataID() === nodeID) {\n      if (nextEdges === undefined) {\n        nextEdges = edges.slice(0, ii);\n      }\n    } else if (nextEdges !== undefined) {\n      nextEdges.push(edge);\n    }\n  }\n\n  if (nextEdges !== undefined) {\n    record.setLinkedRecords(nextEdges, EDGES);\n  }\n}\n/**\n * @internal\n *\n * Creates a copy of an edge with a unique ID based on per-connection-instance\n * incrementing edge index. This is necessary to avoid collisions between edges,\n * which can occur because (edge) client IDs are assigned deterministically\n * based on the path from the nearest node with an id.\n *\n * Example: if the first N edges of the same connection are refetched, the edges\n * from the second fetch will be assigned the same IDs as the first fetch, even\n * though the nodes they point to may be different (or the same and in different\n * order).\n */\n\n\nfunction buildConnectionEdge(store, connection, edge) {\n  if (edge == null) {\n    return edge;\n  }\n\n  var _ConnectionInterface$6 = ConnectionInterface.get(),\n      EDGES = _ConnectionInterface$6.EDGES;\n\n  var edgeIndex = connection.getValue(NEXT_EDGE_INDEX);\n  !(typeof edgeIndex === 'number') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ConnectionHandler: Expected %s to be a number, got `%s`.', NEXT_EDGE_INDEX, edgeIndex) : invariant(false) : void 0;\n  var edgeID = generateClientID(connection.getDataID(), EDGES, edgeIndex);\n  var connectionEdge = store.create(edgeID, edge.getType());\n  connectionEdge.copyFieldsFrom(edge);\n\n  if (connectionEdge.getValue('cursor') == null) {\n    // Always use null instead of undefined value for cursor\n    // to avoid considering it as missing data\n    connectionEdge.setValue(null, 'cursor');\n  }\n\n  connection.setValue(edgeIndex + 1, NEXT_EDGE_INDEX);\n  return connectionEdge;\n}\n/**\n * @internal\n *\n * Adds the source edges to the target edges, skipping edges with\n * duplicate node ids.\n */\n\n\nfunction mergeEdges(sourceEdges, targetEdges, nodeIDs) {\n  var _ConnectionInterface$7 = ConnectionInterface.get(),\n      NODE = _ConnectionInterface$7.NODE;\n\n  for (var ii = 0; ii < sourceEdges.length; ii++) {\n    var edge = sourceEdges[ii];\n\n    if (!edge) {\n      continue;\n    }\n\n    var node = edge.getLinkedRecord(NODE);\n    var nodeID = node && node.getDataID();\n\n    if (nodeID) {\n      if (nodeIDs.has(nodeID)) {\n        continue;\n      }\n\n      nodeIDs.add(nodeID);\n    }\n\n    targetEdges.push(edge);\n  }\n}\n\nmodule.exports = {\n  buildConnectionEdge: buildConnectionEdge,\n  createEdge: createEdge,\n  deleteNode: deleteNode,\n  getConnection: getConnection,\n  getConnectionID: getConnectionID,\n  insertEdgeAfter: insertEdgeAfter,\n  insertEdgeBefore: insertEdgeBefore,\n  update: update\n};", "var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar ConnectionHandler = require('./ConnectionHandler');\n\nvar ConnectionInterface = require('./ConnectionInterface');\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar DeleteRecordHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n\n    if (record != null) {\n      var idOrIds = record.getValue(payload.fieldKey);\n\n      if (typeof idOrIds === 'string') {\n        store[\"delete\"](idOrIds);\n      } else if (Array.isArray(idOrIds)) {\n        idOrIds.forEach(function (id) {\n          if (typeof id === 'string') {\n            store[\"delete\"](id);\n          }\n        });\n      }\n    }\n  }\n};\nvar DeleteEdgeHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n\n    if (record == null) {\n      return;\n    }\n\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var idOrIds = record.getValue(payload.fieldKey);\n    var idList = Array.isArray(idOrIds) ? idOrIds : [idOrIds];\n    idList.forEach(function (id) {\n      if (typeof id === 'string') {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var connectionID = _step.value;\n            var connection = store.get(connectionID);\n\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n\n            ConnectionHandler.deleteNode(connection, id);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    });\n  }\n};\nvar AppendEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeBefore)\n};\nvar AppendNodeHandler = {\n  update: nodeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependNodeHandler = {\n  update: nodeUpdater(ConnectionHandler.insertEdgeBefore)\n};\n\nfunction edgeUpdater(insertFn) {\n  return function (store, payload) {\n    var _serverEdges;\n\n    var record = store.get(payload.dataID);\n\n    if (record == null) {\n      return;\n    }\n\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var singleServerEdge, serverEdges;\n\n    try {\n      singleServerEdge = record.getLinkedRecord(payload.fieldKey, payload.args);\n    } catch (_unused) {}\n\n    if (!singleServerEdge) {\n      try {\n        serverEdges = record.getLinkedRecords(payload.fieldKey, payload.args);\n      } catch (_unused2) {}\n    }\n\n    if (singleServerEdge == null && serverEdges == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'MutationHandlers: Expected the server edge to be non-null.') : void 0;\n      return;\n    }\n\n    var _ConnectionInterface$ = ConnectionInterface.get(),\n        NODE = _ConnectionInterface$.NODE,\n        EDGES = _ConnectionInterface$.EDGES;\n\n    var serverEdgeList = (_serverEdges = serverEdges) !== null && _serverEdges !== void 0 ? _serverEdges : [singleServerEdge];\n\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(serverEdgeList),\n        _step2;\n\n    try {\n      var _loop = function _loop() {\n        var serverEdge = _step2.value;\n\n        if (serverEdge == null) {\n          return \"continue\";\n        }\n\n        var serverNode = serverEdge.getLinkedRecord('node');\n\n        if (!serverNode) {\n          return \"continue\";\n        }\n\n        var serverNodeId = serverNode.getDataID();\n\n        var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var connectionID = _step3.value;\n            var connection = store.get(connectionID);\n\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n\n            var nodeAlreadyExistsInConnection = (_connection$getLinked = connection.getLinkedRecords(EDGES)) === null || _connection$getLinked === void 0 ? void 0 : _connection$getLinked.some(function (edge) {\n              var _edge$getLinkedRecord;\n\n              return (edge === null || edge === void 0 ? void 0 : (_edge$getLinkedRecord = edge.getLinkedRecord(NODE)) === null || _edge$getLinkedRecord === void 0 ? void 0 : _edge$getLinkedRecord.getDataID()) === serverNodeId;\n            });\n\n            if (nodeAlreadyExistsInConnection) {\n              continue;\n            }\n\n            var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n            !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n            insertFn(connection, clientEdge);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      };\n\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _connection$getLinked;\n\n        var _ret = _loop();\n\n        if (_ret === \"continue\") continue;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  };\n}\n\nfunction nodeUpdater(insertFn) {\n  return function (store, payload) {\n    var _serverNodes;\n\n    var record = store.get(payload.dataID);\n\n    if (record == null) {\n      return;\n    }\n\n    var _payload$handleArgs = payload.handleArgs,\n        connections = _payload$handleArgs.connections,\n        edgeTypeName = _payload$handleArgs.edgeTypeName;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    !(edgeTypeName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected edge typename to be specified.') : invariant(false) : void 0;\n    var singleServerNode;\n    var serverNodes;\n\n    try {\n      singleServerNode = record.getLinkedRecord(payload.fieldKey, payload.args);\n    } catch (_unused3) {}\n\n    if (!singleServerNode) {\n      try {\n        serverNodes = record.getLinkedRecords(payload.fieldKey, payload.args);\n      } catch (_unused4) {}\n    }\n\n    if (singleServerNode == null && serverNodes == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'MutationHandlers: Expected target node to exist.') : void 0;\n      return;\n    }\n\n    var _ConnectionInterface$2 = ConnectionInterface.get(),\n        NODE = _ConnectionInterface$2.NODE,\n        EDGES = _ConnectionInterface$2.EDGES;\n\n    var serverNodeList = (_serverNodes = serverNodes) !== null && _serverNodes !== void 0 ? _serverNodes : [singleServerNode];\n\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(serverNodeList),\n        _step4;\n\n    try {\n      var _loop2 = function _loop2() {\n        var serverNode = _step4.value;\n\n        if (serverNode == null) {\n          return \"continue\";\n        }\n\n        var serverNodeId = serverNode.getDataID();\n\n        var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var connectionID = _step5.value;\n            var connection = store.get(connectionID);\n\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n\n            var nodeAlreadyExistsInConnection = (_connection$getLinked2 = connection.getLinkedRecords(EDGES)) === null || _connection$getLinked2 === void 0 ? void 0 : _connection$getLinked2.some(function (edge) {\n              var _edge$getLinkedRecord2;\n\n              return (edge === null || edge === void 0 ? void 0 : (_edge$getLinkedRecord2 = edge.getLinkedRecord(NODE)) === null || _edge$getLinkedRecord2 === void 0 ? void 0 : _edge$getLinkedRecord2.getDataID()) === serverNodeId;\n            });\n\n            if (nodeAlreadyExistsInConnection) {\n              continue;\n            }\n\n            var clientEdge = ConnectionHandler.createEdge(store, connection, serverNode, edgeTypeName);\n            !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n            insertFn(connection, clientEdge);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      };\n\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _connection$getLinked2;\n\n        var _ret2 = _loop2();\n\n        if (_ret2 === \"continue\") continue;\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n}\n\nmodule.exports = {\n  AppendEdgeHandler: AppendEdgeHandler,\n  DeleteRecordHandler: DeleteRecordHandler,\n  PrependEdgeHandler: PrependEdgeHandler,\n  AppendNodeHandler: AppendNodeHandler,\n  PrependNodeHandler: PrependNodeHandler,\n  DeleteEdgeHandler: DeleteEdgeHandler\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar ConnectionHandler = require('./connection/ConnectionHandler');\n\nvar MutationHandlers = require('./connection/MutationHandlers');\n\nvar invariant = require('invariant');\n\nfunction RelayDefaultHandlerProvider(handle) {\n  switch (handle) {\n    case 'connection':\n      return ConnectionHandler;\n\n    case 'deleteRecord':\n      return MutationHandlers.DeleteRecordHandler;\n\n    case 'deleteEdge':\n      return MutationHandlers.DeleteEdgeHandler;\n\n    case 'appendEdge':\n      return MutationHandlers.AppendEdgeHandler;\n\n    case 'prependEdge':\n      return MutationHandlers.PrependEdgeHandler;\n\n    case 'appendNode':\n      return MutationHandlers.AppendNodeHandler;\n\n    case 'prependNode':\n      return MutationHandlers.PrependNodeHandler;\n  }\n\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayDefaultHandlerProvider: No handler provided for `%s`.', handle) : invariant(false) : void 0;\n}\n\nmodule.exports = RelayDefaultHandlerProvider;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\"); // The type of a graphql`...` tagged template expression.\n\n\n/**\n * Runtime function to correspond to the `graphql` tagged template function.\n * All calls to this function should be transformed by the plugin.\n */\nfunction graphql(strings) {\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'graphql: Unexpected invocation at runtime. Either the Babel transform ' + 'was not set up, or it failed to identify this call site. Make sure it ' + 'is being used verbatim as `graphql`. Note also that there cannot be ' + 'a space between graphql and the backtick that follows.') : invariant(false) : void 0;\n}\n\nfunction getNode(taggedNode) {\n  var node = taggedNode;\n\n  if (typeof node === 'function') {\n    node = node();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayGraphQLTag: node `%s` unexpectedly wrapped in a function.', node.kind === 'Fragment' ? node.name : node.operation.name) : void 0;\n  } else if (node[\"default\"]) {\n    // Support for languages that work (best) with ES6 modules, such as TypeScript.\n    node = node[\"default\"];\n  }\n\n  return node;\n}\n\nfunction isFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.FRAGMENT;\n}\n\nfunction isRequest(node) {\n  var request = getNode(node);\n  return typeof request === 'object' && request !== null && request.kind === RelayConcreteNode.REQUEST;\n}\n\nfunction isUpdatableQuery(node) {\n  var updatableQuery = getNode(node);\n  return typeof updatableQuery === 'object' && updatableQuery !== null && updatableQuery.kind === RelayConcreteNode.UPDATABLE_QUERY;\n}\n\nfunction isInlineDataFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.INLINE_DATA_FRAGMENT;\n}\n\nfunction getFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\n\nfunction getPaginationFragment(taggedNode) {\n  var _fragment$metadata;\n\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.refetch;\n  var connection = refetch === null || refetch === void 0 ? void 0 : refetch.connection;\n\n  if (refetch === null || typeof refetch !== 'object' || connection === null || typeof connection !== 'object') {\n    return null;\n  }\n\n  return fragment;\n}\n\nfunction getRefetchableFragment(taggedNode) {\n  var _fragment$metadata2;\n\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata2 = fragment.metadata) === null || _fragment$metadata2 === void 0 ? void 0 : _fragment$metadata2.refetch;\n\n  if (refetch === null || typeof refetch !== 'object') {\n    return null;\n  }\n\n  return fragment;\n}\n\nfunction getRequest(taggedNode) {\n  var request = getNode(taggedNode);\n  !isRequest(request) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(request)) : invariant(false) : void 0;\n  return request;\n}\n\nfunction getUpdatableQuery(taggedNode) {\n  var updatableQuery = getNode(taggedNode);\n  !isUpdatableQuery(updatableQuery) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(updatableQuery)) : invariant(false) : void 0;\n  return updatableQuery;\n}\n\nfunction getInlineDataFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isInlineDataFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected an inline data fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\n\nmodule.exports = {\n  getFragment: getFragment,\n  getNode: getNode,\n  getPaginationFragment: getPaginationFragment,\n  getRefetchableFragment: getRefetchableFragment,\n  getRequest: getRequest,\n  getUpdatableQuery: getUpdatableQuery,\n  getInlineDataFragment: getInlineDataFragment,\n  graphql: graphql,\n  isFragment: isFragment,\n  isRequest: isRequest,\n  isUpdatableQuery: isUpdatableQuery,\n  isInlineDataFragment: isInlineDataFragment\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n/**\n * Determine if a given value is an object that implements the `Environment`\n * interface defined in `RelayStoreTypes`.\n *\n * Use a sigil for detection to avoid a realm-specific instanceof check, and to\n * aid in module tree-shaking to avoid requiring all of RelayRuntime just to\n * detect its environment.\n */\n\nfunction isRelayModernEnvironment(environment) {\n  return Boolean(environment && environment['@@RelayModernEnvironment']);\n}\n\nmodule.exports = isRelayModernEnvironment;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n/**\n * Recursively \"deep\" freezes the supplied object.\n *\n * For convenience, and for consistency with the behavior of `Object.freeze`,\n * returns the now-frozen original object.\n */\n\nfunction deepFreeze(object) {\n  Object.freeze(object);\n  Object.getOwnPropertyNames(object).forEach(function (name) {\n    // $FlowFixMe[prop-missing]\n    var property = object[name];\n\n    if (property && typeof property === 'object' && !Object.isFrozen(property)) {\n      deepFreeze(property);\n    }\n  });\n  return object;\n}\n\nmodule.exports = deepFreeze;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar stableCopy = require('./stableCopy');\n\nvar invariant = require('invariant');\n\n/**\n * Returns a stable identifier for the given pair of `RequestParameters` +\n * variables.\n */\nfunction getRequestIdentifier(parameters, variables) {\n  var requestID = parameters.cacheID != null ? parameters.cacheID : parameters.id;\n  !(requestID != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getRequestIdentifier: Expected request `%s` to have either a ' + 'valid `id` or `cacheID` property', parameters.name) : invariant(false) : void 0;\n  return requestID + JSON.stringify(stableCopy(variables));\n}\n\nmodule.exports = getRequestIdentifier;", "function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _require = require('./RelayStoreUtils'),\n    getArgumentValues = _require.getArgumentValues;\n\nvar invariant = require('invariant');\n/**\n * Determines the variables that are in scope for a fragment given the variables\n * in scope at the root query as well as any arguments applied at the fragment\n * spread via `@arguments`.\n *\n * Note that this is analagous to determining function arguments given a function call.\n */\n\n\nfunction getFragmentVariables(fragment, rootVariables, argumentVariables) {\n  var variables;\n  fragment.argumentDefinitions.forEach(function (definition) {\n    if (argumentVariables.hasOwnProperty(definition.name)) {\n      return;\n    }\n\n    variables = variables || (0, _objectSpread2[\"default\"])({}, argumentVariables);\n\n    switch (definition.kind) {\n      case 'LocalArgument':\n        variables[definition.name] = definition.defaultValue;\n        break;\n\n      case 'RootArgument':\n        if (!rootVariables.hasOwnProperty(definition.name)) {\n          /*\n           * Global variables passed as values of @arguments are not required to\n           * be declared unless they are used by the callee fragment or a\n           * descendant. In this case, the root variable may not be defined when\n           * resolving the callee's variables. The value is explicitly set to\n           * undefined to conform to the check in\n           * RelayStoreUtils.getStableVariableValue() that variable keys are all\n           * present.\n           */\n          variables[definition.name] = undefined;\n          break;\n        }\n\n        variables[definition.name] = rootVariables[definition.name];\n        break;\n\n      default:\n        definition;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayConcreteVariables: Unexpected node kind `%s` in fragment `%s`.', definition.kind, fragment.name) : invariant(false) : void 0;\n    }\n  });\n  return variables || argumentVariables;\n}\n/**\n * Determines the variables that are in scope for a given operation given values\n * for some/all of its arguments.\n * - extraneous input variables are filtered from the output\n * - missing variables are set to default values (if given in the\n * operation's definition).\n * - variables with provider modules are added\n */\n\n\nfunction getOperationVariables(operation, providedVariables, variables) {\n  var operationVariables = {};\n  operation.argumentDefinitions.forEach(function (def) {\n    var value = def.defaultValue;\n\n    if (variables[def.name] != null) {\n      value = variables[def.name];\n    }\n\n    operationVariables[def.name] = value;\n  });\n\n  if (providedVariables != null) {\n    Object.keys(providedVariables).forEach(function (varName) {\n      operationVariables[varName] = providedVariables[varName].get();\n    });\n  }\n\n  return operationVariables;\n}\n\nfunction getLocalVariables(currentVariables, argumentDefinitions, args) {\n  if (argumentDefinitions == null) {\n    return currentVariables;\n  }\n\n  var nextVariables = (0, _objectSpread2[\"default\"])({}, currentVariables);\n  var nextArgs = args ? getArgumentValues(args, currentVariables) : {};\n  argumentDefinitions.forEach(function (def) {\n    var _nextArgs$def$name;\n\n    // $FlowFixMe[cannot-write]\n    var value = (_nextArgs$def$name = nextArgs[def.name]) !== null && _nextArgs$def$name !== void 0 ? _nextArgs$def$name : def.defaultValue;\n    nextVariables[def.name] = value;\n  });\n  return nextVariables;\n}\n\nmodule.exports = {\n  getLocalVariables: getLocalVariables,\n  getFragmentVariables: getFragmentVariables,\n  getOperationVariables: getOperationVariables\n};", "\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./RelayConcreteVariables'),\n    getFragmentVariables = _require.getFragmentVariables;\n\nvar _require2 = require('./RelayStoreUtils'),\n    CLIENT_EDGE_TRAVERSAL_PATH = _require2.CLIENT_EDGE_TRAVERSAL_PATH,\n    FRAGMENT_OWNER_KEY = _require2.FRAGMENT_OWNER_KEY,\n    FRAGMENTS_KEY = _require2.FRAGMENTS_KEY,\n    ID_KEY = _require2.ID_KEY,\n    IS_WITHIN_UNMATCHED_TYPE_REFINEMENT = _require2.IS_WITHIN_UNMATCHED_TYPE_REFINEMENT;\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * @public\n *\n * Given the result `item` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment for that item.\n *\n * Example:\n *\n * Given two fragments as follows:\n *\n * ```\n * fragment Parent on User {\n *   id\n *   ...Child\n * }\n * fragment Child on User {\n *   name\n * }\n * ```\n *\n * And given some object `parent` that is the results of `Parent` for id \"4\",\n * the results of `Child` can be accessed by first getting a selector and then\n * using that selector to `lookup()` the results against the environment:\n *\n * ```\n * const childSelector = getSingularSelector(queryVariables, Child, parent);\n * const childData = environment.lookup(childSelector).data;\n * ```\n */\n\n\nfunction getSingularSelector(fragment, item) {\n  !(typeof item === 'object' && item !== null && !Array.isArray(item)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item)) : invariant(false) : void 0;\n  var dataID = item[ID_KEY];\n  var fragments = item[FRAGMENTS_KEY];\n  var mixedOwner = item[FRAGMENT_OWNER_KEY];\n  var isWithinUnmatchedTypeRefinement = item[IS_WITHIN_UNMATCHED_TYPE_REFINEMENT] === true;\n  var mixedClientEdgeTraversalPath = item[CLIENT_EDGE_TRAVERSAL_PATH];\n\n  if (typeof dataID === 'string' && typeof fragments === 'object' && fragments !== null && typeof fragments[fragment.name] === 'object' && fragments[fragment.name] !== null && typeof mixedOwner === 'object' && mixedOwner !== null && (mixedClientEdgeTraversalPath == null || Array.isArray(mixedClientEdgeTraversalPath))) {\n    var owner = mixedOwner;\n    var clientEdgeTraversalPath = mixedClientEdgeTraversalPath;\n    var argumentVariables = fragments[fragment.name];\n    var fragmentVariables = getFragmentVariables(fragment, owner.variables, argumentVariables);\n    return createReaderSelector(fragment, dataID, fragmentVariables, owner, isWithinUnmatchedTypeRefinement, clientEdgeTraversalPath);\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var stringifiedItem = JSON.stringify(item);\n\n    if (stringifiedItem.length > 499) {\n      stringifiedItem = stringifiedItem.substr(0, 498) + \"\\u2026\";\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`.', fragment.name, stringifiedItem, fragment.name) : void 0;\n  }\n\n  return null;\n}\n/**\n * @public\n *\n * Given the result `items` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment on those\n * items. This is similar to `getSingularSelector` but for \"plural\" fragments that\n * expect an array of results and therefore return an array of selectors.\n */\n\n\nfunction getPluralSelector(fragment, items) {\n  var selectors = null;\n  items.forEach(function (item, ii) {\n    var selector = item != null ? getSingularSelector(fragment, item) : null;\n\n    if (selector != null) {\n      selectors = selectors || [];\n      selectors.push(selector);\n    }\n  });\n\n  if (selectors == null) {\n    return null;\n  } else {\n    return {\n      kind: 'PluralReaderSelector',\n      selectors: selectors\n    };\n  }\n}\n\nfunction getSelector(fragment, item) {\n  if (item == null) {\n    return item;\n  } else if (fragment.metadata && fragment.metadata.plural === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getPluralSelector(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getSingularSelector(fragment, item);\n  }\n}\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the selectors for those fragments from the results.\n *\n * The canonical use-case for this function is ReactRelayFragmentContainer, which\n * uses this function to convert (props, fragments) into selectors so that it\n * can read the results to pass to the inner component.\n */\n\n\nfunction getSelectorsFromObject(fragments, object) {\n  var selectors = {};\n\n  for (var _key in fragments) {\n    if (fragments.hasOwnProperty(_key)) {\n      var fragment = fragments[_key];\n      var item = object[_key];\n      selectors[_key] = getSelector(fragment, item);\n    }\n  }\n\n  return selectors;\n}\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts a mapping of keys -> id(s) of the results.\n *\n * Similar to `getSelectorsFromObject()`, this function can be useful in\n * determining the \"identity\" of the props passed to a component.\n */\n\n\nfunction getDataIDsFromObject(fragments, object) {\n  var ids = {};\n\n  for (var _key2 in fragments) {\n    if (fragments.hasOwnProperty(_key2)) {\n      var fragment = fragments[_key2];\n      var item = object[_key2];\n      ids[_key2] = getDataIDsFromFragment(fragment, item);\n    }\n  }\n\n  return ids;\n}\n\nfunction getDataIDsFromFragment(fragment, item) {\n  if (item == null) {\n    return item;\n  } else if (fragment.metadata && fragment.metadata.plural === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getDataIDs(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getDataID(fragment, item);\n  }\n}\n/**\n * @internal\n */\n\n\nfunction getDataIDs(fragment, items) {\n  var ids = null;\n  items.forEach(function (item) {\n    var id = item != null ? getDataID(fragment, item) : null;\n\n    if (id != null) {\n      ids = ids || [];\n      ids.push(id);\n    }\n  });\n  return ids;\n}\n/**\n * @internal\n */\n\n\nfunction getDataID(fragment, item) {\n  !(typeof item === 'object' && item !== null && !Array.isArray(item)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item)) : invariant(false) : void 0;\n  var dataID = item[ID_KEY];\n\n  if (typeof dataID === 'string') {\n    return dataID;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`, or `null` is passed as the fragment ' + \"reference for `%s` if it's conditonally included and the condition isn't met.\", fragment.name, JSON.stringify(item), fragment.name, fragment.name) : void 0;\n  return null;\n}\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the merged variables that would be in scope for those\n * fragments/results.\n *\n * This can be useful in determing what varaibles were used to fetch the data\n * for a Relay container, for example.\n */\n\n\nfunction getVariablesFromObject(fragments, object) {\n  var variables = {};\n\n  for (var _key3 in fragments) {\n    if (fragments.hasOwnProperty(_key3)) {\n      var fragment = fragments[_key3];\n      var item = object[_key3];\n      var itemVariables = getVariablesFromFragment(fragment, item);\n      Object.assign(variables, itemVariables);\n    }\n  }\n\n  return variables;\n}\n\nfunction getVariablesFromFragment(fragment, item) {\n  var _fragment$metadata;\n\n  if (item == null) {\n    return {};\n  } else if (((_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.plural) === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getVariablesFromPluralFragment(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getVariablesFromSingularFragment(fragment, item) || {};\n  }\n}\n\nfunction getVariablesFromSingularFragment(fragment, item) {\n  var selector = getSingularSelector(fragment, item);\n\n  if (!selector) {\n    return null;\n  }\n\n  return selector.variables;\n}\n\nfunction getVariablesFromPluralFragment(fragment, items) {\n  var variables = {};\n  items.forEach(function (value, ii) {\n    if (value != null) {\n      var itemVariables = getVariablesFromSingularFragment(fragment, value);\n\n      if (itemVariables != null) {\n        Object.assign(variables, itemVariables);\n      }\n    }\n  });\n  return variables;\n}\n\nfunction areEqualSingularSelectors(thisSelector, thatSelector) {\n  return thisSelector.owner === thatSelector.owner && thisSelector.dataID === thatSelector.dataID && thisSelector.node === thatSelector.node && areEqual(thisSelector.variables, thatSelector.variables);\n}\n/**\n * @public\n *\n * Determine if two selectors are equal (represent the same selection). Note\n * that this function returns `false` when the two queries/fragments are\n * different objects, even if they select the same fields.\n */\n\n\nfunction areEqualSelectors(a, b) {\n  if ((a === null || a === void 0 ? void 0 : a.kind) === 'SingularReaderSelector' && (b === null || b === void 0 ? void 0 : b.kind) === 'SingularReaderSelector') {\n    return areEqualSingularSelectors(a, b);\n  } else if ((a === null || a === void 0 ? void 0 : a.kind) === 'PluralReaderSelector' && (b === null || b === void 0 ? void 0 : b.kind) === 'PluralReaderSelector') {\n    return a.selectors.length === b.selectors.length && a.selectors.every(function (s, i) {\n      return areEqualSingularSelectors(s, b.selectors[i]);\n    });\n  } else if (a == null && b == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction createReaderSelector(fragment, dataID, variables, request) {\n  var isWithinUnmatchedTypeRefinement = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var clientEdgeTraversalPath = arguments.length > 5 ? arguments[5] : undefined;\n  return {\n    kind: 'SingularReaderSelector',\n    dataID: dataID,\n    isWithinUnmatchedTypeRefinement: isWithinUnmatchedTypeRefinement,\n    clientEdgeTraversalPath: clientEdgeTraversalPath !== null && clientEdgeTraversalPath !== void 0 ? clientEdgeTraversalPath : null,\n    node: fragment,\n    variables: variables,\n    owner: request\n  };\n}\n\nfunction createNormalizationSelector(node, dataID, variables) {\n  return {\n    dataID: dataID,\n    node: node,\n    variables: variables\n  };\n}\n\nmodule.exports = {\n  areEqualSelectors: areEqualSelectors,\n  createReaderSelector: createReaderSelector,\n  createNormalizationSelector: createNormalizationSelector,\n  getDataIDsFromFragment: getDataIDsFromFragment,\n  getDataIDsFromObject: getDataIDsFromObject,\n  getSingularSelector: getSingularSelector,\n  getPluralSelector: getPluralSelector,\n  getSelector: getSelector,\n  getSelectorsFromObject: getSelectorsFromObject,\n  getVariablesFromSingularFragment: getVariablesFromSingularFragment,\n  getVariablesFromPluralFragment: getVariablesFromPluralFragment,\n  getVariablesFromFragment: getVariablesFromFragment,\n  getVariablesFromObject: getVariablesFromObject\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar deepFreeze = require('../util/deepFreeze');\n\nvar getRequestIdentifier = require('../util/getRequestIdentifier');\n\nvar _require = require('./RelayConcreteVariables'),\n    getOperationVariables = _require.getOperationVariables;\n\nvar _require2 = require('./RelayModernSelector'),\n    createNormalizationSelector = _require2.createNormalizationSelector,\n    createReaderSelector = _require2.createReaderSelector;\n\nvar _require3 = require('./RelayStoreUtils'),\n    ROOT_ID = _require3.ROOT_ID;\n/**\n * Creates an instance of the `OperationDescriptor` type defined in\n * `RelayStoreTypes` given an operation and some variables. The input variables\n * are filtered to exclude variables that do not match defined arguments on the\n * operation, and default values are populated for null values.\n */\n\n\nfunction createOperationDescriptor(request, variables, cacheConfig) {\n  var dataID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ROOT_ID;\n  var operation = request.operation;\n  var operationVariables = getOperationVariables(operation, request.params.providedVariables, variables);\n  var requestDescriptor = createRequestDescriptor(request, operationVariables, cacheConfig);\n  var operationDescriptor = {\n    fragment: createReaderSelector(request.fragment, dataID, operationVariables, requestDescriptor),\n    request: requestDescriptor,\n    root: createNormalizationSelector(operation, dataID, operationVariables)\n  };\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // Freezing properties short-circuits a deepFreeze of snapshots that contain\n    // an OperationDescriptor via their selector's owner, avoiding stack\n    // overflow on larger queries.\n    Object.freeze(operationDescriptor.fragment);\n    Object.freeze(operationDescriptor.root);\n    Object.freeze(operationDescriptor);\n  }\n\n  return operationDescriptor;\n}\n\nfunction createRequestDescriptor(request, variables, cacheConfig) {\n  var requestDescriptor = {\n    identifier: getRequestIdentifier(request.params, variables),\n    node: request,\n    variables: variables,\n    cacheConfig: cacheConfig\n  };\n\n  if (process.env.NODE_ENV !== \"production\") {\n    deepFreeze(variables);\n    Object.freeze(request);\n    Object.freeze(requestDescriptor);\n  }\n\n  return requestDescriptor;\n}\n\nmodule.exports = {\n  createOperationDescriptor: createOperationDescriptor,\n  createRequestDescriptor: createRequestDescriptor\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\n\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n\n        break;\n\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n\n        break;\n\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\n\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\n\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n      connectionInfo = config.connectionInfo,\n      edgeName = config.edgeName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var parent = store.get(parentID);\n\n    if (!parent) {\n      return;\n    }\n\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var serverEdge = payload.getLinkedRecord(edgeName);\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connectionInfo),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var info = _step.value;\n\n        if (!serverEdge) {\n          continue;\n        }\n\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n\n        if (!connection) {\n          continue;\n        }\n\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n\n        if (!clientEdge) {\n          continue;\n        }\n\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\n\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n      connectionKeys = config.connectionKeys,\n      pathToConnection = config.pathToConnection,\n      deletedIDFieldName = config.deletedIDFieldName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n\n    var deleteIDs = []; // the type of data should come from a type parameter associated with ConcreteRequest,\n    // but ConcreteRequest does not contain a type parameter. Hence, we use a FlowFixMe.\n    // $FlowFixMe[incompatible-use] see above\n\n    var deletedIDField = data[rootField];\n\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(deletedIDFieldName),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var eachField = _step2.value;\n\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\n\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n\n  if (!parent) {\n    return;\n  }\n\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n\n  var recordProxy = parent;\n\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  } // Should never enter loop except edge cases\n\n\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n\n  var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connectionKeys),\n      _step3;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n    getRequest = _require.getRequest;\n\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\n\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require2.createOperationDescriptor;\n\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\n\nvar invariant = require('invariant');\n\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction applyOptimisticMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n\n  var optimisticUpdater = config.optimisticUpdater;\n  var configs = config.configs,\n      optimisticResponse = config.optimisticResponse,\n      variables = config.variables;\n  var operation = createOperationDescriptor(mutation, variables);\n\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater);\n\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n  }\n\n  return environment.applyMutation({\n    operation: operation,\n    response: optimisticResponse,\n    updater: optimisticUpdater\n  });\n}\n\nmodule.exports = applyOptimisticMutation;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nfunction commitLocalUpdate(environment, updater) {\n  environment.commitUpdate(updater);\n}\n\nmodule.exports = commitLocalUpdate;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _require = require('../util/RelayConcreteNode'),\n    ACTOR_CHANGE = _require.ACTOR_CHANGE,\n    CLIENT_COMPONENT = _require.CLIENT_COMPONENT,\n    CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n    CONDITION = _require.CONDITION,\n    DEFER = _require.DEFER,\n    FLIGHT_FIELD = _require.FLIGHT_FIELD,\n    FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n    INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n    LINKED_FIELD = _require.LINKED_FIELD,\n    LINKED_HANDLE = _require.LINKED_HANDLE,\n    MODULE_IMPORT = _require.MODULE_IMPORT,\n    SCALAR_FIELD = _require.SCALAR_FIELD,\n    SCALAR_HANDLE = _require.SCALAR_HANDLE,\n    STREAM = _require.STREAM,\n    TYPE_DISCRIMINATOR = _require.TYPE_DISCRIMINATOR;\n\nvar warning = require(\"fbjs/lib/warning\");\n\n// $FlowFixMe[method-unbinding] added when improving typing for this parameters\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar validateMutation = function validateMutation() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n\n      deepLoc = deepLoc[key];\n    });\n  };\n\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {},\n      moduleImportPaths: new Set()\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case CONDITION:\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n\n      case CLIENT_COMPONENT:\n      case FRAGMENT_SPREAD:\n        validateSelections(optimisticResponse, selection.fragment.selections, context);\n        return;\n\n      case SCALAR_FIELD:\n      case LINKED_FIELD:\n      case FLIGHT_FIELD:\n        return validateField(optimisticResponse, selection, context);\n\n      case ACTOR_CHANGE:\n        return validateField(optimisticResponse, selection.linkedField, context);\n\n      case INLINE_FRAGMENT:\n        var type = selection.type;\n        var isConcreteType = selection.abstractKey == null;\n        validateAbstractKey(context, selection.abstractKey);\n        selection.selections.forEach(function (subselection) {\n          if (isConcreteType && optimisticResponse.__typename !== type) {\n            return;\n          }\n\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n\n      case CLIENT_EXTENSION:\n        selection.selections.forEach(function (subselection) {\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n\n      case MODULE_IMPORT:\n        return validateModuleImport(context);\n\n      case TYPE_DISCRIMINATOR:\n        return validateAbstractKey(context, selection.abstractKey);\n\n      case LINKED_HANDLE:\n      case SCALAR_HANDLE:\n      case DEFER:\n      case STREAM:\n        {\n          // TODO(T35864292) - Add missing validations for these types\n          return;\n        }\n\n      default:\n        selection;\n        return;\n    }\n  };\n\n  var validateModuleImport = function validateModuleImport(context) {\n    context.moduleImportPaths.add(context.path);\n  };\n\n  var validateAbstractKey = function validateAbstractKey(context, abstractKey) {\n    if (abstractKey != null) {\n      var path = \"\".concat(context.path, \".\").concat(abstractKey);\n      context.visitedPaths.add(path);\n    }\n  };\n\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n\n    switch (field.kind) {\n      case SCALAR_FIELD:\n        if (hasOwnProperty.call(optimisticResponse, fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n\n        return;\n\n      case LINKED_FIELD:\n        var selections = field.selections;\n\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n\n      case FLIGHT_FIELD:\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n\n        throw new Error('validateMutation: Flight fields are not compatible with ' + 'optimistic updates, as React does not have the component code ' + 'necessary to process new data on the client. Instead, you ' + 'should update your code to require a full refetch of the Flight ' + 'field so your UI can be updated.');\n    }\n  };\n\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key); // if it's a module import path we don't have an ast so we cannot validate it\n\n      if (context.moduleImportPaths.has(path)) {\n        return;\n      }\n\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n          path: path\n        }));\n      }\n    });\n  };\n}\n\nmodule.exports = validateMutation;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _require = require('../query/GraphQLTag'),\n    getRequest = _require.getRequest;\n\nvar _require2 = require('../store/ClientID'),\n    generateUniqueClientID = _require2.generateUniqueClientID;\n\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\n\nvar _require3 = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require3.createOperationDescriptor;\n\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\n\nvar validateMutation = require('./validateMutation');\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction commitMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n\n  if (mutation.kind !== 'Request') {\n    throw new Error('commitMutation: Expected mutation to be of type request');\n  }\n\n  var optimisticResponse = config.optimisticResponse,\n      optimisticUpdater = config.optimisticUpdater,\n      updater = config.updater;\n  var configs = config.configs,\n      cacheConfig = config.cacheConfig,\n      onError = config.onError,\n      onUnsubscribe = config.onUnsubscribe,\n      variables = config.variables,\n      uploadables = config.uploadables;\n  var operation = createOperationDescriptor(mutation, variables, cacheConfig, generateUniqueClientID()); // TODO: remove this check after we fix flow.\n\n  if (typeof optimisticResponse === 'function') {\n    optimisticResponse = optimisticResponse();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'commitMutation: Expected `optimisticResponse` to be an object, ' + 'received a function.') : void 0;\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optimisticResponse instanceof Object) {\n      validateMutation(optimisticResponse, mutation, variables);\n    }\n  }\n\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater, updater);\n\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n    updater = _RelayDeclarativeMuta.updater;\n  }\n\n  var errors = [];\n  var subscription = environment.executeMutation({\n    operation: operation,\n    optimisticResponse: optimisticResponse,\n    optimisticUpdater: optimisticUpdater,\n    updater: updater,\n    uploadables: uploadables\n  }).subscribe({\n    next: function next(payload) {\n      var _config$onNext;\n\n      if (Array.isArray(payload)) {\n        payload.forEach(function (item) {\n          if (item.errors) {\n            errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(item.errors));\n          }\n        });\n      } else {\n        if (payload.errors) {\n          errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(payload.errors));\n        }\n      }\n\n      (_config$onNext = config.onNext) === null || _config$onNext === void 0 ? void 0 : _config$onNext.call(config);\n    },\n    complete: function complete() {\n      var onCompleted = config.onCompleted;\n\n      if (onCompleted) {\n        var snapshot = environment.lookup(operation.fragment);\n        onCompleted(snapshot.data, errors.length !== 0 ? errors : null);\n      }\n    },\n    error: onError,\n    unsubscribe: onUnsubscribe\n  });\n  return {\n    dispose: subscription.unsubscribe\n  };\n}\n\nmodule.exports = commitMutation;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar debugCache = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\n\nfunction withProvidedVariables(userSuppliedVariables, providedVariables) {\n  if (providedVariables != null) {\n    var operationVariables = {};\n    Object.assign(operationVariables, userSuppliedVariables);\n    Object.keys(providedVariables).forEach(function (varName) {\n      var providerFunction = providedVariables[varName].get;\n      var providerResult = providerFunction(); // people like to ignore these warnings, so use the cache to\n      // enforce that we only compute the value the first time\n\n      if (!debugCache.has(providerFunction)) {\n        debugCache.set(providerFunction, providerResult);\n        operationVariables[varName] = providerResult;\n      } else {\n        var cachedResult = debugCache.get(providerFunction);\n\n        if (process.env.NODE_ENV !== \"production\") {\n          process.env.NODE_ENV !== \"production\" ? warning(areEqual(providerResult, cachedResult), 'Relay: Expected function `%s` for provider `%s` to be a pure function, ' + 'but got conflicting return values `%s` and `%s`', providerFunction.name, varName, providerResult, cachedResult) : void 0;\n        }\n\n        operationVariables[varName] = cachedResult;\n      }\n    });\n    return operationVariables;\n  } else {\n    return userSuppliedVariables;\n  }\n}\n\nmodule.exports = withProvidedVariables;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\n\nmodule.exports = isPromise;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar isPromise = require('../util/isPromise');\n/**\n * A Subscription object is returned from .subscribe(), which can be\n * unsubscribed or checked to see if the resulting subscription has closed.\n */\n\n\nvar hostReportError = swallowError;\n/**\n * Limited implementation of ESObservable, providing the limited set of behavior\n * Relay networking requires.\n *\n * Observables retain the benefit of callbacks which can be called\n * synchronously, avoiding any UI jitter, while providing a compositional API,\n * which simplifies logic and prevents mishandling of errors compared to\n * the direct use of callback functions.\n *\n * ESObservable: https://github.com/tc39/proposal-observable\n */\n\nvar RelayObservable = /*#__PURE__*/function () {\n  RelayObservable.create = function create(source) {\n    return new RelayObservable(source);\n  } // Use RelayObservable.create()\n  ;\n\n  function RelayObservable(source) {\n    if (process.env.NODE_ENV !== \"production\") {\n      // Early runtime errors for ill-formed sources.\n      if (!source || typeof source !== 'function') {\n        throw new Error('Source must be a Function: ' + String(source));\n      }\n    }\n\n    this._source = source;\n  }\n  /**\n   * When an emitted error event is not handled by an Observer, it is reported\n   * to the host environment (what the ESObservable spec refers to as\n   * \"HostReportErrors()\").\n   *\n   * The default implementation in development rethrows thrown errors, and\n   * logs emitted error events to the console, while in production does nothing\n   * (swallowing unhandled errors).\n   *\n   * Called during application initialization, this method allows\n   * application-specific handling of unhandled errors. Allowing, for example,\n   * integration with error logging or developer tools.\n   *\n   * A second parameter `isUncaughtThrownError` is true when the unhandled error\n   * was thrown within an Observer handler, and false when the unhandled error\n   * was an unhandled emitted event.\n   *\n   *  - Uncaught thrown errors typically represent avoidable errors thrown from\n   *    application code, which should be handled with a try/catch block, and\n   *    usually have useful stack traces.\n   *\n   *  - Unhandled emitted event errors typically represent unavoidable events in\n   *    application flow such as network failure, and may not have useful\n   *    stack traces.\n   */\n\n\n  RelayObservable.onUnhandledError = function onUnhandledError(callback) {\n    hostReportError = callback;\n  }\n  /**\n   * Accepts various kinds of data sources, and always returns a RelayObservable\n   * useful for accepting the result of a user-provided FetchFunction.\n   */\n  ;\n\n  RelayObservable.from = function from(obj) {\n    return isObservable(obj) ? fromObservable(obj) : isPromise(obj) ? fromPromise(obj) : fromValue(obj);\n  }\n  /**\n   * Similar to promise.catch(), observable.catch() handles error events, and\n   * provides an alternative observable to use in it's place.\n   *\n   * If the catch handler throws a new error, it will appear as an error event\n   * on the resulting Observable.\n   */\n  ;\n\n  var _proto = RelayObservable.prototype;\n\n  _proto[\"catch\"] = function _catch(fn) {\n    var _this = this;\n\n    return RelayObservable.create(function (sink) {\n      var subscription;\n\n      _this.subscribe({\n        start: function start(sub) {\n          subscription = sub;\n        },\n        next: sink.next,\n        complete: sink.complete,\n        error: function error(_error2) {\n          try {\n            fn(_error2).subscribe({\n              start: function start(sub) {\n                subscription = sub;\n              },\n              next: sink.next,\n              complete: sink.complete,\n              error: sink.error\n            });\n          } catch (error2) {\n            sink.error(error2, true\n            /* isUncaughtThrownError */\n            );\n          }\n        }\n      });\n\n      return function () {\n        return subscription.unsubscribe();\n      };\n    });\n  }\n  /**\n   * Returns a new Observable which first yields values from this Observable,\n   * then yields values from the next Observable. This is useful for chaining\n   * together Observables of finite length.\n   */\n  ;\n\n  _proto.concat = function concat(next) {\n    var _this2 = this;\n\n    return RelayObservable.create(function (sink) {\n      var current;\n\n      _this2.subscribe({\n        start: function start(subscription) {\n          current = subscription;\n        },\n        next: sink.next,\n        error: sink.error,\n        complete: function complete() {\n          current = next.subscribe(sink);\n        }\n      });\n\n      return function () {\n        current && current.unsubscribe();\n      };\n    });\n  }\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the provided Observer is called to perform a side-effects\n   * for all events emitted by the source.\n   *\n   * Any errors that are thrown in the side-effect Observer are unhandled, and\n   * do not affect the source Observable or its Observer.\n   *\n   * This is useful for when debugging your Observables or performing other\n   * side-effects such as logging or performance monitoring.\n   */\n  ;\n\n  _proto[\"do\"] = function _do(observer) {\n    var _this3 = this;\n\n    return RelayObservable.create(function (sink) {\n      var both = function both(action) {\n        return function () {\n          try {\n            observer[action] && observer[action].apply(observer, arguments);\n          } catch (error) {\n            hostReportError(error, true\n            /* isUncaughtThrownError */\n            );\n          }\n\n          sink[action] && sink[action].apply(sink, arguments);\n        };\n      };\n\n      return _this3.subscribe({\n        start: both('start'),\n        next: both('next'),\n        error: both('error'),\n        complete: both('complete'),\n        unsubscribe: both('unsubscribe')\n      });\n    });\n  }\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the finally callback is performed after completion,\n   * whether normal or due to error or unsubscription.\n   *\n   * This is useful for cleanup such as resource finalization.\n   */\n  ;\n\n  _proto[\"finally\"] = function _finally(fn) {\n    var _this4 = this;\n\n    return RelayObservable.create(function (sink) {\n      var subscription = _this4.subscribe(sink);\n\n      return function () {\n        subscription.unsubscribe();\n        fn();\n      };\n    });\n  }\n  /**\n   * Returns a new Observable which is identical to this one, unless this\n   * Observable completes before yielding any values, in which case the new\n   * Observable will yield the values from the alternate Observable.\n   *\n   * If this Observable does yield values, the alternate is never subscribed to.\n   *\n   * This is useful for scenarios where values may come from multiple sources\n   * which should be tried in order, i.e. from a cache before a network.\n   */\n  ;\n\n  _proto.ifEmpty = function ifEmpty(alternate) {\n    var _this5 = this;\n\n    return RelayObservable.create(function (sink) {\n      var hasValue = false;\n\n      var current = _this5.subscribe({\n        next: function next(value) {\n          hasValue = true;\n          sink.next(value);\n        },\n        error: sink.error,\n        complete: function complete() {\n          if (hasValue) {\n            sink.complete();\n          } else {\n            current = alternate.subscribe(sink);\n          }\n        }\n      });\n\n      return function () {\n        current.unsubscribe();\n      };\n    });\n  }\n  /**\n   * Observable's primary API: returns an unsubscribable Subscription to the\n   * source of this Observable.\n   *\n   * Note: A sink may be passed directly to .subscribe() as its observer,\n   * allowing for easily composing Observables.\n   */\n  ;\n\n  _proto.subscribe = function subscribe(observer) {\n    if (process.env.NODE_ENV !== \"production\") {\n      // Early runtime errors for ill-formed observers.\n      if (!observer || typeof observer !== 'object') {\n        throw new Error('Observer must be an Object with callbacks: ' + String(observer));\n      }\n    }\n\n    return _subscribe(this._source, observer);\n  }\n  /**\n   * Returns a new Observerable where each value has been transformed by\n   * the mapping function.\n   */\n  ;\n\n  _proto.map = function map(fn) {\n    var _this6 = this;\n\n    return RelayObservable.create(function (sink) {\n      var subscription = _this6.subscribe({\n        complete: sink.complete,\n        error: sink.error,\n        next: function next(value) {\n          try {\n            var mapValue = fn(value);\n            sink.next(mapValue);\n          } catch (error) {\n            sink.error(error, true\n            /* isUncaughtThrownError */\n            );\n          }\n        }\n      });\n\n      return function () {\n        subscription.unsubscribe();\n      };\n    });\n  }\n  /**\n   * Returns a new Observable where each value is replaced with a new Observable\n   * by the mapping function, the results of which returned as a single\n   * merged Observable.\n   */\n  ;\n\n  _proto.mergeMap = function mergeMap(fn) {\n    var _this7 = this;\n\n    return RelayObservable.create(function (sink) {\n      var subscriptions = [];\n\n      function start(subscription) {\n        this._sub = subscription;\n        subscriptions.push(subscription);\n      }\n\n      function complete() {\n        subscriptions.splice(subscriptions.indexOf(this._sub), 1);\n\n        if (subscriptions.length === 0) {\n          sink.complete();\n        }\n      }\n\n      _this7.subscribe({\n        start: start,\n        next: function next(value) {\n          try {\n            if (!sink.closed) {\n              RelayObservable.from(fn(value)).subscribe({\n                start: start,\n                next: sink.next,\n                error: sink.error,\n                complete: complete\n              });\n            }\n          } catch (error) {\n            sink.error(error, true\n            /* isUncaughtThrownError */\n            );\n          }\n        },\n        error: sink.error,\n        complete: complete\n      });\n\n      return function () {\n        subscriptions.forEach(function (sub) {\n          return sub.unsubscribe();\n        });\n        subscriptions.length = 0;\n      };\n    });\n  }\n  /**\n   * Returns a new Observable which first mirrors this Observable, then when it\n   * completes, waits for `pollInterval` milliseconds before re-subscribing to\n   * this Observable again, looping in this manner until unsubscribed.\n   *\n   * The returned Observable never completes.\n   */\n  ;\n\n  _proto.poll = function poll(pollInterval) {\n    var _this8 = this;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof pollInterval !== 'number' || pollInterval <= 0) {\n        throw new Error('RelayObservable: Expected pollInterval to be positive, got: ' + pollInterval);\n      }\n    }\n\n    return RelayObservable.create(function (sink) {\n      var subscription;\n      var timeout;\n\n      var poll = function poll() {\n        subscription = _this8.subscribe({\n          next: sink.next,\n          error: sink.error,\n          complete: function complete() {\n            timeout = setTimeout(poll, pollInterval);\n          }\n        });\n      };\n\n      poll();\n      return function () {\n        clearTimeout(timeout);\n        subscription.unsubscribe();\n      };\n    });\n  }\n  /**\n   * Returns a Promise which resolves when this Observable yields a first value\n   * or when it completes with no value.\n   *\n   * NOTE: The source Observable is *NOT* canceled when the returned Promise\n   * resolves. The Observable is always run to completion.\n   */\n  ;\n\n  _proto.toPromise = function toPromise() {\n    var _this9 = this;\n\n    return new Promise(function (resolve, reject) {\n      var resolved = false;\n\n      _this9.subscribe({\n        next: function next(val) {\n          if (!resolved) {\n            resolved = true;\n            resolve(val);\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n\n  return RelayObservable;\n}(); // Use declarations to teach Flow how to check isObservable.\n\n\nfunction isObservable(obj) {\n  return typeof obj === 'object' && obj !== null && typeof obj.subscribe === 'function';\n}\n\nfunction fromObservable(obj) {\n  return obj instanceof RelayObservable ? obj : RelayObservable.create(function (sink) {\n    return obj.subscribe(sink);\n  });\n}\n\nfunction fromPromise(promise) {\n  return RelayObservable.create(function (sink) {\n    // Since sink methods do not throw, the resulting Promise can be ignored.\n    promise.then(function (value) {\n      sink.next(value);\n      sink.complete();\n    }, sink.error);\n  });\n}\n\nfunction fromValue(value) {\n  return RelayObservable.create(function (sink) {\n    sink.next(value);\n    sink.complete();\n  });\n}\n\nfunction _subscribe(source, observer) {\n  var closed = false;\n  var cleanup; // Ideally we would simply describe a `get closed()` method on the Sink and\n  // Subscription objects below, however not all flow environments we expect\n  // Relay to be used within will support property getters, and many minifier\n  // tools still do not support ES5 syntax. Instead, we can use defineProperty.\n\n  var withClosed = function withClosed(obj) {\n    return Object.defineProperty(obj, 'closed', {\n      get: function get() {\n        return closed;\n      }\n    });\n  };\n\n  function doCleanup() {\n    if (cleanup) {\n      if (cleanup.unsubscribe) {\n        cleanup.unsubscribe();\n      } else {\n        try {\n          cleanup();\n        } catch (error) {\n          hostReportError(error, true\n          /* isUncaughtThrownError */\n          );\n        }\n      }\n\n      cleanup = undefined;\n    }\n  } // Create a Subscription.\n\n\n  var subscription = withClosed({\n    unsubscribe: function unsubscribe() {\n      if (!closed) {\n        closed = true; // Tell Observer that unsubscribe was called.\n\n        try {\n          observer.unsubscribe && observer.unsubscribe(subscription);\n        } catch (error) {\n          hostReportError(error, true\n          /* isUncaughtThrownError */\n          );\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  }); // Tell Observer that observation is about to begin.\n\n  try {\n    observer.start && observer.start(subscription);\n  } catch (error) {\n    hostReportError(error, true\n    /* isUncaughtThrownError */\n    );\n  } // If closed already, don't bother creating a Sink.\n\n\n  if (closed) {\n    return subscription;\n  } // Create a Sink respecting subscription state and cleanup.\n\n\n  var sink = withClosed({\n    next: function next(value) {\n      if (!closed && observer.next) {\n        try {\n          observer.next(value);\n        } catch (error) {\n          hostReportError(error, true\n          /* isUncaughtThrownError */\n          );\n        }\n      }\n    },\n    error: function error(_error3, isUncaughtThrownError) {\n      if (closed || !observer.error) {\n        closed = true;\n        hostReportError(_error3, isUncaughtThrownError || false);\n        doCleanup();\n      } else {\n        closed = true;\n\n        try {\n          observer.error(_error3);\n        } catch (error2) {\n          hostReportError(error2, true\n          /* isUncaughtThrownError */\n          );\n        } finally {\n          doCleanup();\n        }\n      }\n    },\n    complete: function complete() {\n      if (!closed) {\n        closed = true;\n\n        try {\n          observer.complete && observer.complete();\n        } catch (error) {\n          hostReportError(error, true\n          /* isUncaughtThrownError */\n          );\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  }); // If anything goes wrong during observing the source, handle the error.\n\n  try {\n    cleanup = source(sink);\n  } catch (error) {\n    sink.error(error, true\n    /* isUncaughtThrownError */\n    );\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // Early runtime errors for ill-formed returned cleanup.\n    if (cleanup !== undefined && typeof cleanup !== 'function' && (!cleanup || typeof cleanup.unsubscribe !== 'function')) {\n      throw new Error('Returned cleanup function which cannot be called: ' + String(cleanup));\n    }\n  } // If closed before the source function existed, cleanup now.\n\n\n  if (closed) {\n    doCleanup();\n  }\n\n  return subscription;\n}\n\nfunction swallowError(_error, _isUncaughtThrownError) {// do nothing.\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  // Default implementation of HostReportErrors() in development builds.\n  // Can be replaced by the host application environment.\n  RelayObservable.onUnhandledError(function (error, isUncaughtThrownError) {\n    if (typeof fail === 'function') {\n      // In test environments (Jest), fail() immediately fails the current test.\n      fail(String(error));\n    } else if (isUncaughtThrownError) {\n      // Rethrow uncaught thrown errors on the next frame to avoid breaking\n      // current logic.\n      setTimeout(function () {\n        throw error;\n      });\n    } else if (typeof console !== 'undefined') {\n      // Otherwise, log the unhandled error for visibility.\n      // eslint-disable-next-line no-console\n      console.error('RelayObservable: Unhandled Error', error);\n    }\n  });\n}\n\nmodule.exports = RelayObservable;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayObservable = require('./RelayObservable');\n/**\n * Converts a FetchFunction into an ExecuteFunction for use by RelayNetwork.\n */\n\n\nfunction convertFetch(fn) {\n  return function fetch(request, variables, cacheConfig, uploadables, logRequestInfo) {\n    var result = fn(request, variables, cacheConfig, uploadables, logRequestInfo); // Note: We allow FetchFunction to directly return Error to indicate\n    // a failure to fetch. To avoid handling this special case throughout the\n    // Relay codebase, it is explicitly handled here.\n\n    if (result instanceof Error) {\n      return RelayObservable.create(function (sink) {\n        return sink.error(result);\n      });\n    }\n\n    return RelayObservable.from(result);\n  };\n}\n\nmodule.exports = {\n  convertFetch: convertFetch\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar withProvidedVariables = require('../util/withProvidedVariables');\n\nvar _require = require('./ConvertToExecuteFunction'),\n    convertFetch = _require.convertFetch;\n\nvar invariant = require('invariant');\n/**\n * Creates an implementation of the `Network` interface defined in\n * `RelayNetworkTypes` given `fetch` and `subscribe` functions.\n */\n\n\nfunction create(fetchFn, subscribe) {\n  // Convert to functions that returns RelayObservable.\n  var observeFetch = convertFetch(fetchFn);\n\n  function execute(request, variables, cacheConfig, uploadables, logRequestInfo) {\n    var operationVariables = withProvidedVariables(variables, request.providedVariables);\n\n    if (request.operationKind === 'subscription') {\n      !subscribe ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: This network layer does not support Subscriptions. ' + 'To use Subscriptions, provide a custom network layer.') : invariant(false) : void 0;\n      !!uploadables ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: Cannot provide uploadables while subscribing.') : invariant(false) : void 0;\n      return subscribe(request, operationVariables, cacheConfig);\n    }\n\n    var pollInterval = cacheConfig.poll;\n\n    if (pollInterval != null) {\n      !!uploadables ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: Cannot provide uploadables while polling.') : invariant(false) : void 0;\n      return observeFetch(request, operationVariables, {\n        force: true\n      }).poll(pollInterval);\n    }\n\n    return observeFetch(request, operationVariables, cacheConfig, uploadables, logRequestInfo);\n  }\n\n  return {\n    execute: execute\n  };\n}\n\nmodule.exports = {\n  create: create\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar stableCopy = require('../util/stableCopy');\n\nvar invariant = require('invariant');\n\n/**\n * A cache for storing query responses, featuring:\n * - `get` with TTL\n * - cache size limiting, with least-recently *updated* entries purged first\n */\nvar RelayQueryResponseCache = /*#__PURE__*/function () {\n  function RelayQueryResponseCache(_ref) {\n    var size = _ref.size,\n        ttl = _ref.ttl;\n    !(size > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max cache size to be > 0, got ' + '`%s`.', size) : invariant(false) : void 0;\n    !(ttl > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max ttl to be > 0, got `%s`.', ttl) : invariant(false) : void 0;\n    this._responses = new Map();\n    this._size = size;\n    this._ttl = ttl;\n  }\n\n  var _proto = RelayQueryResponseCache.prototype;\n\n  _proto.clear = function clear() {\n    this._responses.clear();\n  };\n\n  _proto.get = function get(queryID, variables) {\n    var _this = this;\n\n    var cacheKey = getCacheKey(queryID, variables);\n\n    this._responses.forEach(function (response, key) {\n      if (!isCurrent(response.fetchTime, _this._ttl)) {\n        _this._responses[\"delete\"](key);\n      }\n    });\n\n    var response = this._responses.get(cacheKey);\n\n    if (response == null) {\n      return null;\n    }\n\n    if (Array.isArray(response.payload)) {\n      return response.payload.map(function (payload) {\n        return (// $FlowFixMe[incompatible-cast]\n          (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, payload), {}, {\n            extensions: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, payload.extensions), {}, {\n              cacheTimestamp: response.fetchTime\n            })\n          })\n        );\n      });\n    } // $FlowFixMe[incompatible-cast]\n\n\n    return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, response.payload), {}, {\n      extensions: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, response.payload.extensions), {}, {\n        cacheTimestamp: response.fetchTime\n      })\n    });\n  };\n\n  _proto.set = function set(queryID, variables, payload) {\n    var fetchTime = Date.now();\n    var cacheKey = getCacheKey(queryID, variables);\n\n    this._responses[\"delete\"](cacheKey); // deletion resets key ordering\n\n\n    this._responses.set(cacheKey, {\n      fetchTime: fetchTime,\n      payload: payload\n    }); // Purge least-recently updated key when max size reached\n\n\n    if (this._responses.size > this._size) {\n      var firstKey = this._responses.keys().next();\n\n      if (!firstKey.done) {\n        this._responses[\"delete\"](firstKey.value);\n      }\n    }\n  };\n\n  return RelayQueryResponseCache;\n}();\n\nfunction getCacheKey(queryID, variables) {\n  return JSON.stringify(stableCopy({\n    queryID: queryID,\n    variables: variables\n  }));\n}\n/**\n * Determine whether a response fetched at `fetchTime` is still valid given\n * some `ttl`.\n */\n\n\nfunction isCurrent(fetchTime, ttl) {\n  return fetchTime + ttl >= Date.now();\n}\n\nmodule.exports = RelayQueryResponseCache;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @emails oncall+relay\n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nfunction handlePotentialSnapshotErrors(environment, missingRequiredFields, relayResolverErrors) {\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(relayResolverErrors),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var resolverError = _step.value;\n      environment.requiredFieldLogger({\n        kind: 'relay_resolver.error',\n        owner: resolverError.field.owner,\n        fieldPath: resolverError.field.path,\n        error: resolverError.error\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (missingRequiredFields != null) {\n    switch (missingRequiredFields.action) {\n      case 'THROW':\n        {\n          var _missingRequiredField = missingRequiredFields.field,\n              path = _missingRequiredField.path,\n              owner = _missingRequiredField.owner; // This gives the consumer the chance to throw their own error if they so wish.\n\n          environment.requiredFieldLogger({\n            kind: 'missing_field.throw',\n            owner: owner,\n            fieldPath: path\n          });\n          throw new Error(\"Relay: Missing @required value at path '\".concat(path, \"' in '\").concat(owner, \"'.\"));\n        }\n\n      case 'LOG':\n        missingRequiredFields.fields.forEach(function (_ref) {\n          var path = _ref.path,\n              owner = _ref.owner;\n          environment.requiredFieldLogger({\n            kind: 'missing_field.log',\n            owner: owner,\n            fieldPath: path\n          });\n        });\n        break;\n\n      default:\n        {\n          missingRequiredFields.action;\n        }\n    }\n  }\n}\n\nmodule.exports = handlePotentialSnapshotErrors;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar invariant = require('invariant');\n\n/**\n * An implementation of a `ReplaySubject` for Relay Observables.\n *\n * Records events provided and synchronously plays them back to new subscribers,\n * as well as forwarding new asynchronous events.\n */\nvar RelayReplaySubject = /*#__PURE__*/function () {\n  function RelayReplaySubject() {\n    var _this = this;\n\n    (0, _defineProperty2[\"default\"])(this, \"_complete\", false);\n    (0, _defineProperty2[\"default\"])(this, \"_events\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_sinks\", new Set());\n    (0, _defineProperty2[\"default\"])(this, \"_subscription\", []);\n    this._observable = RelayObservable.create(function (sink) {\n      _this._sinks.add(sink);\n\n      var events = _this._events;\n\n      for (var i = 0; i < events.length; i++) {\n        if (sink.closed) {\n          // Bail if an event made the observer unsubscribe.\n          break;\n        }\n\n        var event = events[i];\n\n        switch (event.kind) {\n          case 'complete':\n            sink.complete();\n            break;\n\n          case 'error':\n            sink.error(event.error);\n            break;\n\n          case 'next':\n            sink.next(event.data);\n            break;\n\n          default:\n            event.kind;\n            !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReplaySubject: Unknown event kind `%s`.', event.kind) : invariant(false) : void 0;\n        }\n      }\n\n      return function () {\n        _this._sinks[\"delete\"](sink);\n      };\n    });\n  }\n\n  var _proto = RelayReplaySubject.prototype;\n\n  _proto.complete = function complete() {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'complete'\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.complete();\n    });\n  };\n\n  _proto.error = function error(_error) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'error',\n      error: _error\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.error(_error);\n    });\n  };\n\n  _proto.next = function next(data) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._events.push({\n      kind: 'next',\n      data: data\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.next(data);\n    });\n  };\n\n  _proto.subscribe = function subscribe(observer) {\n    var subscription = this._observable.subscribe(observer);\n\n    this._subscription.push(subscription);\n\n    return subscription;\n  };\n\n  _proto.unsubscribe = function unsubscribe() {\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._subscription),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var subscription = _step.value;\n        subscription.unsubscribe();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    this._subscription = [];\n  };\n\n  _proto.getObserverCount = function getObserverCount() {\n    return this._sinks.size;\n  };\n\n  return RelayReplaySubject;\n}();\n\nmodule.exports = RelayReplaySubject;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar Observable = require('../network/RelayObservable');\n\nvar RelayReplaySubject = require('../util/RelayReplaySubject');\n\nvar invariant = require('invariant');\n\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar requestCachesByEnvironment = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. subscribe() takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subscription) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will not retain any query data outside the scope of the\n * request, which means it is not guaranteed that it won't be garbage\n * collected after the request completes.\n * If you need to retain data, you can do so manually with environment.retain().\n *\n * Cancelling requests:\n * ====================\n * If the subscription returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const subscription = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * subscription.unsubscribe();\n * ```\n */\n\nfunction fetchQuery(environment, operation) {\n  return fetchQueryDeduped(environment, operation.request.identifier, function () {\n    return environment.execute({\n      operation: operation\n    });\n  });\n}\n/**\n * Low-level implementation details of `fetchQuery`.\n *\n * `fetchQueryDeduped` can also be used to share a single cache for\n * requests that aren't using `fetchQuery` directly (e.g. because they don't\n * have an `OperationDescriptor` when they are called).\n */\n\n\nfunction fetchQueryDeduped(environment, identifier, fetchFn) {\n  return Observable.create(function (sink) {\n    var requestCache = getRequestCache(environment);\n    var cachedRequest = requestCache.get(identifier);\n\n    if (!cachedRequest) {\n      fetchFn()[\"finally\"](function () {\n        return requestCache[\"delete\"](identifier);\n      }).subscribe({\n        start: function start(subscription) {\n          cachedRequest = {\n            identifier: identifier,\n            subject: new RelayReplaySubject(),\n            subjectForInFlightStatus: new RelayReplaySubject(),\n            subscription: subscription\n          };\n          requestCache.set(identifier, cachedRequest);\n        },\n        next: function next(response) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.next(response);\n          cachedReq.subjectForInFlightStatus.next(response);\n        },\n        error: function error(_error) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.error(_error);\n          cachedReq.subjectForInFlightStatus.error(_error);\n        },\n        complete: function complete() {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.complete();\n          cachedReq.subjectForInFlightStatus.complete();\n        },\n        unsubscribe: function unsubscribe(subscription) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.unsubscribe();\n          cachedReq.subjectForInFlightStatus.unsubscribe();\n        }\n      });\n    }\n\n    !(cachedRequest != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] fetchQueryDeduped: Expected `start` to be ' + 'called synchronously') : invariant(false) : void 0;\n    return getObservableForCachedRequest(requestCache, cachedRequest).subscribe(sink);\n  });\n}\n/**\n * @private\n */\n\n\nfunction getObservableForCachedRequest(requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subject.subscribe(sink);\n    return function () {\n      subscription.unsubscribe();\n      var cachedRequestInstance = requestCache.get(cachedRequest.identifier);\n\n      if (cachedRequestInstance) {\n        var requestSubscription = cachedRequestInstance.subscription;\n\n        if (requestSubscription != null && cachedRequestInstance.subject.getObserverCount() === 0) {\n          requestSubscription.unsubscribe();\n          requestCache[\"delete\"](cachedRequest.identifier);\n        }\n      }\n    };\n  });\n}\n/**\n * @private\n */\n\n\nfunction getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subjectForInFlightStatus.subscribe({\n      error: sink.error,\n      next: function next(response) {\n        if (!environment.isRequestActive(cachedRequest.identifier)) {\n          sink.complete();\n          return;\n        }\n\n        sink.next();\n      },\n      complete: sink.complete,\n      unsubscribe: sink.complete\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  });\n}\n/**\n * If a request is active for the given query, variables and environment,\n * this function will return a Promise that will resolve when that request\n * stops being active (receives a final payload), and the data has been saved\n * to the store.\n * If no request is active, null will be returned\n */\n\n\nfunction getPromiseForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n\n  if (!cachedRequest) {\n    return null;\n  }\n\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n\n  return new Promise(function (resolve, reject) {\n    var resolveOnNext = false;\n    getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest).subscribe({\n      complete: resolve,\n      error: reject,\n      next: function next(response) {\n        /*\n         * The underlying `RelayReplaySubject` will synchronously replay events\n         * as soon as we subscribe, but since we want the *next* asynchronous\n         * one, we'll ignore them until the replay finishes.\n         */\n        if (resolveOnNext) {\n          resolve(response);\n        }\n      }\n    });\n    resolveOnNext = true;\n  });\n}\n/**\n * If there is a pending request for the given query, returns an Observable of\n * *all* its responses. Existing responses are published synchronously and\n * subsequent responses are published asynchronously. Returns null if there is\n * no pending request. This is similar to fetchQuery() except that it will not\n * issue a fetch if there isn't already one pending.\n */\n\n\nfunction getObservableForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n\n  if (!cachedRequest) {\n    return null;\n  }\n\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n\n  return getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest);\n}\n/**\n * @private\n */\n\n\nfunction getRequestCache(environment) {\n  var cached = requestCachesByEnvironment.get(environment);\n\n  if (cached != null) {\n    return cached;\n  }\n\n  var requestCache = new Map();\n  requestCachesByEnvironment.set(environment, requestCache);\n  return requestCache;\n}\n/**\n * @private\n */\n\n\nfunction getCachedRequest(requestCache, identifier) {\n  var cached = requestCache.get(identifier);\n  !(cached != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] getCachedRequest: Expected request to be cached') : invariant(false) : void 0;\n  return cached;\n}\n\nmodule.exports = {\n  fetchQuery: fetchQuery,\n  fetchQueryDeduped: fetchQueryDeduped,\n  getPromiseForActiveRequest: getPromiseForActiveRequest,\n  getObservableForActiveRequest: getObservableForActiveRequest\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar _require = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require.createOperationDescriptor;\n\nvar handlePotentialSnapshotErrors = require('../util/handlePotentialSnapshotErrors');\n\nvar fetchQueryInternal = require('./fetchQueryInternal');\n\nvar _require2 = require('./GraphQLTag'),\n    getRequest = _require2.getRequest;\n\nvar invariant = require('invariant');\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. Subscribe optionally takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subsctiption) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * Request Promise:\n * ================\n * The obervable can be converted to a Promise with .toPromise(), which will\n * resolve to a snapshot of the query data when the first response is received\n * from the server.\n *\n * ```\n * fetchQuery(environment, query, variables).toPromise().then((data) => {\n *   // ...\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will NOT retain query data, meaning that it is not guaranteed\n * that the fetched data will remain in the Relay store after the request has\n * completed.\n * If you need to retain the query data outside of the network request,\n * you need to use `environment.retain()`.\n *\n *\n * Cancelling requests:\n * ====================\n * If the disposable returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const disposable = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * disposable.dispose();\n * ```\n * NOTE: When using .toPromise(), the request cannot be cancelled.\n */\n\n\nfunction fetchQuery(environment, query, variables, options) {\n  var _options$fetchPolicy;\n\n  var queryNode = getRequest(query);\n  !(queryNode.params.operationKind === 'query') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'fetchQuery: Expected query operation') : invariant(false) : void 0;\n  var networkCacheConfig = (0, _objectSpread2[\"default\"])({\n    force: true\n  }, options === null || options === void 0 ? void 0 : options.networkCacheConfig);\n  var operation = createOperationDescriptor(queryNode, variables, networkCacheConfig);\n  var fetchPolicy = (_options$fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy) !== null && _options$fetchPolicy !== void 0 ? _options$fetchPolicy : 'network-only';\n\n  function readData(snapshot) {\n    handlePotentialSnapshotErrors(environment, snapshot.missingRequiredFields, snapshot.relayResolverErrors);\n    /* $FlowFixMe[incompatible-return] we assume readData returns the right\n     * data just having written it from network or checked availability. */\n\n    return snapshot.data;\n  }\n\n  switch (fetchPolicy) {\n    case 'network-only':\n      {\n        return getNetworkObservable(environment, operation).map(readData);\n      }\n\n    case 'store-or-network':\n      {\n        if (environment.check(operation).status === 'available') {\n          return RelayObservable.from(environment.lookup(operation.fragment)).map(readData);\n        }\n\n        return getNetworkObservable(environment, operation).map(readData);\n      }\n\n    default:\n      fetchPolicy;\n      throw new Error('fetchQuery: Invalid fetchPolicy ' + fetchPolicy);\n  }\n}\n\nfunction getNetworkObservable(environment, operation) {\n  return fetchQueryInternal.fetchQuery(environment, operation).map(function () {\n    return environment.lookup(operation.fragment);\n  });\n}\n\nmodule.exports = fetchQuery;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require.createOperationDescriptor;\n\nvar _require2 = require('./GraphQLTag'),\n    getRequest = _require2.getRequest;\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n */\n\n\nfunction fetchQuery_DEPRECATED(environment, taggedNode, variables, cacheConfig) {\n  var query = getRequest(taggedNode);\n\n  if (query.params.operationKind !== 'query') {\n    throw new Error('fetchQuery: Expected query operation');\n  }\n\n  var operation = createOperationDescriptor(query, variables, cacheConfig);\n  return environment.execute({\n    operation: operation\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\n\nmodule.exports = fetchQuery_DEPRECATED;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n'use strict';\n\nvar PreloadableQueryRegistry = /*#__PURE__*/function () {\n  function PreloadableQueryRegistry() {\n    this._preloadableQueries = new Map();\n    this._callbacks = new Map();\n  }\n\n  var _proto = PreloadableQueryRegistry.prototype;\n\n  _proto.set = function set(key, value) {\n    this._preloadableQueries.set(key, value);\n\n    var callbacks = this._callbacks.get(key);\n\n    if (callbacks != null) {\n      callbacks.forEach(function (cb) {\n        try {\n          cb(value);\n        } catch (e) {\n          // We do *not* want to throw in this tick, as this callback is executed\n          // while a query is required for the very first time.\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      });\n    }\n  };\n\n  _proto.get = function get(key) {\n    return this._preloadableQueries.get(key);\n  };\n\n  _proto.onLoad = function onLoad(key, callback) {\n    var _this$_callbacks$get;\n\n    var callbacks = (_this$_callbacks$get = this._callbacks.get(key)) !== null && _this$_callbacks$get !== void 0 ? _this$_callbacks$get : new Set();\n    callbacks.add(callback);\n\n    var dispose = function dispose() {\n      callbacks[\"delete\"](callback);\n    };\n\n    this._callbacks.set(key, callbacks);\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.clear = function clear() {\n    this._preloadableQueries.clear();\n  };\n\n  return PreloadableQueryRegistry;\n}();\n\nvar preloadableQueryRegistry = new PreloadableQueryRegistry();\nmodule.exports = preloadableQueryRegistry;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../query/fetchQueryInternal'),\n    getPromiseForActiveRequest = _require.getPromiseForActiveRequest;\n\nfunction getPendingOperationsForFragment(environment, fragmentNode, fragmentOwner) {\n  var _pendingOperations$ma, _pendingOperations;\n\n  var pendingOperations = [];\n  var promise = getPromiseForActiveRequest(environment, fragmentOwner);\n\n  if (promise != null) {\n    pendingOperations = [fragmentOwner];\n  } else {\n    var _result$pendingOperat, _result$promise;\n\n    var result = environment.getOperationTracker().getPendingOperationsAffectingOwner(fragmentOwner);\n    pendingOperations = (_result$pendingOperat = result === null || result === void 0 ? void 0 : result.pendingOperations) !== null && _result$pendingOperat !== void 0 ? _result$pendingOperat : [];\n    promise = (_result$promise = result === null || result === void 0 ? void 0 : result.promise) !== null && _result$promise !== void 0 ? _result$promise : null;\n  }\n\n  if (!promise) {\n    return null;\n  }\n\n  var pendingOperationName = (_pendingOperations$ma = (_pendingOperations = pendingOperations) === null || _pendingOperations === void 0 ? void 0 : _pendingOperations.map(function (op) {\n    return op.node.params.name;\n  }).join(',')) !== null && _pendingOperations$ma !== void 0 ? _pendingOperations$ma : null;\n\n  if (pendingOperationName == null || pendingOperationName.length === 0) {\n    pendingOperationName = 'Unknown pending operation';\n  }\n\n  var fragmentName = fragmentNode.name;\n  var promiseDisplayName = pendingOperationName === fragmentName ? \"Relay(\".concat(pendingOperationName, \")\") : \"Relay(\".concat(pendingOperationName, \":\").concat(fragmentName, \")\"); // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n\n  promise.displayName = promiseDisplayName;\n  return {\n    promise: promise,\n    pendingOperations: pendingOperations\n  };\n}\n\nmodule.exports = getPendingOperationsForFragment;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n/**\n * A fast test to determine if two values are equal scalars:\n * - compares scalars such as booleans, strings, numbers by value\n * - compares functions by identity\n * - returns false for complex values, since these cannot be cheaply tested for\n *   equality (use `areEquals` instead)\n */\n\nfunction isScalarAndEqual(valueA, valueB) {\n  return valueA === valueB && (valueA === null || typeof valueA !== 'object');\n}\n\nmodule.exports = isScalarAndEqual;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar hasWeakSetDefined = typeof WeakSet !== 'undefined';\nvar hasWeakMapDefined = typeof WeakMap !== 'undefined';\n/**\n * Recycles subtrees from `prevData` by replacing equal subtrees in `nextData`.\n */\n\nfunction recycleNodesInto(prevData, nextData) {\n  if (prevData === nextData || typeof prevData !== 'object' || prevData instanceof Set || prevData instanceof Map || hasWeakSetDefined && prevData instanceof WeakSet || hasWeakMapDefined && prevData instanceof WeakMap || !prevData || typeof nextData !== 'object' || nextData instanceof Set || nextData instanceof Map || hasWeakSetDefined && nextData instanceof WeakSet || hasWeakMapDefined && nextData instanceof WeakMap || !nextData) {\n    return nextData;\n  }\n\n  var canRecycle = false; // Assign local variables to preserve Flow type refinement.\n\n  var prevArray = Array.isArray(prevData) ? prevData : null;\n  var nextArray = Array.isArray(nextData) ? nextData : null;\n\n  if (prevArray && nextArray) {\n    canRecycle = nextArray.reduce(function (wasEqual, nextItem, ii) {\n      var prevValue = prevArray[ii];\n      var nextValue = recycleNodesInto(prevValue, nextItem);\n\n      if (nextValue !== nextArray[ii]) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!Object.isFrozen(nextArray)) {\n            nextArray[ii] = nextValue;\n          }\n        } else {\n          nextArray[ii] = nextValue;\n        }\n      }\n\n      return wasEqual && nextValue === prevArray[ii];\n    }, true) && prevArray.length === nextArray.length;\n  } else if (!prevArray && !nextArray) {\n    // Assign local variables to preserve Flow type refinement.\n    var prevObject = prevData;\n    var nextObject = nextData;\n    var prevKeys = Object.keys(prevObject);\n    var nextKeys = Object.keys(nextObject);\n    canRecycle = nextKeys.reduce(function (wasEqual, key) {\n      var prevValue = prevObject[key];\n      var nextValue = recycleNodesInto(prevValue, nextObject[key]);\n\n      if (nextValue !== nextObject[key]) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!Object.isFrozen(nextObject)) {\n            // $FlowFixMe[cannot-write]\n            nextObject[key] = nextValue;\n          }\n        } else {\n          // $FlowFixMe[cannot-write]\n          nextObject[key] = nextValue;\n        }\n      }\n\n      return wasEqual && nextValue === prevObject[key];\n    }, true) && prevKeys.length === nextKeys.length;\n  }\n\n  return canRecycle ? prevData : nextData;\n}\n\nmodule.exports = recycleNodesInto;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar getPendingOperationsForFragment = require('../util/getPendingOperationsForFragment');\n\nvar handlePotentialSnapshotErrors = require('../util/handlePotentialSnapshotErrors');\n\nvar isScalarAndEqual = require('../util/isScalarAndEqual');\n\nvar recycleNodesInto = require('../util/recycleNodesInto');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar _require = require('./RelayModernOperationDescriptor'),\n    createRequestDescriptor = _require.createRequestDescriptor;\n\nvar _require2 = require('./RelayModernSelector'),\n    areEqualSelectors = _require2.areEqualSelectors,\n    createReaderSelector = _require2.createReaderSelector,\n    getSelectorsFromObject = _require2.getSelectorsFromObject;\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n\n/**\n * A utility for resolving and subscribing to the results of a fragment spec\n * (key -> fragment mapping) given some \"props\" that determine the root ID\n * and variables to use when reading each fragment. When props are changed via\n * `setProps()`, the resolver will update its results and subscriptions\n * accordingly. Internally, the resolver:\n * - Converts the fragment map & props map into a map of `Selector`s.\n * - Removes any resolvers for any props that became null.\n * - Creates resolvers for any props that became non-null.\n * - Updates resolvers with the latest props.\n *\n * This utility is implemented as an imperative, stateful API for performance\n * reasons: reusing previous resolvers, callback functions, and subscriptions\n * all helps to reduce object allocation and thereby decrease GC time.\n *\n * The `resolve()` function is also lazy and memoized: changes in the store mark\n * the resolver as stale and notify the caller, and the actual results are\n * recomputed the first time `resolve()` is called.\n */\nvar RelayModernFragmentSpecResolver = /*#__PURE__*/function () {\n  function RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer) {\n    var _this = this;\n\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function () {\n      _this._stale = true;\n\n      if (typeof _this._callback === 'function') {\n        _this._callback();\n      }\n    });\n    this._callback = callback;\n    this._context = context;\n    this._data = {};\n    this._fragments = fragments;\n    this._props = {};\n    this._resolvers = {};\n    this._stale = false;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this.setProps(props);\n  }\n\n  var _proto = RelayModernFragmentSpecResolver.prototype;\n\n  _proto.dispose = function dispose() {\n    for (var _key in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(_key)) {\n        disposeCallback(this._resolvers[_key]);\n      }\n    }\n  };\n\n  _proto.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the object multiple times, which could occur if data for\n      // multiple keys changes in the same event loop.\n      var prevData = this._data;\n      var nextData;\n\n      for (var _key2 in this._resolvers) {\n        if (this._resolvers.hasOwnProperty(_key2)) {\n          var resolver = this._resolvers[_key2];\n          var prevItem = prevData[_key2];\n\n          if (resolver) {\n            var nextItem = resolver.resolve();\n\n            if (nextData || nextItem !== prevItem) {\n              nextData = nextData || (0, _objectSpread2[\"default\"])({}, prevData);\n              nextData[_key2] = nextItem;\n            }\n          } else {\n            var prop = this._props[_key2];\n\n            var _nextItem = prop !== undefined ? prop : null;\n\n            if (nextData || !isScalarAndEqual(_nextItem, prevItem)) {\n              nextData = nextData || (0, _objectSpread2[\"default\"])({}, prevData);\n              nextData[_key2] = _nextItem;\n            }\n          }\n        }\n      }\n\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n\n    return this._data;\n  };\n\n  _proto.setCallback = function setCallback(props, callback) {\n    this._callback = callback;\n\n    if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n      this.setProps(props);\n    }\n  };\n\n  _proto.setProps = function setProps(props) {\n    this._props = {};\n    var ownedSelectors = getSelectorsFromObject(this._fragments, props);\n\n    for (var _key3 in ownedSelectors) {\n      if (ownedSelectors.hasOwnProperty(_key3)) {\n        var ownedSelector = ownedSelectors[_key3];\n        var resolver = this._resolvers[_key3];\n\n        if (ownedSelector == null) {\n          if (resolver != null) {\n            resolver.dispose();\n          }\n\n          resolver = null;\n        } else if (ownedSelector.kind === 'PluralReaderSelector') {\n          if (resolver == null) {\n            resolver = new SelectorListResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, this._callback != null, this._onChange);\n          } else {\n            !(resolver instanceof SelectorListResolver) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an array.', _key3) : invariant(false) : void 0;\n            resolver.setSelector(ownedSelector);\n          }\n        } else {\n          if (resolver == null) {\n            resolver = new SelectorResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, this._callback != null, this._onChange);\n          } else {\n            !(resolver instanceof SelectorResolver) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an object.', _key3) : invariant(false) : void 0;\n            resolver.setSelector(ownedSelector);\n          }\n        }\n\n        this._props[_key3] = props[_key3];\n        this._resolvers[_key3] = resolver;\n      }\n    }\n\n    this._stale = true;\n  };\n\n  _proto.setVariables = function setVariables(variables, request) {\n    for (var _key4 in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(_key4)) {\n        var resolver = this._resolvers[_key4];\n\n        if (resolver) {\n          resolver.setVariables(variables, request);\n        }\n      }\n    }\n\n    this._stale = true;\n  };\n\n  return RelayModernFragmentSpecResolver;\n}();\n/**\n * A resolver for a single Selector.\n */\n\n\nvar SelectorResolver = /*#__PURE__*/function () {\n  function SelectorResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {\n    var _this2 = this;\n\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function (snapshot) {\n      _this2._data = snapshot.data;\n      _this2._isMissingData = snapshot.isMissingData;\n      _this2._missingRequiredFields = snapshot.missingRequiredFields;\n      _this2._relayResolverErrors = snapshot.relayResolverErrors;\n\n      _this2._callback();\n    });\n\n    var _snapshot = environment.lookup(selector);\n\n    this._callback = callback;\n    this._data = _snapshot.data;\n    this._isMissingData = _snapshot.isMissingData;\n    this._missingRequiredFields = _snapshot.missingRequiredFields;\n    this._relayResolverErrors = _snapshot.relayResolverErrors;\n    this._environment = environment;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this._selector = selector;\n\n    if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n      if (subscribeOnConstruction) {\n        this._subscription = environment.subscribe(_snapshot, this._onChange);\n      }\n    } else {\n      this._subscription = environment.subscribe(_snapshot, this._onChange);\n    }\n  }\n\n  var _proto2 = SelectorResolver.prototype;\n\n  _proto2.dispose = function dispose() {\n    if (this._subscription) {\n      this._subscription.dispose();\n\n      this._subscription = null;\n    }\n  };\n\n  _proto2.resolve = function resolve() {\n    if (this._isMissingData === true) {\n      // NOTE: This branch exists to handle the case in which:\n      // - A RelayModern container is rendered as a descendant of a Relay Hook\n      //   root using a \"partial\" renderPolicy (this means that eargerly\n      //   reading any cached data that is available instead of blocking\n      //   at the root until the whole query is fetched).\n      // - A parent Relay Hook didnt' suspend earlier on data being fetched,\n      //   either because the fragment data for the parent was available, or\n      //   the parent fragment didn't have any data dependencies.\n      // Even though our Flow types reflect the possiblity of null data, there\n      // might still be cases where it's not handled at runtime becuase the\n      // Flow types are being ignored, or simply not being used (for example,\n      // the case reported here: https://fburl.com/srnbucf8, was due to\n      // misuse of Flow types here: https://fburl.com/g3m0mqqh).\n      // Additionally, even though the null data might be handled without a\n      // runtime error, we might not suspend when we intended to if a parent\n      // Relay Hook (e.g. that is using @defer) decided not to suspend becuase\n      // it's immediate data was already available (even if it was deferred),\n      // or it didn't actually need any data (was just spreading other fragments).\n      // This should eventually go away with something like @optional, where we only\n      // suspend at specific boundaries depending on whether the boundary\n      // can be fulfilled or not.\n      var pendingOperationsResult = getPendingOperationsForFragment(this._environment, this._selector.node, this._selector.owner);\n      var promise = pendingOperationsResult === null || pendingOperationsResult === void 0 ? void 0 : pendingOperationsResult.promise;\n\n      if (promise != null) {\n        if (this._rootIsQueryRenderer) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Relay Container for fragment `%s` has missing data and ' + 'would suspend. When using features such as @defer or @module, ' + 'use `useFragment` instead of a Relay Container.', this._selector.node.name) : void 0;\n        } else {\n          var _pendingOperationsRes;\n\n          var pendingOperations = (_pendingOperationsRes = pendingOperationsResult === null || pendingOperationsResult === void 0 ? void 0 : pendingOperationsResult.pendingOperations) !== null && _pendingOperationsRes !== void 0 ? _pendingOperationsRes : [];\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Relay Container for fragment `%s` suspended. When using ' + 'features such as @defer or @module, use `useFragment` instead ' + 'of a Relay Container.', this._selector.node.name) : void 0;\n\n          this._environment.__log({\n            name: 'suspense.fragment',\n            data: this._data,\n            fragment: this._selector.node,\n            isRelayHooks: false,\n            isMissingData: this._isMissingData,\n            isPromiseCached: false,\n            pendingOperations: pendingOperations\n          });\n\n          throw promise;\n        }\n      }\n    }\n\n    handlePotentialSnapshotErrors(this._environment, this._missingRequiredFields, this._relayResolverErrors);\n    return this._data;\n  };\n\n  _proto2.setSelector = function setSelector(selector) {\n    if (this._subscription != null && areEqualSelectors(selector, this._selector)) {\n      return;\n    }\n\n    this.dispose();\n\n    var snapshot = this._environment.lookup(selector);\n\n    this._data = recycleNodesInto(this._data, snapshot.data);\n    this._isMissingData = snapshot.isMissingData;\n    this._missingRequiredFields = snapshot.missingRequiredFields;\n    this._relayResolverErrors = snapshot.relayResolverErrors;\n    this._selector = selector;\n    this._subscription = this._environment.subscribe(snapshot, this._onChange);\n  };\n\n  _proto2.setVariables = function setVariables(variables, request) {\n    if (areEqual(variables, this._selector.variables)) {\n      // If we're not actually setting new variables, we don't actually want\n      // to create a new fragment owner, since areEqualSelectors relies on\n      // owner identity.\n      // In fact, we don't even need to try to attempt to set a new selector.\n      // When fragment ownership is not enabled, setSelector will also bail\n      // out since the selector doesn't really change, so we're doing it here\n      // earlier.\n      return;\n    } // NOTE: We manually create the request descriptor here instead of\n    // calling createOperationDescriptor() because we want to set a\n    // descriptor with *unaltered* variables as the fragment owner.\n    // This is a hack that allows us to preserve existing (broken)\n    // behavior of RelayModern containers while using fragment ownership\n    // to propagate variables instead of Context.\n    // For more details, see the summary of D13999308\n\n\n    var requestDescriptor = createRequestDescriptor(request, variables);\n    var selector = createReaderSelector(this._selector.node, this._selector.dataID, variables, requestDescriptor);\n    this.setSelector(selector);\n  };\n\n  return SelectorResolver;\n}();\n/**\n * A resolver for an array of Selectors.\n */\n\n\nvar SelectorListResolver = /*#__PURE__*/function () {\n  function SelectorListResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {\n    var _this3 = this;\n\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function (data) {\n      _this3._stale = true;\n\n      _this3._callback();\n    });\n    this._callback = callback;\n    this._data = [];\n    this._environment = environment;\n    this._resolvers = [];\n    this._stale = true;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this._subscribeOnConstruction = subscribeOnConstruction;\n    this.setSelector(selector);\n  }\n\n  var _proto3 = SelectorListResolver.prototype;\n\n  _proto3.dispose = function dispose() {\n    this._resolvers.forEach(disposeCallback);\n  };\n\n  _proto3.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the array multiple times, which could occur if data for\n      // multiple indices changes in the same event loop.\n      var prevData = this._data;\n      var nextData;\n\n      for (var ii = 0; ii < this._resolvers.length; ii++) {\n        var prevItem = prevData[ii];\n\n        var nextItem = this._resolvers[ii].resolve();\n\n        if (nextData || nextItem !== prevItem) {\n          nextData = nextData || prevData.slice(0, ii);\n          nextData.push(nextItem);\n        }\n      }\n\n      if (!nextData && this._resolvers.length !== prevData.length) {\n        nextData = prevData.slice(0, this._resolvers.length);\n      }\n\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n\n    return this._data;\n  };\n\n  _proto3.setSelector = function setSelector(selector) {\n    var selectors = selector.selectors;\n\n    while (this._resolvers.length > selectors.length) {\n      var resolver = this._resolvers.pop();\n\n      resolver.dispose();\n    }\n\n    for (var ii = 0; ii < selectors.length; ii++) {\n      if (ii < this._resolvers.length) {\n        this._resolvers[ii].setSelector(selectors[ii]);\n      } else {\n        this._resolvers[ii] = new SelectorResolver(this._environment, this._rootIsQueryRenderer, selectors[ii], this._subscribeOnConstruction, this._onChange);\n      }\n    }\n\n    this._stale = true;\n  };\n\n  _proto3.setVariables = function setVariables(variables, request) {\n    this._resolvers.forEach(function (resolver) {\n      return resolver.setVariables(variables, request);\n    });\n\n    this._stale = true;\n  };\n\n  return SelectorListResolver;\n}();\n\nfunction disposeCallback(disposable) {\n  disposable && disposable.dispose();\n}\n\nmodule.exports = RelayModernFragmentSpecResolver;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayModernFragmentSpecResolver = require('./RelayModernFragmentSpecResolver');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nfunction createFragmentSpecResolver(context, containerName, fragments, props, rootIsQueryRenderer, callback) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var fragmentNames = Object.keys(fragments);\n    fragmentNames.forEach(function (fragmentName) {\n      var propValue = props[fragmentName];\n      process.env.NODE_ENV !== \"production\" ? warning(propValue !== undefined, 'createFragmentSpecResolver: Expected prop `%s` to be supplied to `%s`, but ' + 'got `undefined`. Pass an explicit `null` if this is intentional.', fragmentName, containerName) : void 0;\n    });\n  }\n\n  return new RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer);\n}\n\nmodule.exports = createFragmentSpecResolver;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require('invariant'); // Ideally, we'd just import the type of the react module, but this causes Flow\n// problems.\n\n\nvar relayContext;\nvar firstReact;\n\nfunction createRelayContext(react) {\n  if (!relayContext) {\n    relayContext = react.createContext(null);\n\n    if (process.env.NODE_ENV !== \"production\") {\n      relayContext.displayName = 'RelayContext';\n    }\n\n    firstReact = react;\n  }\n\n  !(react === firstReact) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[createRelayContext]: You are passing a different instance of React', react.version) : invariant(false) : void 0;\n  return relayContext;\n}\n\nmodule.exports = createRelayContext;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n    getInlineDataFragment = _require.getInlineDataFragment;\n\nvar _require2 = require('./RelayStoreUtils'),\n    FRAGMENTS_KEY = _require2.FRAGMENTS_KEY;\n\nvar invariant = require('invariant');\n/**\n * Reads an @inline data fragment that was spread into the parent fragment.\n */\n\n\nfunction readInlineData(fragment, fragmentRef) {\n  var _fragmentRef$FRAGMENT;\n\n  var inlineDataFragment = getInlineDataFragment(fragment);\n\n  if (fragmentRef == null) {\n    return fragmentRef;\n  }\n\n  !(typeof fragmentRef === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected an object, got `%s`.', typeof fragmentRef) : invariant(false) : void 0; // $FlowFixMe[incompatible-use]\n\n  var inlineData = (_fragmentRef$FRAGMENT = fragmentRef[FRAGMENTS_KEY]) === null || _fragmentRef$FRAGMENT === void 0 ? void 0 : _fragmentRef$FRAGMENT[inlineDataFragment.name];\n  !(inlineData != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected fragment `%s` to be spread in the parent ' + 'fragment.', inlineDataFragment.name) : invariant(false) : void 0;\n  return inlineData;\n}\n\nmodule.exports = readInlineData;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n'use strict';\n/**\n * A unique identifier of the current actor.\n */\n\nvar invariant = require('invariant');\n\nvar INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = 'INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE';\n\nfunction assertInternalActorIndentifier(actorIdentifier) {\n  !(actorIdentifier === INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to use only internal version of the `actorIdentifier`. \"%s\" was provided.', actorIdentifier) : invariant(false) : void 0;\n}\n\nmodule.exports = {\n  assertInternalActorIndentifier: assertInternalActorIndentifier,\n  getActorIdentifier: function getActorIdentifier(actorID) {\n    return actorID;\n  },\n  getDefaultActorIdentifier: function getDefaultActorIdentifier() {\n    throw new Error('Not Implemented');\n  },\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar id = 100000;\n\nfunction generateID() {\n  return id++;\n}\n\nmodule.exports = generateID;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar generateID = require('../util/generateID');\n/**\n * Wraps the network with logging to ensure that network requests are\n * always logged. Relying on each network callsite to be wrapped is\n * untenable and will eventually lead to holes in the logging.\n * NOTE: This function takes an environment instance, because Relay\n * devtools will mutate the `env.__log` method, and the devtools rely\n * on it to receive network events.\n */\n\n\nfunction wrapNetworkWithLogObserver(env, network) {\n  return {\n    execute: function execute(params, variables, cacheConfig, uploadables) {\n      var networkRequestId = generateID();\n      var logObserver = {\n        start: function start(subscription) {\n          env.__log({\n            name: 'network.start',\n            networkRequestId: networkRequestId,\n            params: params,\n            variables: variables,\n            cacheConfig: cacheConfig\n          });\n        },\n        next: function next(response) {\n          env.__log({\n            name: 'network.next',\n            networkRequestId: networkRequestId,\n            response: response\n          });\n        },\n        error: function error(_error) {\n          env.__log({\n            name: 'network.error',\n            networkRequestId: networkRequestId,\n            error: _error\n          });\n        },\n        complete: function complete() {\n          env.__log({\n            name: 'network.complete',\n            networkRequestId: networkRequestId\n          });\n        },\n        unsubscribe: function unsubscribe() {\n          env.__log({\n            name: 'network.unsubscribe',\n            networkRequestId: networkRequestId\n          });\n        }\n      };\n\n      var logRequestInfo = function logRequestInfo(info) {\n        env.__log({\n          name: 'network.info',\n          networkRequestId: networkRequestId,\n          info: info\n        });\n      };\n\n      return network.execute(params, variables, cacheConfig, uploadables, logRequestInfo)[\"do\"](logObserver);\n    }\n  };\n}\n\nmodule.exports = wrapNetworkWithLogObserver;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar invariant = require('invariant');\n\nvar RelayOperationTracker = /*#__PURE__*/function () {\n  function RelayOperationTracker() {\n    this._ownersToPendingOperations = new Map();\n    this._pendingOperationsToOwners = new Map();\n    this._ownersToPendingPromise = new Map();\n  }\n  /**\n   * Update the map of current processing operations with the set of\n   * affected owners and notify subscribers\n   */\n\n\n  var _proto = RelayOperationTracker.prototype;\n\n  _proto.update = function update(pendingOperation, affectedOwners) {\n    if (affectedOwners.size === 0) {\n      return;\n    }\n\n    var pendingOperationIdentifier = pendingOperation.identifier;\n    var newlyAffectedOwnersIdentifier = new Set();\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(affectedOwners),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var owner = _step.value;\n        var ownerIdentifier = owner.identifier;\n\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n\n        if (pendingOperationsAffectingOwner != null) {\n          // In this case the `ownerIdentifier` already affected by some operations\n          // We just need to detect, is it the same operation that we already\n          // have in the list, or it's a new operation\n          if (!pendingOperationsAffectingOwner.has(pendingOperationIdentifier)) {\n            pendingOperationsAffectingOwner.set(pendingOperationIdentifier, pendingOperation);\n            newlyAffectedOwnersIdentifier.add(ownerIdentifier);\n          }\n        } else {\n          // This is a new `ownerIdentifier` that is affected by the operation\n          this._ownersToPendingOperations.set(ownerIdentifier, new Map([[pendingOperationIdentifier, pendingOperation]]));\n\n          newlyAffectedOwnersIdentifier.add(ownerIdentifier);\n        }\n      } // No new owners were affected by this operation, we may stop here\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (newlyAffectedOwnersIdentifier.size === 0) {\n      return;\n    } // But, if some owners were affected we need to add them to\n    // the `_pendingOperationsToOwners` set\n\n\n    var ownersAffectedByPendingOperation = this._pendingOperationsToOwners.get(pendingOperationIdentifier) || new Set();\n\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(newlyAffectedOwnersIdentifier),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _ownerIdentifier = _step2.value;\n\n        this._resolveOwnerResolvers(_ownerIdentifier);\n\n        ownersAffectedByPendingOperation.add(_ownerIdentifier);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    this._pendingOperationsToOwners.set(pendingOperationIdentifier, ownersAffectedByPendingOperation);\n  }\n  /**\n   * Once pending operation is completed we need to remove it\n   * from all tracking maps\n   */\n  ;\n\n  _proto.complete = function complete(pendingOperation) {\n    var pendingOperationIdentifier = pendingOperation.identifier;\n\n    var affectedOwnersIdentifier = this._pendingOperationsToOwners.get(pendingOperationIdentifier);\n\n    if (affectedOwnersIdentifier == null) {\n      return;\n    } // These were the owners affected only by `pendingOperationIdentifier`\n\n\n    var completedOwnersIdentifier = new Set(); // These were the owners affected by `pendingOperationIdentifier`\n    // and some other operations\n\n    var updatedOwnersIdentifier = new Set();\n\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(affectedOwnersIdentifier),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var ownerIdentifier = _step3.value;\n\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n\n        if (!pendingOperationsAffectingOwner) {\n          continue;\n        }\n\n        pendingOperationsAffectingOwner[\"delete\"](pendingOperationIdentifier);\n\n        if (pendingOperationsAffectingOwner.size > 0) {\n          updatedOwnersIdentifier.add(ownerIdentifier);\n        } else {\n          completedOwnersIdentifier.add(ownerIdentifier);\n        }\n      } // Complete subscriptions for all owners, affected by `pendingOperationIdentifier`\n\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(completedOwnersIdentifier),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _ownerIdentifier2 = _step4.value;\n\n        this._resolveOwnerResolvers(_ownerIdentifier2);\n\n        this._ownersToPendingOperations[\"delete\"](_ownerIdentifier2);\n      } // Update all ownerIdentifier that were updated by `pendingOperationIdentifier` but still\n      // are affected by other operations\n\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(updatedOwnersIdentifier),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _ownerIdentifier3 = _step5.value;\n\n        this._resolveOwnerResolvers(_ownerIdentifier3);\n      } // Finally, remove pending operation identifier\n\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n\n    this._pendingOperationsToOwners[\"delete\"](pendingOperationIdentifier);\n  };\n\n  _proto._resolveOwnerResolvers = function _resolveOwnerResolvers(ownerIdentifier) {\n    var promiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);\n\n    if (promiseEntry != null) {\n      promiseEntry.resolve();\n    }\n\n    this._ownersToPendingPromise[\"delete\"](ownerIdentifier);\n  };\n\n  _proto.getPendingOperationsAffectingOwner = function getPendingOperationsAffectingOwner(owner) {\n    var ownerIdentifier = owner.identifier;\n\n    var pendingOperationsForOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n\n    if (pendingOperationsForOwner == null || pendingOperationsForOwner.size === 0) {\n      return null;\n    }\n\n    var cachedPromiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);\n\n    if (cachedPromiseEntry != null) {\n      return {\n        promise: cachedPromiseEntry.promise,\n        pendingOperations: cachedPromiseEntry.pendingOperations\n      };\n    }\n\n    var resolve;\n    var promise = new Promise(function (r) {\n      resolve = r;\n    });\n    !(resolve != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayOperationTracker: Expected resolver to be defined. If you' + 'are seeing this, it is likely a bug in Relay.') : invariant(false) : void 0;\n    var pendingOperations = Array.from(pendingOperationsForOwner.values());\n\n    this._ownersToPendingPromise.set(ownerIdentifier, {\n      promise: promise,\n      resolve: resolve,\n      pendingOperations: pendingOperations\n    });\n\n    return {\n      promise: promise,\n      pendingOperations: pendingOperations\n    };\n  };\n\n  return RelayOperationTracker;\n}();\n\nmodule.exports = RelayOperationTracker;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nfunction registerEnvironmentWithDevTools(environment) {\n  // Register this Relay Environment with Relay DevTools if it exists.\n  // Note: this must always be the last step in the constructor.\n  var _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\n\n  var devToolsHook = _global && _global.__RELAY_DEVTOOLS_HOOK__;\n\n  if (devToolsHook) {\n    devToolsHook.registerEnvironment(environment);\n  }\n}\n\nmodule.exports = registerEnvironmentWithDevTools;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./ClientID'),\n    generateClientID = _require.generateClientID;\n\nvar _require2 = require('./RelayStoreUtils'),\n    ROOT_ID = _require2.ROOT_ID;\n\nvar VIEWER_ID = generateClientID(ROOT_ID, 'viewer');\nvar VIEWER_TYPE = 'Viewer';\nmodule.exports = {\n  VIEWER_ID: VIEWER_ID,\n  VIEWER_TYPE: VIEWER_TYPE\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./ViewerPattern'),\n    VIEWER_ID = _require.VIEWER_ID,\n    VIEWER_TYPE = _require.VIEWER_TYPE;\n\nfunction defaultGetDataID(fieldValue, typeName) {\n  if (typeName === VIEWER_TYPE) {\n    // $FlowFixMe[prop-missing]\n    return fieldValue.id == null ? VIEWER_ID : fieldValue.id;\n  } // $FlowFixMe[prop-missing]\n\n\n  return fieldValue.id;\n}\n\nmodule.exports = defaultGetDataID;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar defaultRequiredFieldLogger = function defaultRequiredFieldLogger(event) {\n  if (process.env.NODE_ENV !== \"production\" && event.kind === 'missing_field.log') {\n    throw new Error('Relay Environment Configuration Error (dev only): `@required(action: LOG)` requires that the Relay Environment be configured with a `requiredFieldLogger`.');\n  }\n};\n\nmodule.exports = defaultRequiredFieldLogger;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./RelayConcreteNode'),\n    REQUEST = _require.REQUEST,\n    SPLIT_OPERATION = _require.SPLIT_OPERATION;\n/**\n * OperationLoaders can return either a NormalizationSplitOperation or\n * ConcreteRequest.\n */\n\n\nfunction getOperation(node) {\n  switch (node.kind) {\n    case REQUEST:\n      return node.operation;\n\n    case SPLIT_OPERATION:\n    default:\n      return node;\n  }\n}\n\nmodule.exports = getOperation;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n/**\n * @private\n */\n\nfunction createError(type, name, messageFormat) {\n  for (var _len = arguments.length, messageParams = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    messageParams[_key - 3] = arguments[_key];\n  }\n\n  var index = 0;\n  var message = messageFormat.replace(/%s/g, function () {\n    return String(messageParams[index++]);\n  });\n  var err = new Error(message);\n  var error = Object.assign(err, {\n    name: name,\n    messageFormat: messageFormat,\n    messageParams: messageParams,\n    type: type,\n    taalOpcodes: [2, 2] // skip frame (code=2) twice\n\n  }); // In V8, Error objects keep the closure scope chain alive until the\n  // err.stack property is accessed.\n\n  if (error.stack === undefined) {\n    // IE sets the stack only if error is thrown\n    try {\n      throw error;\n    } catch (_unused) {}\n  }\n\n  return error;\n}\n\nmodule.exports = {\n  create: function create(name, messageFormat) {\n    for (var _len2 = arguments.length, messageParams = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      messageParams[_key2 - 2] = arguments[_key2];\n    }\n\n    return createError.apply(void 0, ['error', name, messageFormat].concat(messageParams));\n  },\n  createWarning: function createWarning(name, messageFormat) {\n    for (var _len3 = arguments.length, messageParams = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      messageParams[_key3 - 2] = arguments[_key3];\n    }\n\n    return createError.apply(void 0, ['warn', name, messageFormat].concat(messageParams));\n  }\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _window, _window$performance;\n\nvar isPerformanceNowAvailable = typeof window !== 'undefined' && typeof ((_window = window) === null || _window === void 0 ? void 0 : (_window$performance = _window.performance) === null || _window$performance === void 0 ? void 0 : _window$performance.now) === 'function';\n\nfunction currentTimestamp() {\n  if (isPerformanceNowAvailable) {\n    return window.performance.now();\n  }\n\n  return Date.now();\n}\n\nfunction withDuration(cb) {\n  var startTime = currentTimestamp();\n  var result = cb();\n  return [currentTimestamp() - startTime, result];\n}\n\nmodule.exports = withDuration;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar deepFreeze = require('../util/deepFreeze');\n\nvar _require = require('./ClientID'),\n    isClientID = _require.isClientID;\n\nvar _require2 = require('./RelayStoreUtils'),\n    ACTOR_IDENTIFIER_KEY = _require2.ACTOR_IDENTIFIER_KEY,\n    ID_KEY = _require2.ID_KEY,\n    INVALIDATED_AT_KEY = _require2.INVALIDATED_AT_KEY,\n    REF_KEY = _require2.REF_KEY,\n    REFS_KEY = _require2.REFS_KEY,\n    ROOT_ID = _require2.ROOT_ID,\n    TYPENAME_KEY = _require2.TYPENAME_KEY;\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * @public\n *\n * Low-level record manipulation methods.\n *\n * A note about perf: we use long-hand property access rather than computed\n * properties in this file for speed ie.\n *\n *    const object = {};\n *    object[KEY] = value;\n *    record[storageKey] = object;\n *\n * instead of:\n *\n *    record[storageKey] = {\n *      [KEY]: value,\n *    };\n *\n * The latter gets transformed by Babel into something like:\n *\n *    function _defineProperty(obj, key, value) {\n *      if (key in obj) {\n *        Object.defineProperty(obj, key, {\n *          value: value,\n *          enumerable: true,\n *          configurable: true,\n *          writable: true,\n *        });\n *      } else {\n *        obj[key] = value;\n *      }\n *      return obj;\n *    }\n *\n *    record[storageKey] = _defineProperty({}, KEY, value);\n *\n * A quick benchmark shows that computed property access is an order of\n * magnitude slower (times in seconds for 100,000 iterations):\n *\n *               best     avg     sd\n *    computed 0.02175 0.02292 0.00113\n *      manual 0.00110 0.00123 0.00008\n */\n\n/**\n * @public\n *\n * Clone a record.\n */\n\n\nfunction clone(record) {\n  return (0, _objectSpread2[\"default\"])({}, record);\n}\n/**\n * @public\n *\n * Copies all fields from `source` to `sink`, excluding `__id` and `__typename`.\n *\n * NOTE: This function does not treat `id` specially. To preserve the id,\n * manually reset it after calling this function. Also note that values are\n * copied by reference and not value; callers should ensure that values are\n * copied on write.\n */\n\n\nfunction copyFields(source, sink) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      if (key !== ID_KEY && key !== TYPENAME_KEY) {\n        sink[key] = source[key];\n      }\n    }\n  }\n}\n/**\n * @public\n *\n * Create a new record.\n */\n\n\nfunction create(dataID, typeName) {\n  // See perf note above for why we aren't using computed property access.\n  var record = {};\n  record[ID_KEY] = dataID;\n  record[TYPENAME_KEY] = typeName;\n  return record;\n}\n/**\n * @public\n *\n * Get the record's `id` if available or the client-generated identifier.\n */\n\n\nfunction getDataID(record) {\n  return record[ID_KEY];\n}\n/**\n * @public\n *\n * Get the concrete type of the record.\n */\n\n\nfunction getType(record) {\n  return record[TYPENAME_KEY];\n}\n/**\n * @public\n *\n * Get a scalar (non-link) field value.\n */\n\n\nfunction getValue(record, storageKey) {\n  var value = record[storageKey];\n\n  if (value && typeof value === 'object') {\n    !(!value.hasOwnProperty(REF_KEY) && !value.hasOwnProperty(REFS_KEY)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getValue(): Expected a scalar (non-link) value for `%s.%s` ' + 'but found %s.', record[ID_KEY], storageKey, value.hasOwnProperty(REF_KEY) ? 'a linked record' : 'plural linked records') : invariant(false) : void 0;\n  }\n\n  return value;\n}\n/**\n * @public\n *\n * Get the value of a field as a reference to another record. Throws if the\n * field has a different type.\n */\n\n\nfunction getLinkedRecordID(record, storageKey) {\n  var link = record[storageKey];\n\n  if (link == null) {\n    return link;\n  }\n\n  !(typeof link === 'object' && link && typeof link[REF_KEY] === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordID(): Expected `%s.%s` to be a linked ID, ' + 'was `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(link), typeof link === 'object' && link[REFS_KEY] !== undefined ? ' It appears to be a plural linked record: did you mean to call ' + 'getLinkedRecords() instead of getLinkedRecord()?' : '') : invariant(false) : void 0;\n  return link[REF_KEY];\n}\n/**\n * @public\n *\n * Get the value of a field as a list of references to other records. Throws if\n * the field has a different type.\n */\n\n\nfunction getLinkedRecordIDs(record, storageKey) {\n  var links = record[storageKey];\n\n  if (links == null) {\n    return links;\n  }\n\n  !(typeof links === 'object' && Array.isArray(links[REFS_KEY])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordIDs(): Expected `%s.%s` to contain an array ' + 'of linked IDs, got `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(links), typeof links === 'object' && links[REF_KEY] !== undefined ? ' It appears to be a singular linked record: did you mean to call ' + 'getLinkedRecord() instead of getLinkedRecords()?' : '') : invariant(false) : void 0; // assume items of the array are ids\n\n  return links[REFS_KEY];\n}\n/**\n * @public\n *\n * Returns the epoch at which the record was invalidated, if it\n * ever was; otherwise returns null;\n */\n\n\nfunction getInvalidationEpoch(record) {\n  if (record == null) {\n    return null;\n  }\n\n  var invalidatedAt = record[INVALIDATED_AT_KEY];\n\n  if (typeof invalidatedAt !== 'number') {\n    // If the record has never been invalidated, it isn't stale.\n    return null;\n  }\n\n  return invalidatedAt;\n}\n/**\n * @public\n *\n * Compares the fields of a previous and new record, returning either the\n * previous record if all fields are equal or a new record (with merged fields)\n * if any fields have changed.\n */\n\n\nfunction update(prevRecord, nextRecord) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType, _getType2;\n\n    var prevID = getDataID(prevRecord);\n    var nextID = getDataID(nextRecord);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0; // note: coalesce null/undefined to null\n\n    var prevType = (_getType = getType(prevRecord)) !== null && _getType !== void 0 ? _getType : null;\n    var nextType = (_getType2 = getType(nextRecord)) !== null && _getType2 !== void 0 ? _getType2 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n\n  var updated = null;\n  var keys = Object.keys(nextRecord);\n\n  for (var ii = 0; ii < keys.length; ii++) {\n    var key = keys[ii];\n\n    if (updated || !areEqual(prevRecord[key], nextRecord[key])) {\n      updated = updated !== null ? updated : (0, _objectSpread2[\"default\"])({}, prevRecord);\n      updated[key] = nextRecord[key];\n    }\n  }\n\n  return updated !== null ? updated : prevRecord;\n}\n/**\n * @public\n *\n * Returns a new record with the contents of the given records. Fields in the\n * second record will overwrite identical fields in the first record.\n */\n\n\nfunction merge(record1, record2) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType3, _getType4;\n\n    var prevID = getDataID(record1);\n    var nextID = getDataID(record2);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0; // note: coalesce null/undefined to null\n\n    var prevType = (_getType3 = getType(record1)) !== null && _getType3 !== void 0 ? _getType3 : null;\n    var nextType = (_getType4 = getType(record2)) !== null && _getType4 !== void 0 ? _getType4 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n\n  return Object.assign({}, record1, record2);\n}\n/**\n * @public\n *\n * Prevent modifications to the record. Attempts to call `set*` functions on a\n * frozen record will fatal at runtime.\n */\n\n\nfunction freeze(record) {\n  deepFreeze(record);\n}\n/**\n * @public\n *\n * Set the value of a storageKey to a scalar.\n */\n\n\nfunction setValue(record, storageKey, value) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var prevID = getDataID(record);\n\n    if (storageKey === ID_KEY) {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === value, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, value) : void 0;\n    } else if (storageKey === TYPENAME_KEY) {\n      var _getType5;\n\n      // note: coalesce null/undefined to null\n      var prevType = (_getType5 = getType(record)) !== null && _getType5 !== void 0 ? _getType5 : null;\n      var nextType = value !== null && value !== void 0 ? value : null;\n      process.env.NODE_ENV !== \"production\" ? warning(isClientID(getDataID(record)) && getDataID(record) !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n    }\n  }\n\n  record[storageKey] = value;\n}\n/**\n * @public\n *\n * Set the value of a field to a reference to another record.\n */\n\n\nfunction setLinkedRecordID(record, storageKey, linkedID) {\n  // See perf note above for why we aren't using computed property access.\n  var link = {};\n  link[REF_KEY] = linkedID;\n  record[storageKey] = link;\n}\n/**\n * @public\n *\n * Set the value of a field to a list of references other records.\n */\n\n\nfunction setLinkedRecordIDs(record, storageKey, linkedIDs) {\n  // See perf note above for why we aren't using computed property access.\n  var links = {};\n  links[REFS_KEY] = linkedIDs;\n  record[storageKey] = links;\n}\n/**\n * @public\n *\n * Set the value of a field to a reference to another record in the actor specific store.\n */\n\n\nfunction setActorLinkedRecordID(record, storageKey, actorIdentifier, linkedID) {\n  // See perf note above for why we aren't using computed property access.\n  var link = {};\n  link[REF_KEY] = linkedID;\n  link[ACTOR_IDENTIFIER_KEY] = actorIdentifier;\n  record[storageKey] = link;\n}\n/**\n * @public\n *\n * Get link to a record and the actor identifier for the store.\n */\n\n\nfunction getActorLinkedRecordID(record, storageKey) {\n  var link = record[storageKey];\n\n  if (link == null) {\n    return link;\n  }\n\n  !(typeof link === 'object' && typeof link[REF_KEY] === 'string' && link[ACTOR_IDENTIFIER_KEY] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getActorLinkedRecordID(): Expected `%s.%s` to be an actor specific linked ID, ' + 'was `%s`.', record[ID_KEY], storageKey, JSON.stringify(link)) : invariant(false) : void 0;\n  return [link[ACTOR_IDENTIFIER_KEY], link[REF_KEY]];\n}\n\nmodule.exports = {\n  clone: clone,\n  copyFields: copyFields,\n  create: create,\n  freeze: freeze,\n  getDataID: getDataID,\n  getInvalidationEpoch: getInvalidationEpoch,\n  getLinkedRecordID: getLinkedRecordID,\n  getLinkedRecordIDs: getLinkedRecordIDs,\n  getType: getType,\n  getValue: getValue,\n  merge: merge,\n  setValue: setValue,\n  setLinkedRecordID: setLinkedRecordID,\n  setLinkedRecordIDs: setLinkedRecordIDs,\n  update: update,\n  getActorLinkedRecordID: getActorLinkedRecordID,\n  setActorLinkedRecordID: setActorLinkedRecordID\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayRecordState = {\n  /**\n   * Record exists (either fetched from the server or produced by a local,\n   * optimistic update).\n   */\n  EXISTENT: 'EXISTENT',\n\n  /**\n   * Record is known not to exist (either as the result of a mutation, or\n   * because the server returned `null` when queried for the record).\n   */\n  NONEXISTENT: 'NONEXISTENT',\n\n  /**\n   * Record State is unknown because it has not yet been fetched from the\n   * server.\n   */\n  UNKNOWN: 'UNKNOWN'\n};\nmodule.exports = RelayRecordState;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar RelayRecordState = require('./RelayRecordState');\n\nvar EXISTENT = RelayRecordState.EXISTENT,\n    NONEXISTENT = RelayRecordState.NONEXISTENT,\n    UNKNOWN = RelayRecordState.UNKNOWN;\n/**\n * An implementation of the `MutableRecordSource` interface (defined in\n * `RelayStoreTypes`) that holds all records in memory (JS Map).\n */\n\nvar RelayRecordSource = /*#__PURE__*/function () {\n  function RelayRecordSource(records) {\n    var _this = this;\n\n    this._records = new Map();\n\n    if (records != null) {\n      Object.keys(records).forEach(function (key) {\n        _this._records.set(key, records[key]);\n      });\n    }\n  }\n\n  RelayRecordSource.create = function create(records) {\n    return new RelayRecordSource(records);\n  };\n\n  var _proto = RelayRecordSource.prototype;\n\n  _proto.clear = function clear() {\n    this._records = new Map();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._records.set(dataID, null);\n  };\n\n  _proto.get = function get(dataID) {\n    return this._records.get(dataID);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Array.from(this._records.keys());\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    if (!this._records.has(dataID)) {\n      return UNKNOWN;\n    }\n\n    return this._records.get(dataID) == null ? NONEXISTENT : EXISTENT;\n  };\n\n  _proto.has = function has(dataID) {\n    return this._records.has(dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._records[\"delete\"](dataID);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._records.set(dataID, record);\n  };\n\n  _proto.size = function size() {\n    return this._records.size;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var obj = {};\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._records),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _step.value,\n            key = _step$value[0],\n            value = _step$value[1];\n        obj[key] = value;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return obj;\n  };\n\n  return RelayRecordSource;\n}();\n\nmodule.exports = RelayRecordSource;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n'use strict';\n\nvar ACTOR_IDENTIFIER_FIELD_NAME = 'actor_key';\n\nvar _require = require('./ActorIdentifier'),\n    getActorIdentifier = _require.getActorIdentifier;\n\nfunction getActorIdentifierFromPayload(payload) {\n  if (payload != null && typeof payload === 'object' && typeof payload[ACTOR_IDENTIFIER_FIELD_NAME] === 'string') {\n    return getActorIdentifier(payload[ACTOR_IDENTIFIER_FIELD_NAME]);\n  }\n}\n\nmodule.exports = {\n  ACTOR_IDENTIFIER_FIELD_NAME: ACTOR_IDENTIFIER_FIELD_NAME,\n  getActorIdentifierFromPayload: getActorIdentifierFromPayload\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./RelayModernRecord'),\n    getType = _require.getType;\n\nvar invariant = require('invariant'); // Reachable (client) executable definitions encountered while server component\n// rendering\n\n\nvar REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = 'executableDefinitions';\nvar REACT_FLIGHT_TREE_STORAGE_KEY = 'tree';\nvar REACT_FLIGHT_TYPE_NAME = 'ReactFlightComponent';\n\nfunction refineToReactFlightPayloadData(payload) {\n  if (payload == null || typeof payload !== 'object' || typeof payload.status !== 'string' || !Array.isArray(payload.tree) && payload.tree !== null || !Array.isArray(payload.queries) || !Array.isArray(payload.fragments) || !Array.isArray(payload.errors)) {\n    return null;\n  }\n\n  return payload;\n}\n\nfunction getReactFlightClientResponse(record) {\n  !(getType(record) === REACT_FLIGHT_TYPE_NAME) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getReactFlightClientResponse(): Expected a ReactFlightComponentRecord, ' + 'got %s.', record) : invariant(false) : void 0;\n  return record[REACT_FLIGHT_TREE_STORAGE_KEY];\n}\n\nmodule.exports = {\n  REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY: REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n  REACT_FLIGHT_TREE_STORAGE_KEY: REACT_FLIGHT_TREE_STORAGE_KEY,\n  REACT_FLIGHT_TYPE_NAME: REACT_FLIGHT_TYPE_NAME,\n  getReactFlightClientResponse: getReactFlightClientResponse,\n  refineToReactFlightPayloadData: refineToReactFlightPayloadData\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar PREFIX = 'client:__type:';\nvar TYPE_SCHEMA_TYPE = '__TypeSchema';\n\nfunction generateTypeID(typeName) {\n  return PREFIX + typeName;\n}\n\nfunction isTypeID(id) {\n  return id.indexOf(PREFIX) === 0;\n}\n\nmodule.exports = {\n  generateTypeID: generateTypeID,\n  isTypeID: isTypeID,\n  TYPE_SCHEMA_TYPE: TYPE_SCHEMA_TYPE\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _require = require('../multi-actor-environment/ActorUtils'),\n    ACTOR_IDENTIFIER_FIELD_NAME = _require.ACTOR_IDENTIFIER_FIELD_NAME,\n    getActorIdentifierFromPayload = _require.getActorIdentifierFromPayload;\n\nvar _require2 = require('../util/RelayConcreteNode'),\n    ACTOR_CHANGE = _require2.ACTOR_CHANGE,\n    CLIENT_COMPONENT = _require2.CLIENT_COMPONENT,\n    CLIENT_EXTENSION = _require2.CLIENT_EXTENSION,\n    CONDITION = _require2.CONDITION,\n    DEFER = _require2.DEFER,\n    FLIGHT_FIELD = _require2.FLIGHT_FIELD,\n    FRAGMENT_SPREAD = _require2.FRAGMENT_SPREAD,\n    INLINE_FRAGMENT = _require2.INLINE_FRAGMENT,\n    LINKED_FIELD = _require2.LINKED_FIELD,\n    LINKED_HANDLE = _require2.LINKED_HANDLE,\n    MODULE_IMPORT = _require2.MODULE_IMPORT,\n    SCALAR_FIELD = _require2.SCALAR_FIELD,\n    SCALAR_HANDLE = _require2.SCALAR_HANDLE,\n    STREAM = _require2.STREAM,\n    TYPE_DISCRIMINATOR = _require2.TYPE_DISCRIMINATOR;\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar _require3 = require('./ClientID'),\n    generateClientID = _require3.generateClientID,\n    isClientID = _require3.isClientID;\n\nvar _require4 = require('./RelayConcreteVariables'),\n    getLocalVariables = _require4.getLocalVariables;\n\nvar RelayModernRecord = require('./RelayModernRecord');\n\nvar _require5 = require('./RelayModernSelector'),\n    createNormalizationSelector = _require5.createNormalizationSelector;\n\nvar _require6 = require('./RelayStoreReactFlightUtils'),\n    REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = _require6.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n    REACT_FLIGHT_TREE_STORAGE_KEY = _require6.REACT_FLIGHT_TREE_STORAGE_KEY,\n    REACT_FLIGHT_TYPE_NAME = _require6.REACT_FLIGHT_TYPE_NAME,\n    refineToReactFlightPayloadData = _require6.refineToReactFlightPayloadData;\n\nvar _require7 = require('./RelayStoreUtils'),\n    ROOT_ID = _require7.ROOT_ID,\n    ROOT_TYPE = _require7.ROOT_TYPE,\n    TYPENAME_KEY = _require7.TYPENAME_KEY,\n    getArgumentValues = _require7.getArgumentValues,\n    getHandleStorageKey = _require7.getHandleStorageKey,\n    getModuleComponentKey = _require7.getModuleComponentKey,\n    getModuleOperationKey = _require7.getModuleOperationKey,\n    getStorageKey = _require7.getStorageKey;\n\nvar _require8 = require('./TypeID'),\n    TYPE_SCHEMA_TYPE = _require8.TYPE_SCHEMA_TYPE,\n    generateTypeID = _require8.generateTypeID;\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n\n/**\n * Normalizes the results of a query and standard GraphQL response, writing the\n * normalized records/fields into the given MutableRecordSource.\n */\nfunction normalize(recordSource, selector, response, options) {\n  var dataID = selector.dataID,\n      node = selector.node,\n      variables = selector.variables;\n  var normalizer = new RelayResponseNormalizer(recordSource, variables, options);\n  return normalizer.normalizeResponse(node, dataID, response);\n}\n/**\n * @private\n *\n * Helper for handling payloads.\n */\n\n\nvar RelayResponseNormalizer = /*#__PURE__*/function () {\n  function RelayResponseNormalizer(recordSource, variables, options) {\n    this._actorIdentifier = options.actorIdentifier;\n    this._getDataId = options.getDataID;\n    this._handleFieldPayloads = [];\n    this._treatMissingFieldsAsNull = options.treatMissingFieldsAsNull;\n    this._incrementalPlaceholders = [];\n    this._isClientExtension = false;\n    this._isUnmatchedAbstractType = false;\n    this._followupPayloads = [];\n    this._path = options.path ? (0, _toConsumableArray2[\"default\"])(options.path) : [];\n    this._recordSource = recordSource;\n    this._variables = variables;\n    this._reactFlightPayloadDeserializer = options.reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = options.reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = options.shouldProcessClientComponents;\n  }\n\n  var _proto = RelayResponseNormalizer.prototype;\n\n  _proto.normalizeResponse = function normalizeResponse(node, dataID, data) {\n    var record = this._recordSource.get(dataID);\n\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Expected root record `%s` to exist.', dataID) : invariant(false) : void 0;\n\n    this._traverseSelections(node, record, data);\n\n    return {\n      errors: null,\n      fieldPayloads: this._handleFieldPayloads,\n      incrementalPlaceholders: this._incrementalPlaceholders,\n      followupPayloads: this._followupPayloads,\n      source: this._recordSource,\n      isFinal: false\n    };\n  };\n\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n\n  _proto._getRecordType = function _getRecordType(data) {\n    var typeName = data[TYPENAME_KEY];\n    !(typeName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Expected a typename for record `%s`.', JSON.stringify(data, null, 2)) : invariant(false) : void 0;\n    return typeName;\n  };\n\n  _proto._traverseSelections = function _traverseSelections(node, record, data) {\n    for (var i = 0; i < node.selections.length; i++) {\n      var selection = node.selections[i];\n\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n        case LINKED_FIELD:\n          this._normalizeField(node, selection, record, data);\n\n          break;\n\n        case CONDITION:\n          var conditionValue = Boolean(this._getVariableValue(selection.condition));\n\n          if (conditionValue === selection.passingValue) {\n            this._traverseSelections(selection, record, data);\n          }\n\n          break;\n\n        case FRAGMENT_SPREAD:\n          {\n            var prevVariables = this._variables;\n            this._variables = getLocalVariables(this._variables, selection.fragment.argumentDefinitions, selection.args);\n\n            this._traverseSelections(selection.fragment, record, data);\n\n            this._variables = prevVariables;\n            break;\n          }\n\n        case INLINE_FRAGMENT:\n          {\n            var abstractKey = selection.abstractKey;\n\n            if (abstractKey == null) {\n              var _typeName = RelayModernRecord.getType(record);\n\n              if (_typeName === selection.type) {\n                this._traverseSelections(selection, record, data);\n              }\n            } else {\n              var implementsInterface = data.hasOwnProperty(abstractKey);\n\n              var _typeName2 = RelayModernRecord.getType(record);\n\n              var typeID = generateTypeID(_typeName2);\n\n              var typeRecord = this._recordSource.get(typeID);\n\n              if (typeRecord == null) {\n                typeRecord = RelayModernRecord.create(typeID, TYPE_SCHEMA_TYPE);\n\n                this._recordSource.set(typeID, typeRecord);\n              }\n\n              RelayModernRecord.setValue(typeRecord, abstractKey, implementsInterface);\n\n              if (implementsInterface) {\n                this._traverseSelections(selection, record, data);\n              }\n            }\n\n            break;\n          }\n\n        case TYPE_DISCRIMINATOR:\n          {\n            var _abstractKey = selection.abstractKey;\n\n            var _implementsInterface = data.hasOwnProperty(_abstractKey);\n\n            var _typeName3 = RelayModernRecord.getType(record);\n\n            var _typeID = generateTypeID(_typeName3);\n\n            var _typeRecord = this._recordSource.get(_typeID);\n\n            if (_typeRecord == null) {\n              _typeRecord = RelayModernRecord.create(_typeID, TYPE_SCHEMA_TYPE);\n\n              this._recordSource.set(_typeID, _typeRecord);\n            }\n\n            RelayModernRecord.setValue(_typeRecord, _abstractKey, _implementsInterface);\n            break;\n          }\n\n        case LINKED_HANDLE:\n        case SCALAR_HANDLE:\n          var args = selection.args ? getArgumentValues(selection.args, this._variables) : {};\n          var fieldKey = getStorageKey(selection, this._variables);\n          var handleKey = getHandleStorageKey(selection, this._variables);\n\n          this._handleFieldPayloads.push({\n            /* $FlowFixMe[class-object-subtyping] added when improving typing\n             * for this parameters */\n            args: args,\n            dataID: RelayModernRecord.getDataID(record),\n            fieldKey: fieldKey,\n            handle: selection.handle,\n            handleKey: handleKey,\n            handleArgs: selection.handleArgs ?\n            /* $FlowFixMe[class-object-subtyping] added when improving typing\n             * for this parameters */\n            getArgumentValues(selection.handleArgs, this._variables) : {}\n          });\n\n          break;\n\n        case MODULE_IMPORT:\n          this._normalizeModuleImport(node, selection, record, data);\n\n          break;\n\n        case DEFER:\n          this._normalizeDefer(selection, record, data);\n\n          break;\n\n        case STREAM:\n          this._normalizeStream(selection, record, data);\n\n          break;\n\n        case CLIENT_EXTENSION:\n          var isClientExtension = this._isClientExtension;\n          this._isClientExtension = true;\n\n          this._traverseSelections(selection, record, data);\n\n          this._isClientExtension = isClientExtension;\n          break;\n\n        case CLIENT_COMPONENT:\n          if (this._shouldProcessClientComponents === false) {\n            break;\n          }\n\n          this._traverseSelections(selection.fragment, record, data);\n\n          break;\n\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            this._normalizeFlightField(node, selection, record, data);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n\n          break;\n\n        case ACTOR_CHANGE:\n          this._normalizeActorChange(node, selection, record, data);\n\n          break;\n\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    }\n  };\n\n  _proto._normalizeDefer = function _normalizeDefer(defer, record, data) {\n    var isDeferred = defer[\"if\"] === null || this._getVariableValue(defer[\"if\"]);\n\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(typeof isDeferred === 'boolean', 'RelayResponseNormalizer: Expected value for @defer `if` argument to ' + 'be a boolean, got `%s`.', isDeferred) : void 0;\n    }\n\n    if (isDeferred === false) {\n      // If defer is disabled there will be no additional response chunk:\n      // normalize the data already present.\n      this._traverseSelections(defer, record, data);\n    } else {\n      // Otherwise data *for this selection* should not be present: enqueue\n      // metadata to process the subsequent response chunk.\n      this._incrementalPlaceholders.push({\n        kind: 'defer',\n        data: data,\n        label: defer.label,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        selector: createNormalizationSelector(defer, RelayModernRecord.getDataID(record), this._variables),\n        typeName: RelayModernRecord.getType(record),\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n\n  _proto._normalizeStream = function _normalizeStream(stream, record, data) {\n    // Always normalize regardless of whether streaming is enabled or not,\n    // this populates the initial array value (including any items when\n    // initial_count > 0).\n    this._traverseSelections(stream, record, data);\n\n    var isStreamed = stream[\"if\"] === null || this._getVariableValue(stream[\"if\"]);\n\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(typeof isStreamed === 'boolean', 'RelayResponseNormalizer: Expected value for @stream `if` argument ' + 'to be a boolean, got `%s`.', isStreamed) : void 0;\n    }\n\n    if (isStreamed === true) {\n      // If streaming is enabled, *also* emit metadata to process any\n      // response chunks that may be delivered.\n      this._incrementalPlaceholders.push({\n        kind: 'stream',\n        label: stream.label,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        parentID: RelayModernRecord.getDataID(record),\n        node: stream,\n        variables: this._variables,\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n\n  _proto._normalizeModuleImport = function _normalizeModuleImport(parent, moduleImport, record, data) {\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for @module to be an object.') : invariant(false) : void 0;\n    var typeName = RelayModernRecord.getType(record);\n    var componentKey = getModuleComponentKey(moduleImport.documentName);\n    var componentReference = data[componentKey];\n    RelayModernRecord.setValue(record, componentKey, componentReference !== null && componentReference !== void 0 ? componentReference : null);\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = data[operationKey];\n    RelayModernRecord.setValue(record, operationKey, operationReference !== null && operationReference !== void 0 ? operationReference : null);\n\n    if (operationReference != null) {\n      this._followupPayloads.push({\n        kind: 'ModuleImportPayload',\n        args: moduleImport.args,\n        data: data,\n        dataID: RelayModernRecord.getDataID(record),\n        operationReference: operationReference,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        typeName: typeName,\n        variables: this._variables,\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n\n  _proto._normalizeField = function _normalizeField(parent, selection, record, data) {\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'writeField(): Expected data for field `%s` to be an object.', selection.name) : invariant(false) : void 0;\n    var responseKey = selection.alias || selection.name;\n    var storageKey = getStorageKey(selection, this._variables);\n    var fieldValue = data[responseKey];\n\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        // Fields may be missing in the response in two main cases:\n        // - Inside a client extension: the server will not generally return\n        //   values for these fields, but a local update may provide them.\n        // - Inside an abstract type refinement where the concrete type does\n        //   not conform to the interface/union.\n        // However an otherwise-required field may also be missing if the server\n        // is configured to skip fields with `null` values, in which case the\n        // client is assumed to be correctly configured with\n        // treatMissingFieldsAsNull=true.\n        var isOptionalField = this._isClientExtension || this._isUnmatchedAbstractType;\n\n        if (isOptionalField) {\n          // Field not expected to exist regardless of whether the server is pruning null\n          // fields or not.\n          return;\n        } else if (!this._treatMissingFieldsAsNull) {\n          // Not optional and the server is not pruning null fields: field is expected\n          // to be present\n          if (process.env.NODE_ENV !== \"production\") {\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : void 0;\n          }\n\n          return;\n        }\n      }\n\n      if (process.env.NODE_ENV !== \"production\") {\n        if (selection.kind === SCALAR_FIELD) {\n          this._validateConflictingFieldsWithIdenticalId(record, storageKey, // When using `treatMissingFieldsAsNull` the conflicting validation raises a false positive\n          // because the value is set using `null` but validated using `fieldValue` which at this point\n          // will be `undefined`.\n          // Setting this to `null` matches the value that we actually set to the `fieldValue`.\n          null);\n        }\n      }\n\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n\n    if (selection.kind === SCALAR_FIELD) {\n      if (process.env.NODE_ENV !== \"production\") {\n        this._validateConflictingFieldsWithIdenticalId(record, storageKey, fieldValue);\n      }\n\n      RelayModernRecord.setValue(record, storageKey, fieldValue);\n    } else if (selection.kind === LINKED_FIELD) {\n      this._path.push(responseKey);\n\n      if (selection.plural) {\n        this._normalizePluralLink(selection, record, storageKey, fieldValue);\n      } else {\n        this._normalizeLink(selection, record, storageKey, fieldValue);\n      }\n\n      this._path.pop();\n    } else {\n      selection;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Unexpected ast kind `%s` during normalization.', selection.kind) : invariant(false) : void 0;\n    }\n  };\n\n  _proto._normalizeActorChange = function _normalizeActorChange(parent, selection, record, data) {\n    var _field$concreteType;\n\n    var field = selection.linkedField;\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '_normalizeActorChange(): Expected data for field `%s` to be an object.', field.name) : invariant(false) : void 0;\n    var responseKey = field.alias || field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var fieldValue = data[responseKey];\n\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        var isOptionalField = this._isClientExtension || this._isUnmatchedAbstractType;\n\n        if (isOptionalField) {\n          return;\n        } else if (!this._treatMissingFieldsAsNull) {\n          if (process.env.NODE_ENV !== \"production\") {\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : void 0;\n          }\n\n          return;\n        }\n      }\n\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n\n    var actorIdentifier = getActorIdentifierFromPayload(fieldValue);\n\n    if (actorIdentifier == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload. Payload is `%s`.', ACTOR_IDENTIFIER_FIELD_NAME, JSON.stringify(fieldValue, null, 2)) : void 0;\n      }\n\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    } // $FlowFixMe[incompatible-call]\n\n\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : this._getRecordType(fieldValue);\n    var nextID = this._getDataId( // $FlowFixMe[incompatible-call]\n    fieldValue, typeName) || RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);\n    !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id on field `%s` to be a string.', storageKey) : invariant(false) : void 0;\n    RelayModernRecord.setActorLinkedRecordID(record, storageKey, actorIdentifier, nextID);\n\n    this._followupPayloads.push({\n      kind: 'ActorPayload',\n      data: fieldValue,\n      dataID: nextID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(this._path), [responseKey]),\n      typeName: typeName,\n      variables: this._variables,\n      node: field,\n      actorIdentifier: actorIdentifier\n    });\n  };\n\n  _proto._normalizeFlightField = function _normalizeFlightField(parent, selection, record, data) {\n    var responseKey = selection.alias || selection.name;\n    var storageKey = getStorageKey(selection, this._variables);\n    var fieldValue = data[responseKey];\n\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        // Flight field may be missing in the response if:\n        // - It is inside an abstract type refinement where the concrete type does\n        //   not conform to the interface/union.\n        // However an otherwise-required field may also be missing if the server\n        // is configured to skip fields with `null` values, in which case the\n        // client is assumed to be correctly configured with\n        // treatMissingFieldsAsNull=true.\n        if (this._isUnmatchedAbstractType) {\n          // Field not expected to exist regardless of whether the server is pruning null\n          // fields or not.\n          return;\n        } else {\n          // Not optional and the server is not pruning null fields: field is expected\n          // to be present\n          !this._treatMissingFieldsAsNull ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Payload did not contain a value for ' + 'field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : invariant(false) : void 0;\n        }\n      }\n\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n\n    var reactFlightPayload = refineToReactFlightPayloadData(fieldValue);\n    var reactFlightPayloadDeserializer = this._reactFlightPayloadDeserializer;\n    !(reactFlightPayload != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected React Flight payload data to be an ' + 'object with `status`, tree`, `queries` and `errors` properties, got ' + '`%s`.', fieldValue) : invariant(false) : void 0;\n    !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected reactFlightPayloadDeserializer to ' + 'be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n\n    if (reactFlightPayload.errors.length > 0) {\n      if (typeof this._reactFlightServerErrorHandler === 'function') {\n        this._reactFlightServerErrorHandler(reactFlightPayload.status, reactFlightPayload.errors);\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Received server errors for field `%s`.\\n\\n' + '%s\\n%s', responseKey, reactFlightPayload.errors[0].message, reactFlightPayload.errors[0].stack) : void 0;\n      }\n    }\n\n    var reactFlightID = generateClientID(RelayModernRecord.getDataID(record), getStorageKey(selection, this._variables));\n\n    var reactFlightClientResponseRecord = this._recordSource.get(reactFlightID);\n\n    if (reactFlightClientResponseRecord == null) {\n      reactFlightClientResponseRecord = RelayModernRecord.create(reactFlightID, REACT_FLIGHT_TYPE_NAME);\n\n      this._recordSource.set(reactFlightID, reactFlightClientResponseRecord);\n    }\n\n    if (reactFlightPayload.tree == null) {\n      // This typically indicates that a fatal server error prevented rows from\n      // being written. When this occurs, we should not continue normalization of\n      // the Flight field because the row response is malformed.\n      //\n      // Receiving empty rows is OK because it can indicate the start of a stream.\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Expected `tree` not to be null. This ' + 'typically indicates that a fatal server error prevented any Server ' + 'Component rows from being written.') : void 0; // We create the flight record with a null value for the tree\n      // and empty reachable definitions\n\n      RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_TREE_STORAGE_KEY, null);\n      RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY, []);\n      RelayModernRecord.setLinkedRecordID(record, storageKey, reactFlightID);\n      return;\n    } // We store the deserialized reactFlightClientResponse in a separate\n    // record and link it to the parent record. This is so we can GC the Flight\n    // tree later even if the parent record is still reachable.\n\n\n    var reactFlightClientResponse = reactFlightPayloadDeserializer(reactFlightPayload.tree);\n    RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_TREE_STORAGE_KEY, reactFlightClientResponse);\n    var reachableExecutableDefinitions = [];\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(reactFlightPayload.queries),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var query = _step.value;\n\n        if (query.response.data != null) {\n          this._followupPayloads.push({\n            kind: 'ModuleImportPayload',\n            args: null,\n            data: query.response.data,\n            dataID: ROOT_ID,\n            operationReference: query.module,\n            path: [],\n            typeName: ROOT_TYPE,\n            variables: query.variables,\n            actorIdentifier: this._actorIdentifier\n          });\n        }\n\n        reachableExecutableDefinitions.push({\n          module: query.module,\n          variables: query.variables\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(reactFlightPayload.fragments),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var fragment = _step2.value;\n\n        if (fragment.response.data != null) {\n          this._followupPayloads.push({\n            kind: 'ModuleImportPayload',\n            args: null,\n            data: fragment.response.data,\n            dataID: fragment.__id,\n            operationReference: fragment.module,\n            path: [],\n            typeName: fragment.__typename,\n            variables: fragment.variables,\n            actorIdentifier: this._actorIdentifier\n          });\n        }\n\n        reachableExecutableDefinitions.push({\n          module: fragment.module,\n          variables: fragment.variables\n        });\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY, reachableExecutableDefinitions);\n    RelayModernRecord.setLinkedRecordID(record, storageKey, reactFlightID);\n  };\n\n  _proto._normalizeLink = function _normalizeLink(field, record, storageKey, fieldValue) {\n    var _field$concreteType2;\n\n    !(typeof fieldValue === 'object' && fieldValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for field `%s` to be an object.', storageKey) : invariant(false) : void 0;\n    var nextID = this._getDataId( // $FlowFixMe[incompatible-variance]\n    fieldValue, // $FlowFixMe[incompatible-variance]\n    (_field$concreteType2 = field.concreteType) !== null && _field$concreteType2 !== void 0 ? _field$concreteType2 : this._getRecordType(fieldValue)) || // Reuse previously generated client IDs\n    RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);\n    !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id on field `%s` to be a string.', storageKey) : invariant(false) : void 0;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      this._validateConflictingLinkedFieldsWithIdenticalId(record, RelayModernRecord.getLinkedRecordID(record, storageKey), nextID, storageKey);\n    }\n\n    RelayModernRecord.setLinkedRecordID(record, storageKey, nextID);\n\n    var nextRecord = this._recordSource.get(nextID);\n\n    if (!nextRecord) {\n      // $FlowFixMe[incompatible-variance]\n      var _typeName4 = field.concreteType || this._getRecordType(fieldValue);\n\n      nextRecord = RelayModernRecord.create(nextID, _typeName4);\n\n      this._recordSource.set(nextID, nextRecord);\n    } else if (process.env.NODE_ENV !== \"production\") {\n      this._validateRecordType(nextRecord, field, fieldValue);\n    } // $FlowFixMe[incompatible-variance]\n\n\n    this._traverseSelections(field, nextRecord, fieldValue);\n  };\n\n  _proto._normalizePluralLink = function _normalizePluralLink(field, record, storageKey, fieldValue) {\n    var _this = this;\n\n    !Array.isArray(fieldValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for field `%s` to be an array ' + 'of objects.', storageKey) : invariant(false) : void 0;\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    var nextIDs = [];\n    fieldValue.forEach(function (item, nextIndex) {\n      var _field$concreteType3;\n\n      // validate response data\n      if (item == null) {\n        nextIDs.push(item);\n        return;\n      }\n\n      _this._path.push(String(nextIndex));\n\n      !(typeof item === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected elements for field `%s` to be ' + 'objects.', storageKey) : invariant(false) : void 0;\n      var nextID = _this._getDataId( // $FlowFixMe[incompatible-variance]\n      item, // $FlowFixMe[incompatible-variance]\n      (_field$concreteType3 = field.concreteType) !== null && _field$concreteType3 !== void 0 ? _field$concreteType3 : _this._getRecordType(item)) || prevIDs && prevIDs[nextIndex] || // Reuse previously generated client IDs:\n      generateClientID(RelayModernRecord.getDataID(record), storageKey, nextIndex);\n      !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n      nextIDs.push(nextID);\n\n      var nextRecord = _this._recordSource.get(nextID);\n\n      if (!nextRecord) {\n        // $FlowFixMe[incompatible-variance]\n        var _typeName5 = field.concreteType || _this._getRecordType(item);\n\n        nextRecord = RelayModernRecord.create(nextID, _typeName5);\n\n        _this._recordSource.set(nextID, nextRecord);\n      } else if (process.env.NODE_ENV !== \"production\") {\n        _this._validateRecordType(nextRecord, field, item);\n      } // NOTE: the check to strip __DEV__ code only works for simple\n      // `if (__DEV__)`\n\n\n      if (process.env.NODE_ENV !== \"production\") {\n        if (prevIDs) {\n          _this._validateConflictingLinkedFieldsWithIdenticalId(record, prevIDs[nextIndex], nextID, storageKey);\n        }\n      } // $FlowFixMe[incompatible-variance]\n\n\n      _this._traverseSelections(field, nextRecord, item);\n\n      _this._path.pop();\n    });\n    RelayModernRecord.setLinkedRecordIDs(record, storageKey, nextIDs);\n  }\n  /**\n   * Warns if the type of the record does not match the type of the field/payload.\n   */\n  ;\n\n  _proto._validateRecordType = function _validateRecordType(record, field, payload) {\n    var _field$concreteType4;\n\n    var typeName = (_field$concreteType4 = field.concreteType) !== null && _field$concreteType4 !== void 0 ? _field$concreteType4 : this._getRecordType(payload);\n    var dataID = RelayModernRecord.getDataID(record);\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(dataID) && dataID !== ROOT_ID || RelayModernRecord.getType(record) === typeName, 'RelayResponseNormalizer: Invalid record `%s`. Expected %s to be ' + 'consistent, but the record was assigned conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', dataID, TYPENAME_KEY, RelayModernRecord.getType(record), typeName) : void 0;\n  }\n  /**\n   * Warns if a single response contains conflicting fields with the same id\n   */\n  ;\n\n  _proto._validateConflictingFieldsWithIdenticalId = function _validateConflictingFieldsWithIdenticalId(record, storageKey, fieldValue) {\n    // NOTE: Only call this function in DEV\n    if (process.env.NODE_ENV !== \"production\") {\n      var dataID = RelayModernRecord.getDataID(record);\n      var previousValue = RelayModernRecord.getValue(record, storageKey);\n      process.env.NODE_ENV !== \"production\" ? warning(storageKey === TYPENAME_KEY || previousValue === undefined || areEqual(previousValue, fieldValue), 'RelayResponseNormalizer: Invalid record. The record contains two ' + 'instances of the same id: `%s` with conflicting field, %s and its values: %s and %s. ' + 'If two fields are different but share ' + 'the same id, one field will overwrite the other.', dataID, storageKey, previousValue, fieldValue) : void 0;\n    }\n  }\n  /**\n   * Warns if a single response contains conflicting fields with the same id\n   */\n  ;\n\n  _proto._validateConflictingLinkedFieldsWithIdenticalId = function _validateConflictingLinkedFieldsWithIdenticalId(record, prevID, nextID, storageKey) {\n    // NOTE: Only call this function in DEV\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === undefined || prevID === nextID, 'RelayResponseNormalizer: Invalid record. The record contains ' + 'references to the conflicting field, %s and its id values: %s and %s. ' + 'We need to make sure that the record the field points ' + 'to remains consistent or one field will overwrite the other.', storageKey, prevID, nextID) : void 0;\n    }\n  };\n\n  return RelayResponseNormalizer;\n}();\n\nmodule.exports = {\n  normalize: normalize\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar generateID = require('../util/generateID');\n\nvar getOperation = require('../util/getOperation');\n\nvar RelayError = require('../util/RelayError');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar stableCopy = require('../util/stableCopy');\n\nvar withDuration = require('../util/withDuration');\n\nvar _require = require('./ClientID'),\n    generateClientID = _require.generateClientID,\n    generateUniqueClientID = _require.generateUniqueClientID;\n\nvar _require2 = require('./RelayConcreteVariables'),\n    getLocalVariables = _require2.getLocalVariables;\n\nvar RelayModernRecord = require('./RelayModernRecord');\n\nvar _require3 = require('./RelayModernSelector'),\n    createNormalizationSelector = _require3.createNormalizationSelector,\n    createReaderSelector = _require3.createReaderSelector;\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar RelayResponseNormalizer = require('./RelayResponseNormalizer');\n\nvar _require4 = require('./RelayStoreUtils'),\n    ROOT_TYPE = _require4.ROOT_TYPE,\n    TYPENAME_KEY = _require4.TYPENAME_KEY,\n    getStorageKey = _require4.getStorageKey;\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nfunction execute(config) {\n  return new Executor(config);\n}\n/**\n * Coordinates the execution of a query, handling network callbacks\n * including optimistic payloads, standard payloads, resolution of match\n * dependencies, etc.\n */\n\n\nvar Executor = /*#__PURE__*/function () {\n  function Executor(_ref) {\n    var _this = this;\n\n    var actorIdentifier = _ref.actorIdentifier,\n        getDataID = _ref.getDataID,\n        getPublishQueue = _ref.getPublishQueue,\n        getStore = _ref.getStore,\n        isClientPayload = _ref.isClientPayload,\n        operation = _ref.operation,\n        operationExecutions = _ref.operationExecutions,\n        operationLoader = _ref.operationLoader,\n        operationTracker = _ref.operationTracker,\n        optimisticConfig = _ref.optimisticConfig,\n        _reactFlightPayloadDeserializer = _ref.reactFlightPayloadDeserializer,\n        reactFlightServerErrorHandler = _ref.reactFlightServerErrorHandler,\n        scheduler = _ref.scheduler,\n        shouldProcessClientComponents = _ref.shouldProcessClientComponents,\n        sink = _ref.sink,\n        source = _ref.source,\n        treatMissingFieldsAsNull = _ref.treatMissingFieldsAsNull,\n        updater = _ref.updater,\n        log = _ref.log;\n    (0, _defineProperty2[\"default\"])(this, \"_deserializeReactFlightPayloadWithLogging\", function (tree) {\n      var reactFlightPayloadDeserializer = _this._reactFlightPayloadDeserializer;\n      !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected reactFlightPayloadDeserializer to be available when calling _deserializeReactFlightPayloadWithLogging.') : invariant(false) : void 0;\n\n      var _withDuration = withDuration(function () {\n        return reactFlightPayloadDeserializer(tree);\n      }),\n          duration = _withDuration[0],\n          result = _withDuration[1];\n\n      _this._log({\n        name: 'execute.flight.payload_deserialize',\n        executeId: _this._executeId,\n        operationName: _this._operation.request.node.params.name,\n        duration: duration\n      });\n\n      return result;\n    });\n    this._actorIdentifier = actorIdentifier;\n    this._getDataID = getDataID;\n    this._treatMissingFieldsAsNull = treatMissingFieldsAsNull;\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults = new Map();\n    this._log = log;\n    this._executeId = generateID();\n    this._nextSubscriptionId = 0;\n    this._operation = operation;\n    this._operationExecutions = operationExecutions;\n    this._operationLoader = operationLoader;\n    this._operationTracker = operationTracker;\n    this._operationUpdateEpochs = new Map();\n    this._optimisticUpdates = null;\n    this._pendingModulePayloadsCount = 0;\n    this._getPublishQueue = getPublishQueue;\n    this._scheduler = scheduler;\n    this._sink = sink;\n    this._source = new Map();\n    this._state = 'started';\n    this._getStore = getStore;\n    this._subscriptions = new Map();\n    this._updater = updater;\n    this._isClientPayload = isClientPayload === true;\n    this._reactFlightPayloadDeserializer = _reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._isSubscriptionOperation = this._operation.request.node.params.operationKind === 'subscription';\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n    this._retainDisposables = new Map();\n    this._seenActors = new Set();\n    this._completeFns = [];\n    var id = this._nextSubscriptionId++;\n    source.subscribe({\n      complete: function complete() {\n        return _this._complete(id);\n      },\n      error: function error(_error2) {\n        return _this._error(_error2);\n      },\n      next: function next(response) {\n        try {\n          _this._next(id, response);\n        } catch (error) {\n          sink.error(error);\n        }\n      },\n      start: function start(subscription) {\n        var _this$_operation$requ;\n\n        _this._start(id, subscription);\n\n        _this._log({\n          name: 'execute.start',\n          executeId: _this._executeId,\n          params: _this._operation.request.node.params,\n          variables: _this._operation.request.variables,\n          cacheConfig: (_this$_operation$requ = _this._operation.request.cacheConfig) !== null && _this$_operation$requ !== void 0 ? _this$_operation$requ : {}\n        });\n      }\n    });\n\n    if (optimisticConfig != null) {\n      this._processOptimisticResponse(optimisticConfig.response != null ? {\n        data: optimisticConfig.response\n      } : null, optimisticConfig.updater, false);\n    }\n  } // Cancel any pending execution tasks and mark the executor as completed.\n\n\n  var _proto = Executor.prototype;\n\n  _proto.cancel = function cancel() {\n    var _this2 = this;\n\n    if (this._state === 'completed') {\n      return;\n    }\n\n    this._state = 'completed';\n\n    this._operationExecutions[\"delete\"](this._operation.request.identifier);\n\n    if (this._subscriptions.size !== 0) {\n      this._subscriptions.forEach(function (sub) {\n        return sub.unsubscribe();\n      });\n\n      this._subscriptions.clear();\n    }\n\n    var optimisticUpdates = this._optimisticUpdates;\n\n    if (optimisticUpdates !== null) {\n      this._optimisticUpdates = null;\n      optimisticUpdates.forEach(function (update) {\n        return _this2._getPublishQueueAndSaveActor().revertUpdate(update);\n      }); // OK: run revert on cancel\n\n      this._runPublishQueue();\n    }\n\n    this._incrementalResults.clear();\n\n    if (this._asyncStoreUpdateDisposable != null) {\n      this._asyncStoreUpdateDisposable.dispose();\n\n      this._asyncStoreUpdateDisposable = null;\n    }\n\n    this._completeFns = [];\n\n    this._completeOperationTracker();\n\n    this._disposeRetainedData();\n  };\n\n  _proto._updateActiveState = function _updateActiveState() {\n    var activeState;\n\n    switch (this._state) {\n      case 'started':\n        {\n          activeState = 'active';\n          break;\n        }\n\n      case 'loading_incremental':\n        {\n          activeState = 'active';\n          break;\n        }\n\n      case 'completed':\n        {\n          activeState = 'inactive';\n          break;\n        }\n\n      case 'loading_final':\n        {\n          activeState = this._pendingModulePayloadsCount > 0 ? 'active' : 'inactive';\n          break;\n        }\n\n      default:\n        this._state;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid executor state.') : invariant(false) : void 0;\n    }\n\n    this._operationExecutions.set(this._operation.request.identifier, activeState);\n  };\n\n  _proto._schedule = function _schedule(task) {\n    var _this3 = this;\n\n    var scheduler = this._scheduler;\n\n    if (scheduler != null) {\n      var _id2 = this._nextSubscriptionId++;\n\n      RelayObservable.create(function (sink) {\n        var cancellationToken = scheduler.schedule(function () {\n          try {\n            task();\n            sink.complete();\n          } catch (error) {\n            sink.error(error);\n          }\n        });\n        return function () {\n          return scheduler.cancel(cancellationToken);\n        };\n      }).subscribe({\n        complete: function complete() {\n          return _this3._complete(_id2);\n        },\n        error: function error(_error3) {\n          return _this3._error(_error3);\n        },\n        start: function start(subscription) {\n          return _this3._start(_id2, subscription);\n        }\n      });\n    } else {\n      task();\n    }\n  };\n\n  _proto._complete = function _complete(id) {\n    this._subscriptions[\"delete\"](id);\n\n    if (this._subscriptions.size === 0) {\n      this.cancel();\n\n      this._sink.complete();\n\n      this._log({\n        name: 'execute.complete',\n        executeId: this._executeId\n      });\n    }\n  };\n\n  _proto._error = function _error(error) {\n    this.cancel();\n\n    this._sink.error(error);\n\n    this._log({\n      name: 'execute.error',\n      executeId: this._executeId,\n      error: error\n    });\n  };\n\n  _proto._start = function _start(id, subscription) {\n    this._subscriptions.set(id, subscription);\n\n    this._updateActiveState();\n  } // Handle a raw GraphQL response.\n  ;\n\n  _proto._next = function _next(_id, response) {\n    var _this4 = this;\n\n    this._schedule(function () {\n      var _withDuration2 = withDuration(function () {\n        _this4._handleNext(response);\n\n        _this4._maybeCompleteSubscriptionOperationTracking();\n      }),\n          duration = _withDuration2[0];\n\n      _this4._log({\n        name: 'execute.next',\n        executeId: _this4._executeId,\n        response: response,\n        duration: duration\n      });\n    });\n  };\n\n  _proto._handleErrorResponse = function _handleErrorResponse(responses) {\n    var _this5 = this;\n\n    var results = [];\n    responses.forEach(function (response) {\n      if (response.data === null && response.extensions != null && !response.hasOwnProperty('errors')) {\n        // Skip extensions-only payloads\n        return;\n      } else if (response.data == null) {\n        // Error if any other payload in the batch is missing data, regardless of whether\n        // it had `errors` or not.\n        var errors = response.hasOwnProperty('errors') && response.errors != null ? response.errors : null;\n        var messages = errors ? errors.map(function (_ref2) {\n          var message = _ref2.message;\n          return message;\n        }).join('\\n') : '(No errors)';\n        var error = RelayError.create('RelayNetwork', 'No data returned for operation `' + _this5._operation.request.node.params.name + '`, got error(s):\\n' + messages + '\\n\\nSee the error `source` property for more information.');\n        error.source = {\n          errors: errors,\n          operation: _this5._operation.request.node,\n          variables: _this5._operation.request.variables\n        }; // In V8, Error objects keep the closure scope chain alive until the\n        // err.stack property is accessed.\n\n        error.stack;\n        throw error;\n      } else {\n        var responseWithData = response;\n        results.push(responseWithData);\n      }\n    });\n    return results;\n  }\n  /**\n   * This method return boolean to indicate if the optimistic\n   * response has been handled\n   */\n  ;\n\n  _proto._handleOptimisticResponses = function _handleOptimisticResponses(responses) {\n    var _response$extensions;\n\n    if (responses.length > 1) {\n      if (responses.some(function (responsePart) {\n        var _responsePart$extensi;\n\n        return ((_responsePart$extensi = responsePart.extensions) === null || _responsePart$extensi === void 0 ? void 0 : _responsePart$extensi.isOptimistic) === true;\n      })) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Optimistic responses cannot be batched.') : invariant(false) : void 0;\n      }\n\n      return false;\n    }\n\n    var response = responses[0];\n    var isOptimistic = ((_response$extensions = response.extensions) === null || _response$extensions === void 0 ? void 0 : _response$extensions.isOptimistic) === true;\n\n    if (isOptimistic && this._state !== 'started') {\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic payload received after server payload.') : invariant(false) : void 0;\n    }\n\n    if (isOptimistic) {\n      this._processOptimisticResponse(response, null, this._treatMissingFieldsAsNull);\n\n      this._sink.next(response);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto._handleNext = function _handleNext(response) {\n    if (this._state === 'completed') {\n      return;\n    }\n\n    this._seenActors.clear();\n\n    var responses = Array.isArray(response) ? response : [response];\n\n    var responsesWithData = this._handleErrorResponse(responses);\n\n    if (responsesWithData.length === 0) {\n      // no results with data, nothing to process\n      // this can occur with extensions-only payloads\n      var isFinal = responses.some(function (x) {\n        var _x$extensions;\n\n        return ((_x$extensions = x.extensions) === null || _x$extensions === void 0 ? void 0 : _x$extensions.is_final) === true;\n      });\n\n      if (isFinal) {\n        this._state = 'loading_final';\n\n        this._updateActiveState();\n\n        this._incrementalPayloadsPending = false;\n      }\n\n      this._sink.next(response);\n\n      return;\n    } // Next, handle optimistic responses\n\n\n    var isOptimistic = this._handleOptimisticResponses(responsesWithData);\n\n    if (isOptimistic) {\n      return;\n    }\n\n    var _partitionGraphQLResp = partitionGraphQLResponses(responsesWithData),\n        nonIncrementalResponses = _partitionGraphQLResp[0],\n        incrementalResponses = _partitionGraphQLResp[1];\n\n    var hasNonIncrementalResponses = nonIncrementalResponses.length > 0; // In theory this doesn't preserve the ordering of the batch.\n    // The idea is that a batch is always:\n    //  * at most one non-incremental payload\n    //  * followed by zero or more incremental payloads\n    // The non-incremental payload can appear if the server sends a batch\n    // with the initial payload followed by some early-to-resolve incremental\n    // payloads (although, can that even happen?)\n\n    if (hasNonIncrementalResponses) {\n      // For subscriptions, to avoid every new payload from overwriting existing\n      // data from previous payloads, assign a unique rootID for every new\n      // non-incremental payload.\n      if (this._isSubscriptionOperation) {\n        var nextID = generateUniqueClientID();\n        this._operation = {\n          request: this._operation.request,\n          fragment: createReaderSelector(this._operation.fragment.node, nextID, this._operation.fragment.variables, this._operation.fragment.owner),\n          root: createNormalizationSelector(this._operation.root.node, nextID, this._operation.root.variables)\n        };\n      }\n\n      var payloadFollowups = this._processResponses(nonIncrementalResponses);\n\n      this._processPayloadFollowups(payloadFollowups);\n    }\n\n    if (incrementalResponses.length > 0) {\n      var _payloadFollowups = this._processIncrementalResponses(incrementalResponses);\n\n      this._processPayloadFollowups(_payloadFollowups);\n    }\n\n    if (this._isSubscriptionOperation) {\n      // We attach the id to allow the `requestSubscription` to read from the store using\n      // the current id in its `onNext` callback\n      if (responsesWithData[0].extensions == null) {\n        // $FlowFixMe[cannot-write]\n        responsesWithData[0].extensions = {\n          __relay_subscription_root_id: this._operation.fragment.dataID\n        };\n      } else {\n        responsesWithData[0].extensions.__relay_subscription_root_id = this._operation.fragment.dataID;\n      }\n    } // OK: run once after each new payload\n    // If we have non-incremental responses, we passing `this._operation` to\n    // the publish queue here, which will later be passed to the store (via\n    // notify) to indicate that this operation caused the store to update\n\n\n    var updatedOwners = this._runPublishQueue(hasNonIncrementalResponses ? this._operation : undefined);\n\n    if (hasNonIncrementalResponses) {\n      if (this._incrementalPayloadsPending) {\n        this._retainData();\n      }\n    }\n\n    this._updateOperationTracker(updatedOwners);\n\n    this._sink.next(response);\n  };\n\n  _proto._processOptimisticResponse = function _processOptimisticResponse(response, updater, treatMissingFieldsAsNull) {\n    var _this6 = this;\n\n    !(this._optimisticUpdates === null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: environment.execute: only support one optimistic response per ' + 'execute.') : invariant(false) : void 0;\n\n    if (response == null && updater == null) {\n      return;\n    }\n\n    var optimisticUpdates = [];\n\n    if (response) {\n      var payload = normalizeResponse(response, this._operation.root, ROOT_TYPE, {\n        actorIdentifier: this._actorIdentifier,\n        getDataID: this._getDataID,\n        path: [],\n        reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n        reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n        shouldProcessClientComponents: this._shouldProcessClientComponents,\n        treatMissingFieldsAsNull: treatMissingFieldsAsNull\n      });\n      validateOptimisticResponsePayload(payload);\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: payload,\n        updater: updater\n      });\n\n      this._processOptimisticFollowups(payload, optimisticUpdates);\n    } else if (updater) {\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: {\n          errors: null,\n          fieldPayloads: null,\n          incrementalPlaceholders: null,\n          followupPayloads: null,\n          source: RelayRecordSource.create(),\n          isFinal: false\n        },\n        updater: updater\n      });\n    }\n\n    this._optimisticUpdates = optimisticUpdates;\n    optimisticUpdates.forEach(function (update) {\n      return _this6._getPublishQueueAndSaveActor().applyUpdate(update);\n    }); // OK: only called on construction and when receiving an optimistic payload from network,\n    // which doesn't fall-through to the regular next() handling\n\n    this._runPublishQueue();\n  };\n\n  _proto._processOptimisticFollowups = function _processOptimisticFollowups(payload, optimisticUpdates) {\n    if (payload.followupPayloads && payload.followupPayloads.length) {\n      var followupPayloads = payload.followupPayloads;\n\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(followupPayloads),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var followupPayload = _step.value;\n\n          switch (followupPayload.kind) {\n            case 'ModuleImportPayload':\n              var operationLoader = this._expectOperationLoader();\n\n              var operation = operationLoader.get(followupPayload.operationReference);\n\n              if (operation == null) {\n                this._processAsyncOptimisticModuleImport(followupPayload);\n              } else {\n                var moduleImportOptimisticUpdates = this._processOptimisticModuleImport(operation, followupPayload);\n\n                optimisticUpdates.push.apply(optimisticUpdates, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n              }\n\n              break;\n\n            case 'ActorPayload':\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected optimistic ActorPayload. These updates are not supported.') : void 0;\n              break;\n\n            default:\n              followupPayload;\n              !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`. when processing optimistic updates.', followupPayload.kind) : invariant(false) : void 0;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n  /**\n   * Normalize Data for @module payload, and actor-specific payload\n   */\n  ;\n\n  _proto._normalizeFollowupPayload = function _normalizeFollowupPayload(followupPayload, normalizationNode) {\n    var variables;\n\n    if (normalizationNode.kind === 'SplitOperation' && followupPayload.kind === 'ModuleImportPayload') {\n      variables = getLocalVariables(followupPayload.variables, normalizationNode.argumentDefinitions, followupPayload.args);\n    } else {\n      variables = followupPayload.variables;\n    }\n\n    var selector = createNormalizationSelector(normalizationNode, followupPayload.dataID, variables);\n    return normalizeResponse({\n      data: followupPayload.data\n    }, selector, followupPayload.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: followupPayload.path,\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n  };\n\n  _proto._processOptimisticModuleImport = function _processOptimisticModuleImport(normalizationRootNode, moduleImportPayload) {\n    var operation = getOperation(normalizationRootNode);\n    var optimisticUpdates = [];\n\n    var modulePayload = this._normalizeFollowupPayload(moduleImportPayload, operation);\n\n    validateOptimisticResponsePayload(modulePayload);\n    optimisticUpdates.push({\n      operation: this._operation,\n      payload: modulePayload,\n      updater: null\n    });\n\n    this._processOptimisticFollowups(modulePayload, optimisticUpdates);\n\n    return optimisticUpdates;\n  };\n\n  _proto._processAsyncOptimisticModuleImport = function _processAsyncOptimisticModuleImport(moduleImportPayload) {\n    var _this7 = this;\n\n    this._expectOperationLoader().load(moduleImportPayload.operationReference).then(function (operation) {\n      if (operation == null || _this7._state !== 'started') {\n        return;\n      }\n\n      var moduleImportOptimisticUpdates = _this7._processOptimisticModuleImport(operation, moduleImportPayload);\n\n      moduleImportOptimisticUpdates.forEach(function (update) {\n        return _this7._getPublishQueueAndSaveActor().applyUpdate(update);\n      });\n\n      if (_this7._optimisticUpdates == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected ModuleImport optimistic ' + 'update in operation %s.' + _this7._operation.request.node.params.name) : void 0;\n      } else {\n        var _this$_optimisticUpda;\n\n        (_this$_optimisticUpda = _this7._optimisticUpdates).push.apply(_this$_optimisticUpda, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates)); // OK: always have to run() after an module import resolves async\n\n\n        _this7._runPublishQueue();\n      }\n    });\n  };\n\n  _proto._processResponses = function _processResponses(responses) {\n    var _this8 = this;\n\n    if (this._optimisticUpdates !== null) {\n      this._optimisticUpdates.forEach(function (update) {\n        _this8._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n\n      this._optimisticUpdates = null;\n    }\n\n    this._incrementalPayloadsPending = false;\n\n    this._incrementalResults.clear();\n\n    this._source.clear();\n\n    return responses.map(function (payloadPart) {\n      var relayPayload = normalizeResponse(payloadPart, _this8._operation.root, ROOT_TYPE, {\n        actorIdentifier: _this8._actorIdentifier,\n        getDataID: _this8._getDataID,\n        path: [],\n        reactFlightPayloadDeserializer: _this8._reactFlightPayloadDeserializer != null ? _this8._deserializeReactFlightPayloadWithLogging : null,\n        reactFlightServerErrorHandler: _this8._reactFlightServerErrorHandler,\n        treatMissingFieldsAsNull: _this8._treatMissingFieldsAsNull,\n        shouldProcessClientComponents: _this8._shouldProcessClientComponents\n      });\n\n      _this8._getPublishQueueAndSaveActor().commitPayload(_this8._operation, relayPayload, _this8._updater);\n\n      return relayPayload;\n    });\n  }\n  /**\n   * Handles any follow-up actions for a Relay payload for @match, @defer,\n   * and @stream directives.\n   */\n  ;\n\n  _proto._processPayloadFollowups = function _processPayloadFollowups(payloads) {\n    var _this9 = this;\n\n    if (this._state === 'completed') {\n      return;\n    }\n\n    payloads.forEach(function (payload) {\n      var incrementalPlaceholders = payload.incrementalPlaceholders,\n          followupPayloads = payload.followupPayloads,\n          isFinal = payload.isFinal;\n      _this9._state = isFinal ? 'loading_final' : 'loading_incremental';\n\n      _this9._updateActiveState();\n\n      if (isFinal) {\n        _this9._incrementalPayloadsPending = false;\n      }\n\n      if (followupPayloads && followupPayloads.length !== 0) {\n        followupPayloads.forEach(function (followupPayload) {\n          var _followupPayload$acto;\n\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_followupPayload$acto = followupPayload.actorIdentifier) !== null && _followupPayload$acto !== void 0 ? _followupPayload$acto : _this9._actorIdentifier;\n\n          _this9._processFollowupPayload(followupPayload);\n\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n      }\n\n      if (incrementalPlaceholders && incrementalPlaceholders.length !== 0) {\n        _this9._incrementalPayloadsPending = _this9._state !== 'loading_final';\n        incrementalPlaceholders.forEach(function (incrementalPlaceholder) {\n          var _incrementalPlacehold;\n\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_incrementalPlacehold = incrementalPlaceholder.actorIdentifier) !== null && _incrementalPlacehold !== void 0 ? _incrementalPlacehold : _this9._actorIdentifier;\n\n          _this9._processIncrementalPlaceholder(payload, incrementalPlaceholder);\n\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n\n        if (_this9._isClientPayload || _this9._state === 'loading_final') {\n          // The query has defer/stream selections that are enabled, but either\n          // the server indicated that this is a \"final\" payload: no incremental\n          // payloads will be delivered, then warn that the query was (likely)\n          // executed on the server in non-streaming mode, with incremental\n          // delivery disabled; or this is a client payload, and there will be\n          // no incremental payload.\n          process.env.NODE_ENV !== \"production\" ? warning(_this9._isClientPayload, 'RelayModernEnvironment: Operation `%s` contains @defer/@stream ' + 'directives but was executed in non-streaming mode. See ' + 'https://fburl.com/relay-incremental-delivery-non-streaming-warning.', _this9._operation.request.node.params.name) : void 0; // But eagerly process any deferred payloads\n\n          var relayPayloads = [];\n          incrementalPlaceholders.forEach(function (placeholder) {\n            if (placeholder.kind === 'defer') {\n              relayPayloads.push(_this9._processDeferResponse(placeholder.label, placeholder.path, placeholder, {\n                data: placeholder.data\n              }));\n            }\n          });\n\n          if (relayPayloads.length > 0) {\n            _this9._processPayloadFollowups(relayPayloads);\n          }\n        }\n      }\n    });\n  };\n\n  _proto._maybeCompleteSubscriptionOperationTracking = function _maybeCompleteSubscriptionOperationTracking() {\n    if (!this._isSubscriptionOperation) {\n      return;\n    }\n\n    if (this._pendingModulePayloadsCount === 0 && this._incrementalPayloadsPending === false) {\n      this._completeOperationTracker();\n    }\n  }\n  /**\n   * Processes a ModuleImportPayload, asynchronously resolving the normalization\n   * AST and using it to normalize the field data into a RelayResponsePayload.\n   * The resulting payload may contain other incremental payloads (match,\n   * defer, stream, etc); these are handled by calling\n   * `_processPayloadFollowups()`.\n   */\n  ;\n\n  _proto._processFollowupPayload = function _processFollowupPayload(followupPayload) {\n    var _this10 = this;\n\n    switch (followupPayload.kind) {\n      case 'ModuleImportPayload':\n        var operationLoader = this._expectOperationLoader();\n\n        var node = operationLoader.get(followupPayload.operationReference);\n\n        if (node != null) {\n          // If the operation module is available synchronously, normalize the\n          // data synchronously.\n          this._processFollowupPayloadWithNormalizationNode(followupPayload, getOperation(node));\n        } else {\n          // Otherwise load the operation module and schedule a task to normalize\n          // the data when the module is available.\n          var _id3 = this._nextSubscriptionId++;\n\n          this._pendingModulePayloadsCount++;\n\n          var decrementPendingCount = function decrementPendingCount() {\n            _this10._pendingModulePayloadsCount--;\n\n            _this10._maybeCompleteSubscriptionOperationTracking();\n          }; // Observable.from(operationLoader.load()) wouldn't catch synchronous\n          // errors thrown by the load function, which is user-defined. Guard\n          // against that with Observable.from(new Promise(<work>)).\n\n\n          var networkObservable = RelayObservable.from(new Promise(function (resolve, reject) {\n            operationLoader.load(followupPayload.operationReference).then(resolve, reject);\n          }));\n          RelayObservable.create(function (sink) {\n            var cancellationToken;\n            var subscription = networkObservable.subscribe({\n              next: function next(loadedNode) {\n                if (loadedNode != null) {\n                  var publishModuleImportPayload = function publishModuleImportPayload() {\n                    try {\n                      var operation = getOperation(loadedNode);\n                      var batchAsyncModuleUpdatesFN = RelayFeatureFlags.BATCH_ASYNC_MODULE_UPDATES_FN;\n                      var shouldScheduleAsyncStoreUpdate = batchAsyncModuleUpdatesFN != null && _this10._pendingModulePayloadsCount > 1;\n\n                      var _withDuration3 = withDuration(function () {\n                        _this10._handleFollowupPayload(followupPayload, operation); // OK: always have to run after an async module import resolves\n\n\n                        // OK: always have to run after an async module import resolves\n                        if (shouldScheduleAsyncStoreUpdate) {\n                          _this10._scheduleAsyncStoreUpdate( // $FlowFixMe[incompatible-call] `shouldScheduleAsyncStoreUpdate` check should cover `null` case\n                          batchAsyncModuleUpdatesFN, sink.complete);\n                        } else {\n                          var updatedOwners = _this10._runPublishQueue();\n\n                          _this10._updateOperationTracker(updatedOwners);\n                        }\n                      }),\n                          duration = _withDuration3[0];\n\n                      _this10._log({\n                        name: 'execute.async.module',\n                        executeId: _this10._executeId,\n                        operationName: operation.name,\n                        duration: duration\n                      });\n\n                      if (!shouldScheduleAsyncStoreUpdate) {\n                        sink.complete();\n                      }\n                    } catch (error) {\n                      sink.error(error);\n                    }\n                  };\n\n                  var scheduler = _this10._scheduler;\n\n                  if (scheduler == null) {\n                    publishModuleImportPayload();\n                  } else {\n                    cancellationToken = scheduler.schedule(publishModuleImportPayload);\n                  }\n                } else {\n                  sink.complete();\n                }\n              },\n              error: sink.error\n            });\n            return function () {\n              subscription.unsubscribe();\n\n              if (_this10._scheduler != null && cancellationToken != null) {\n                _this10._scheduler.cancel(cancellationToken);\n              }\n            };\n          }).subscribe({\n            complete: function complete() {\n              _this10._complete(_id3);\n\n              decrementPendingCount();\n            },\n            error: function error(_error4) {\n              _this10._error(_error4);\n\n              decrementPendingCount();\n            },\n            start: function start(subscription) {\n              return _this10._start(_id3, subscription);\n            }\n          });\n        }\n\n        break;\n\n      case 'ActorPayload':\n        this._processFollowupPayloadWithNormalizationNode(followupPayload, followupPayload.node);\n\n        break;\n\n      default:\n        followupPayload;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`.', followupPayload.kind) : invariant(false) : void 0;\n    }\n  };\n\n  _proto._processFollowupPayloadWithNormalizationNode = function _processFollowupPayloadWithNormalizationNode(followupPayload, normalizationNode) {\n    this._handleFollowupPayload(followupPayload, normalizationNode);\n\n    this._maybeCompleteSubscriptionOperationTracking();\n  };\n\n  _proto._handleFollowupPayload = function _handleFollowupPayload(followupPayload, normalizationNode) {\n    var relayPayload = this._normalizeFollowupPayload(followupPayload, normalizationNode);\n\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n\n    this._processPayloadFollowups([relayPayload]);\n  }\n  /**\n   * The executor now knows that GraphQL responses are expected for a given\n   * label/path:\n   * - Store the placeholder in order to process any future responses that may\n   *   arrive.\n   * - Then process any responses that had already arrived.\n   *\n   * The placeholder contains the normalization selector, path (for nested\n   * defer/stream), and other metadata used to normalize the incremental\n   * response(s).\n   */\n  ;\n\n  _proto._processIncrementalPlaceholder = function _processIncrementalPlaceholder(relayPayload, placeholder) {\n    var _relayPayload$fieldPa;\n\n    // Update the label => path => placeholder map\n    var label = placeholder.label,\n        path = placeholder.path;\n    var pathKey = path.map(String).join('.');\n\n    var resultForLabel = this._incrementalResults.get(label);\n\n    if (resultForLabel == null) {\n      resultForLabel = new Map();\n\n      this._incrementalResults.set(label, resultForLabel);\n    }\n\n    var resultForPath = resultForLabel.get(pathKey);\n    var pendingResponses = resultForPath != null && resultForPath.kind === 'response' ? resultForPath.responses : null;\n    resultForLabel.set(pathKey, {\n      kind: 'placeholder',\n      placeholder: placeholder\n    }); // Store references to the parent node to allow detecting concurrent\n    // modifications to the parent before items arrive and to replay\n    // handle field payloads to account for new information on source records.\n\n    var parentID;\n\n    if (placeholder.kind === 'stream') {\n      parentID = placeholder.parentID;\n    } else if (placeholder.kind === 'defer') {\n      parentID = placeholder.selector.dataID;\n    } else {\n      placeholder;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unsupported incremental placeholder kind `%s`.', placeholder.kind) : invariant(false) : void 0;\n    }\n\n    var parentRecord = relayPayload.source.get(parentID);\n    var parentPayloads = ((_relayPayload$fieldPa = relayPayload.fieldPayloads) !== null && _relayPayload$fieldPa !== void 0 ? _relayPayload$fieldPa : []).filter(function (fieldPayload) {\n      var fieldID = generateClientID(fieldPayload.dataID, fieldPayload.fieldKey);\n      return (// handlers applied to the streamed field itself\n        fieldPayload.dataID === parentID || // handlers applied to a field on an ancestor object, where\n        // ancestor.field links to the parent record (example: connections)\n        fieldID === parentID\n      );\n    }); // If an incremental payload exists for some id that record should also\n    // exist.\n\n    !(parentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to exist.', parentID) : invariant(false) : void 0;\n    var nextParentRecord;\n    var nextParentPayloads;\n\n    var previousParentEntry = this._source.get(parentID);\n\n    if (previousParentEntry != null) {\n      // If a previous entry exists, merge the previous/next records and\n      // payloads together.\n      nextParentRecord = RelayModernRecord.update(previousParentEntry.record, parentRecord);\n      var handlePayloads = new Map();\n\n      var dedupePayload = function dedupePayload(payload) {\n        var key = stableStringify(payload);\n        handlePayloads.set(key, payload);\n      };\n\n      previousParentEntry.fieldPayloads.forEach(dedupePayload);\n      parentPayloads.forEach(dedupePayload);\n      nextParentPayloads = Array.from(handlePayloads.values());\n    } else {\n      nextParentRecord = parentRecord;\n      nextParentPayloads = parentPayloads;\n    }\n\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: nextParentPayloads\n    }); // If there were any queued responses, process them now that placeholders\n    // are in place\n\n\n    if (pendingResponses != null) {\n      var payloadFollowups = this._processIncrementalResponses(pendingResponses);\n\n      this._processPayloadFollowups(payloadFollowups);\n    }\n  }\n  /**\n   * Lookup the placeholder the describes how to process an incremental\n   * response, normalize/publish it, and process any nested defer/match/stream\n   * metadata.\n   */\n  ;\n\n  _proto._processIncrementalResponses = function _processIncrementalResponses(incrementalResponses) {\n    var _this11 = this;\n\n    var relayPayloads = [];\n    incrementalResponses.forEach(function (incrementalResponse) {\n      var label = incrementalResponse.label,\n          path = incrementalResponse.path,\n          response = incrementalResponse.response;\n\n      var resultForLabel = _this11._incrementalResults.get(label);\n\n      if (resultForLabel == null) {\n        resultForLabel = new Map();\n\n        _this11._incrementalResults.set(label, resultForLabel);\n      }\n\n      if (label.indexOf('$defer$') !== -1) {\n        var pathKey = path.map(String).join('.');\n        var resultForPath = resultForLabel.get(pathKey);\n\n        if (resultForPath == null) {\n          resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(pathKey, resultForPath);\n          return;\n        } else if (resultForPath.kind === 'response') {\n          resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n\n        var placeholder = resultForPath.placeholder;\n        !(placeholder.kind === 'defer') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @defer, was `@%s`.', pathKey, label, placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processDeferResponse(label, path, placeholder, response));\n      } else {\n        // @stream payload path values end in the field name and item index,\n        // but Relay records paths relative to the parent of the stream node:\n        // therefore we strip the last two elements just to lookup the path\n        // (the item index is used later to insert the element in the list)\n        var _pathKey = path.slice(0, -2).map(String).join('.');\n\n        var _resultForPath = resultForLabel.get(_pathKey);\n\n        if (_resultForPath == null) {\n          _resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(_pathKey, _resultForPath);\n          return;\n        } else if (_resultForPath.kind === 'response') {\n          _resultForPath.responses.push(incrementalResponse);\n\n          return;\n        }\n\n        var _placeholder = _resultForPath.placeholder;\n        !(_placeholder.kind === 'stream') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @stream, was `@%s`.', _pathKey, label, _placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processStreamResponse(label, path, _placeholder, response));\n      }\n    });\n    return relayPayloads;\n  };\n\n  _proto._processDeferResponse = function _processDeferResponse(label, path, placeholder, response) {\n    var _placeholder$actorIde;\n\n    var parentID = placeholder.selector.dataID;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = (_placeholder$actorIde = placeholder.actorIdentifier) !== null && _placeholder$actorIde !== void 0 ? _placeholder$actorIde : this._actorIdentifier;\n    var relayPayload = normalizeResponse(response, placeholder.selector, placeholder.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: placeholder.path,\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload); // Load the version of the parent record from which this incremental data\n    // was derived\n\n\n    var parentEntry = this._source.get(parentID);\n\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @defer ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var fieldPayloads = parentEntry.fieldPayloads;\n\n    if (fieldPayloads.length !== 0) {\n      var _response$extensions2;\n\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: ((_response$extensions2 = response.extensions) === null || _response$extensions2 === void 0 ? void 0 : _response$extensions2.is_final) === true\n      };\n\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  }\n  /**\n   * Process the data for one item in a @stream field.\n   */\n  ;\n\n  _proto._processStreamResponse = function _processStreamResponse(label, path, placeholder, response) {\n    var parentID = placeholder.parentID,\n        node = placeholder.node,\n        variables = placeholder.variables,\n        actorIdentifier = placeholder.actorIdentifier;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = actorIdentifier !== null && actorIdentifier !== void 0 ? actorIdentifier : this._actorIdentifier; // Find the LinkedField where @stream was applied\n\n    var field = node.selections[0];\n    !(field != null && field.kind === 'LinkedField' && field.plural === true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream to be used on a plural field.') : invariant(false) : void 0;\n\n    var _this$_normalizeStrea = this._normalizeStreamItem(response, parentID, field, variables, path, placeholder.path),\n        fieldPayloads = _this$_normalizeStrea.fieldPayloads,\n        itemID = _this$_normalizeStrea.itemID,\n        itemIndex = _this$_normalizeStrea.itemIndex,\n        prevIDs = _this$_normalizeStrea.prevIDs,\n        relayPayload = _this$_normalizeStrea.relayPayload,\n        storageKey = _this$_normalizeStrea.storageKey; // Publish the new item and update the parent record to set\n    // field[index] = item *if* the parent record hasn't been concurrently\n    // modified.\n\n\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload, function (store) {\n      var currentParentRecord = store.get(parentID);\n\n      if (currentParentRecord == null) {\n        // parent has since been deleted, stream data is stale\n        return;\n      }\n\n      var currentItems = currentParentRecord.getLinkedRecords(storageKey);\n\n      if (currentItems == null) {\n        // field has since been deleted, stream data is stale\n        return;\n      }\n\n      if (currentItems.length !== prevIDs.length || currentItems.some(function (currentItem, index) {\n        return prevIDs[index] !== (currentItem && currentItem.getDataID());\n      })) {\n        // field has been modified by something other than this query,\n        // stream data is stale\n        return;\n      } // parent.field has not been concurrently modified:\n      // update `parent.field[index] = item`\n\n\n      var nextItems = (0, _toConsumableArray2[\"default\"])(currentItems);\n      nextItems[itemIndex] = store.get(itemID);\n      currentParentRecord.setLinkedRecords(nextItems, storageKey);\n    }); // Now that the parent record has been updated to include the new item,\n    // also update any handle fields that are derived from the parent record.\n\n\n    if (fieldPayloads.length !== 0) {\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: false\n      };\n\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n\n  _proto._normalizeStreamItem = function _normalizeStreamItem(response, parentID, field, variables, path, normalizationPath) {\n    var _field$alias, _field$concreteType, _this$_getDataID;\n\n    var data = response.data;\n    !(typeof data === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the GraphQL @stream payload `data` ' + 'value to be an object.') : invariant(false) : void 0;\n    var responseKey = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    var storageKey = getStorageKey(field, variables); // Load the version of the parent record from which this incremental data\n    // was derived\n\n    var parentEntry = this._source.get(parentID);\n\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @stream ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var parentRecord = parentEntry.record,\n        fieldPayloads = parentEntry.fieldPayloads; // Load the field value (items) that were created by *this* query executor\n    // in order to check if there has been any concurrent modifications by some\n    // other operation.\n\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(parentRecord, storageKey);\n    !(prevIDs != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to have fetched field ' + '`%s` with @stream.', parentID, field.name) : invariant(false) : void 0; // Determine the index in the field of the new item\n\n    var finalPathEntry = path[path.length - 1];\n    var itemIndex = parseInt(finalPathEntry, 10);\n    !(itemIndex === finalPathEntry && itemIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected path for @stream to end in a ' + 'positive integer index, got `%s`', finalPathEntry) : invariant(false) : void 0;\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : data[TYPENAME_KEY];\n    !(typeof typeName === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream field `%s` to have a ' + '__typename.', field.name) : invariant(false) : void 0; // Determine the __id of the new item: this must equal the value that would\n    // be assigned had the item not been streamed\n\n    var itemID = // https://github.com/prettier/prettier/issues/6403\n    // prettier-ignore\n    ((_this$_getDataID = this._getDataID(data, typeName)) !== null && _this$_getDataID !== void 0 ? _this$_getDataID : prevIDs && prevIDs[itemIndex]) || // Reuse previously generated client IDs\n    generateClientID(parentID, storageKey, itemIndex);\n    !(typeof itemID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0; // Build a selector to normalize the item data with\n\n    var selector = createNormalizationSelector(field, itemID, variables); // Update the cached version of the parent record to reflect the new item:\n    // this is used when subsequent stream payloads arrive to see if there\n    // have been concurrent modifications to the list\n\n    var nextParentRecord = RelayModernRecord.clone(parentRecord);\n    var nextIDs = (0, _toConsumableArray2[\"default\"])(prevIDs);\n    nextIDs[itemIndex] = itemID;\n    RelayModernRecord.setLinkedRecordIDs(nextParentRecord, storageKey, nextIDs);\n\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: fieldPayloads\n    });\n\n    var relayPayload = normalizeResponse(response, selector, typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(normalizationPath), [responseKey, String(itemIndex)]),\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    return {\n      fieldPayloads: fieldPayloads,\n      itemID: itemID,\n      itemIndex: itemIndex,\n      prevIDs: prevIDs,\n      relayPayload: relayPayload,\n      storageKey: storageKey\n    };\n  };\n\n  _proto._scheduleAsyncStoreUpdate = function _scheduleAsyncStoreUpdate(scheduleFn, completeFn) {\n    var _this12 = this;\n\n    this._completeFns.push(completeFn);\n\n    if (this._asyncStoreUpdateDisposable != null) {\n      return;\n    }\n\n    this._asyncStoreUpdateDisposable = scheduleFn(function () {\n      _this12._asyncStoreUpdateDisposable = null;\n\n      var updatedOwners = _this12._runPublishQueue();\n\n      _this12._updateOperationTracker(updatedOwners);\n\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(_this12._completeFns),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var complete = _step2.value;\n          complete();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      _this12._completeFns = [];\n    });\n  };\n\n  _proto._updateOperationTracker = function _updateOperationTracker(updatedOwners) {\n    if (updatedOwners != null && updatedOwners.length > 0) {\n      this._operationTracker.update(this._operation.request, new Set(updatedOwners));\n    }\n  };\n\n  _proto._completeOperationTracker = function _completeOperationTracker() {\n    this._operationTracker.complete(this._operation.request);\n  };\n\n  _proto._getPublishQueueAndSaveActor = function _getPublishQueueAndSaveActor() {\n    this._seenActors.add(this._actorIdentifier);\n\n    return this._getPublishQueue(this._actorIdentifier);\n  };\n\n  _proto._getActorsToVisit = function _getActorsToVisit() {\n    if (this._seenActors.size === 0) {\n      return new Set([this._actorIdentifier]);\n    } else {\n      return this._seenActors;\n    }\n  };\n\n  _proto._runPublishQueue = function _runPublishQueue(operation) {\n    var updatedOwners = new Set();\n\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _actorIdentifier = _step3.value;\n\n        var owners = this._getPublishQueue(_actorIdentifier).run(operation);\n\n        owners.forEach(function (owner) {\n          return updatedOwners.add(owner);\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    return Array.from(updatedOwners);\n  };\n\n  _proto._retainData = function _retainData() {\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _actorIdentifier2 = _step4.value;\n\n        if (!this._retainDisposables.has(_actorIdentifier2)) {\n          this._retainDisposables.set(_actorIdentifier2, this._getStore(_actorIdentifier2).retain(this._operation));\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n\n  _proto._disposeRetainedData = function _disposeRetainedData() {\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(this._retainDisposables.values()),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var disposable = _step5.value;\n        disposable.dispose();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n\n    this._retainDisposables.clear();\n  };\n\n  _proto._expectOperationLoader = function _expectOperationLoader() {\n    var operationLoader = this._operationLoader;\n    !operationLoader ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected an operationLoader to be ' + 'configured when using `@match`.') : invariant(false) : void 0;\n    return operationLoader;\n  };\n\n  return Executor;\n}();\n\nfunction partitionGraphQLResponses(responses) {\n  var nonIncrementalResponses = [];\n  var incrementalResponses = [];\n  responses.forEach(function (response) {\n    if (response.path != null || response.label != null) {\n      var label = response.label,\n          path = response.path;\n\n      if (label == null || path == null) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid incremental payload, expected ' + '`path` and `label` to either both be null/undefined, or ' + '`path` to be an `Array<string | number>` and `label` to be a ' + '`string`.') : invariant(false) : void 0;\n      }\n\n      incrementalResponses.push({\n        label: label,\n        path: path,\n        response: response\n      });\n    } else {\n      nonIncrementalResponses.push(response);\n    }\n  });\n  return [nonIncrementalResponses, incrementalResponses];\n}\n\nfunction normalizeResponse(response, selector, typeName, options) {\n  var _response$extensions3;\n\n  var data = response.data,\n      errors = response.errors;\n  var source = RelayRecordSource.create();\n  var record = RelayModernRecord.create(selector.dataID, typeName);\n  source.set(selector.dataID, record);\n  var relayPayload = RelayResponseNormalizer.normalize(source, selector, data, options);\n  return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, relayPayload), {}, {\n    errors: errors,\n    isFinal: ((_response$extensions3 = response.extensions) === null || _response$extensions3 === void 0 ? void 0 : _response$extensions3.is_final) === true\n  });\n}\n\nfunction stableStringify(value) {\n  var _JSON$stringify;\n\n  return (_JSON$stringify = JSON.stringify(stableCopy(value))) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : ''; // null-check for flow\n}\n\nfunction validateOptimisticResponsePayload(payload) {\n  var incrementalPlaceholders = payload.incrementalPlaceholders;\n\n  if (incrementalPlaceholders != null && incrementalPlaceholders.length !== 0) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic responses cannot be returned ' + 'for operations that use incremental data delivery (@defer, ' + '@stream, and @stream_connection).') : invariant(false) : void 0;\n  }\n}\n\nmodule.exports = {\n  execute: execute\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\n\nvar _require = require('../store/RelayRecordState'),\n    EXISTENT = _require.EXISTENT;\n\nvar invariant = require('invariant');\n/**\n * @internal\n *\n * Wrapper API that is an amalgam of the `RelayModernRecord` API and\n * `MutableRecordSource` interface, implementing copy-on-write semantics for records\n * in a record source.\n *\n * Modifications are applied to fresh copies of records:\n * - Records in `base` are never modified.\n * - Modifications cause a fresh version of a record to be created in `sink`.\n *   These sink records contain only modified fields.\n */\n\n\nvar RelayRecordSourceMutator = /*#__PURE__*/function () {\n  function RelayRecordSourceMutator(base, sink) {\n    this.__sources = [sink, base];\n    this._base = base;\n    this._sink = sink;\n  }\n  /**\n   * **UNSTABLE**\n   * This method is likely to be removed in an upcoming release\n   * and should not be relied upon.\n   * TODO T41593196: Remove unstable_getRawRecordWithChanges\n   */\n\n\n  var _proto = RelayRecordSourceMutator.prototype;\n\n  _proto.unstable_getRawRecordWithChanges = function unstable_getRawRecordWithChanges(dataID) {\n    var baseRecord = this._base.get(dataID);\n\n    var sinkRecord = this._sink.get(dataID);\n\n    if (sinkRecord === undefined) {\n      if (baseRecord == null) {\n        return baseRecord;\n      }\n\n      var nextRecord = RelayModernRecord.clone(baseRecord);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(nextRecord);\n      }\n\n      return nextRecord;\n    } else if (sinkRecord === null) {\n      return null;\n    } else if (baseRecord != null) {\n      var _nextRecord = RelayModernRecord.update(baseRecord, sinkRecord);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        if (_nextRecord !== baseRecord) {\n          // Prevent mutation of a record from outside the store.\n          RelayModernRecord.freeze(_nextRecord);\n        }\n      }\n\n      return _nextRecord;\n    } else {\n      var _nextRecord2 = RelayModernRecord.clone(sinkRecord);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(_nextRecord2);\n      }\n\n      return _nextRecord2;\n    }\n  };\n\n  _proto._getSinkRecord = function _getSinkRecord(dataID) {\n    var sinkRecord = this._sink.get(dataID);\n\n    if (!sinkRecord) {\n      var baseRecord = this._base.get(dataID);\n\n      !baseRecord ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator: Cannot modify non-existent record `%s`.', dataID) : invariant(false) : void 0;\n      sinkRecord = RelayModernRecord.create(dataID, RelayModernRecord.getType(baseRecord));\n\n      this._sink.set(dataID, sinkRecord);\n    }\n\n    return sinkRecord;\n  };\n\n  _proto.copyFields = function copyFields(sourceID, sinkID) {\n    var sinkSource = this._sink.get(sourceID);\n\n    var baseSource = this._base.get(sourceID);\n\n    !(sinkSource || baseSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#copyFields(): Cannot copy fields from ' + 'non-existent record `%s`.', sourceID) : invariant(false) : void 0;\n\n    var sink = this._getSinkRecord(sinkID);\n\n    if (baseSource) {\n      RelayModernRecord.copyFields(baseSource, sink);\n    }\n\n    if (sinkSource) {\n      RelayModernRecord.copyFields(sinkSource, sink);\n    }\n  };\n\n  _proto.copyFieldsFromRecord = function copyFieldsFromRecord(record, sinkID) {\n    var sink = this._getSinkRecord(sinkID);\n\n    RelayModernRecord.copyFields(record, sink);\n  };\n\n  _proto.create = function create(dataID, typeName) {\n    !(this._base.getStatus(dataID) !== EXISTENT && this._sink.getStatus(dataID) !== EXISTENT) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#create(): Cannot create a record with id ' + '`%s`, this record already exists.', dataID) : invariant(false) : void 0;\n    var record = RelayModernRecord.create(dataID, typeName);\n\n    this._sink.set(dataID, record);\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    return this._sink.has(dataID) ? this._sink.getStatus(dataID) : this._base.getStatus(dataID);\n  };\n\n  _proto.getType = function getType(dataID) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        return RelayModernRecord.getType(record);\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.getValue = function getValue(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        var value = RelayModernRecord.getValue(record, storageKey);\n\n        if (value !== undefined) {\n          return value;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.setValue = function setValue(dataID, storageKey, value) {\n    var sinkRecord = this._getSinkRecord(dataID);\n\n    RelayModernRecord.setValue(sinkRecord, storageKey, value);\n  };\n\n  _proto.getLinkedRecordID = function getLinkedRecordID(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n        if (linkedID !== undefined) {\n          return linkedID;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.setLinkedRecordID = function setLinkedRecordID(dataID, storageKey, linkedID) {\n    var sinkRecord = this._getSinkRecord(dataID);\n\n    RelayModernRecord.setLinkedRecordID(sinkRecord, storageKey, linkedID);\n  };\n\n  _proto.getLinkedRecordIDs = function getLinkedRecordIDs(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n\n        if (linkedIDs !== undefined) {\n          return linkedIDs;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.setLinkedRecordIDs = function setLinkedRecordIDs(dataID, storageKey, linkedIDs) {\n    var sinkRecord = this._getSinkRecord(dataID);\n\n    RelayModernRecord.setLinkedRecordIDs(sinkRecord, storageKey, linkedIDs);\n  };\n\n  return RelayRecordSourceMutator;\n}();\n\nmodule.exports = RelayRecordSourceMutator;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @emails oncall+relay\n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _require = require('../query/GraphQLTag'),\n    getUpdatableQuery = _require.getUpdatableQuery;\n\nvar _require2 = require('../store/RelayStoreUtils'),\n    getArgumentValues = _require2.getArgumentValues;\n\nvar nonUpdatableKeys = ['id', '__id', '__typename', 'js'];\n\nfunction readUpdatableQuery_EXPERIMENTAL(query, variables, proxy) {\n  var updatableQuery = getUpdatableQuery(query);\n  var updatableProxy = {};\n  updateProxyFromSelections(updatableProxy, proxy.getRoot(), variables, updatableQuery.fragment.selections, proxy);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    Object.freeze(updatableProxy);\n  }\n\n  return updatableProxy;\n}\n\nfunction updateProxyFromSelections(mutableUpdatableProxy, recordProxy, queryVariables, selections, root) {\n  var _selection$alias3;\n\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(selections),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var selection = _step.value;\n\n      switch (selection.kind) {\n        case 'LinkedField':\n          if (selection.plural) {\n            Object.defineProperty(mutableUpdatableProxy, (_selection$alias = selection.alias) !== null && _selection$alias !== void 0 ? _selection$alias : selection.name, {\n              // $FlowFixMe[incompatible-call] these getters and setters have different types on purpose\n              get: createGetterForPluralLinkedField(selection, queryVariables, recordProxy, root),\n              set: createSetterForPluralLinkedField(selection, queryVariables, recordProxy, root)\n            });\n          } else {\n            Object.defineProperty(mutableUpdatableProxy, (_selection$alias2 = selection.alias) !== null && _selection$alias2 !== void 0 ? _selection$alias2 : selection.name, {\n              get: createGetterForSingularLinkedField(selection, queryVariables, recordProxy, root),\n              set: createSetterForSingularLinkedField(selection, queryVariables, recordProxy, root)\n            });\n          }\n\n          break;\n\n        case 'ScalarField':\n          var scalarFieldName = (_selection$alias3 = selection.alias) !== null && _selection$alias3 !== void 0 ? _selection$alias3 : selection.name;\n          Object.defineProperty(mutableUpdatableProxy, scalarFieldName, {\n            get: function get() {\n              var _selection$args;\n\n              var variables = getArgumentValues((_selection$args = selection.args) !== null && _selection$args !== void 0 ? _selection$args : [], queryVariables); // Flow incorrect assumes that the return value for the get method must match\n              // the set parameter.\n\n              return recordProxy.getValue(selection.name, // $FlowFixMe[unclear-type] No good way to type these variables\n              variables // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n              );\n            },\n            set: nonUpdatableKeys.includes(selection.name) ? undefined : // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n            function (newValue) {\n              var _selection$args2;\n\n              var variables = getArgumentValues((_selection$args2 = selection.args) !== null && _selection$args2 !== void 0 ? _selection$args2 : [], queryVariables);\n              recordProxy.setValue(newValue, selection.name, // $FlowFixMe[unclear-type] No good way to type these variables\n              variables);\n            }\n          });\n          break;\n\n        case 'InlineFragment':\n          if (recordProxy.getType() === selection.type) {\n            updateProxyFromSelections(mutableUpdatableProxy, recordProxy, queryVariables, selection.selections, root);\n          }\n\n          break;\n\n        case 'ClientExtension':\n          updateProxyFromSelections(mutableUpdatableProxy, recordProxy, queryVariables, selection.selections, root);\n          break;\n\n        case 'FragmentSpread':\n          // Explicitly ignore\n          break;\n\n        default:\n          throw new Error('Encountered an unexpected ReaderSelection variant in RelayRecordSourceProxy. This indicates a bug in Relay.');\n      }\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _selection$alias;\n\n      var _selection$alias2;\n\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction createSetterForPluralLinkedField(selection, queryVariables, recordProxy, root) {\n  return function set(newValue) {\n    var _selection$args3;\n\n    var variables = getArgumentValues((_selection$args3 = selection.args) !== null && _selection$args3 !== void 0 ? _selection$args3 : [], queryVariables);\n\n    if (newValue == null) {\n      throw new Error('Do not assign null to plural linked fields; assign an empty array instead.');\n    } else {\n      var recordProxies = newValue.map(function (item) {\n        if (item == null) {\n          throw new Error('When assigning an array of items, none of the items should be null or undefined.');\n        }\n\n        var __id = item.__id;\n\n        if (__id == null) {\n          throw new Error('The __id field must be present on each item passed to the setter. This indicates a bug in Relay.');\n        }\n\n        var newValueRecord = root.get(__id);\n\n        if (newValueRecord == null) {\n          throw new Error(\"Did not find item with data id \".concat(__id, \" in the store.\"));\n        }\n\n        return newValueRecord;\n      });\n      recordProxy.setLinkedRecords(recordProxies, selection.name, // $FlowFixMe[unclear-type] No good way to type these variables\n      variables);\n    }\n  };\n}\n\nfunction createSetterForSingularLinkedField(selection, queryVariables, recordProxy, root) {\n  return function set(newValue) {\n    var _selection$args4;\n\n    var variables = getArgumentValues((_selection$args4 = selection.args) !== null && _selection$args4 !== void 0 ? _selection$args4 : [], queryVariables);\n\n    if (newValue == null) {\n      // $FlowFixMe[unclear-type] No good way to type these variables\n      recordProxy.setValue(newValue, selection.name, variables);\n    } else {\n      var __id = newValue.__id;\n\n      if (__id == null) {\n        throw new Error('The __id field must be present on the argument. This indicates a bug in Relay.');\n      }\n\n      var newValueRecord = root.get(__id);\n\n      if (newValueRecord == null) {\n        throw new Error(\"Did not find item with data id \".concat(__id, \" in the store.\"));\n      }\n\n      recordProxy.setLinkedRecord(newValueRecord, selection.name, // $FlowFixMe[unclear-type] No good way to type these variables\n      variables);\n    }\n  };\n}\n\nfunction createGetterForPluralLinkedField(selection, queryVariables, recordProxy, root) {\n  return function () {\n    var _selection$args5;\n\n    var variables = getArgumentValues((_selection$args5 = selection.args) !== null && _selection$args5 !== void 0 ? _selection$args5 : [], queryVariables);\n    var linkedRecords = recordProxy.getLinkedRecords(selection.name, // $FlowFixMe[unclear-type] No good way to type these variables\n    variables);\n\n    if (linkedRecords != null) {\n      return linkedRecords.map(function (linkedRecord) {\n        if (linkedRecord != null) {\n          var updatableProxy = {};\n          updateProxyFromSelections(updatableProxy, linkedRecord, queryVariables, selection.selections, root);\n\n          if (process.env.NODE_ENV !== \"production\") {\n            Object.freeze(updatableProxy);\n          } // Flow incorrect assumes that the return value for the get method must match\n          // the set parameter.\n          // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n\n\n          return updatableProxy;\n        } else {\n          return linkedRecord;\n        } // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n\n      });\n    } else {\n      return linkedRecords;\n    }\n  };\n}\n\nfunction createGetterForSingularLinkedField(selection, queryVariables, recordProxy, root) {\n  return function () {\n    var _selection$args6;\n\n    var variables = getArgumentValues((_selection$args6 = selection.args) !== null && _selection$args6 !== void 0 ? _selection$args6 : [], queryVariables);\n    var linkedRecord = recordProxy.getLinkedRecord(selection.name, // $FlowFixMe[unclear-type] No good way to type these variables\n    variables);\n\n    if (linkedRecord != null) {\n      var updatableProxy = {};\n      updateProxyFromSelections(updatableProxy, linkedRecord, queryVariables, selection.selections, root);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        Object.freeze(updatableProxy);\n      } // Flow incorrect assumes that the return value for the get method must match\n      // the set parameter.\n      // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n\n\n      return updatableProxy;\n    } else {\n      return linkedRecord;\n    }\n  };\n}\n\nmodule.exports = {\n  readUpdatableQuery_EXPERIMENTAL: readUpdatableQuery_EXPERIMENTAL\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../store/ClientID'),\n    generateClientID = _require.generateClientID;\n\nvar _require2 = require('../store/RelayStoreUtils'),\n    getStableStorageKey = _require2.getStableStorageKey;\n\nvar invariant = require('invariant');\n/**\n * @internal\n *\n * A helper class for manipulating a given record from a record source via an\n * imperative/OO-style API.\n */\n\n\nvar RelayRecordProxy = /*#__PURE__*/function () {\n  function RelayRecordProxy(source, mutator, dataID) {\n    this._dataID = dataID;\n    this._mutator = mutator;\n    this._source = source;\n  }\n\n  var _proto = RelayRecordProxy.prototype;\n\n  _proto.copyFieldsFrom = function copyFieldsFrom(source) {\n    this._mutator.copyFields(source.getDataID(), this._dataID);\n  };\n\n  _proto.getDataID = function getDataID() {\n    return this._dataID;\n  };\n\n  _proto.getType = function getType() {\n    var type = this._mutator.getType(this._dataID);\n\n    !(type != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy: Cannot get the type of deleted record `%s`.', this._dataID) : invariant(false) : void 0;\n    return type;\n  };\n\n  _proto.getValue = function getValue(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    return this._mutator.getValue(this._dataID, storageKey);\n  };\n\n  _proto.setValue = function setValue(value, name, args) {\n    !isValidLeafValue(value) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setValue(): Expected a scalar or array of scalars, ' + 'got `%s`.', JSON.stringify(value)) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n\n    this._mutator.setValue(this._dataID, storageKey, value);\n\n    return this;\n  };\n\n  _proto.getLinkedRecord = function getLinkedRecord(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);\n\n    return linkedID != null ? this._source.get(linkedID) : linkedID;\n  };\n\n  _proto.setLinkedRecord = function setLinkedRecord(record, name, args) {\n    !(record instanceof RelayRecordProxy) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecord(): Expected a record, got `%s`.', record) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = record.getDataID();\n\n    this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID);\n\n    return this;\n  };\n\n  _proto.getOrCreateLinkedRecord = function getOrCreateLinkedRecord(name, typeName, args) {\n    var linkedRecord = this.getLinkedRecord(name, args);\n\n    if (!linkedRecord) {\n      var _this$_source$get;\n\n      var storageKey = getStableStorageKey(name, args);\n      var clientID = generateClientID(this.getDataID(), storageKey); // NOTE: it's possible that a client record for this field exists\n      // but the field itself was unset.\n\n      linkedRecord = (_this$_source$get = this._source.get(clientID)) !== null && _this$_source$get !== void 0 ? _this$_source$get : this._source.create(clientID, typeName);\n      this.setLinkedRecord(linkedRecord, name, args);\n    }\n\n    return linkedRecord;\n  };\n\n  _proto.getLinkedRecords = function getLinkedRecords(name, args) {\n    var _this = this;\n\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);\n\n    if (linkedIDs == null) {\n      return linkedIDs;\n    }\n\n    return linkedIDs.map(function (linkedID) {\n      return linkedID != null ? _this._source.get(linkedID) : linkedID;\n    });\n  };\n\n  _proto.setLinkedRecords = function setLinkedRecords(records, name, args) {\n    !Array.isArray(records) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecords(): Expected records to be an array, got `%s`.', records) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = records.map(function (record) {\n      return record && record.getDataID();\n    });\n\n    this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs);\n\n    return this;\n  };\n\n  _proto.invalidateRecord = function invalidateRecord() {\n    this._source.markIDForInvalidation(this._dataID);\n  };\n\n  return RelayRecordProxy;\n}();\n\nfunction isValidLeafValue(value) {\n  return value == null || typeof value !== 'object' || Array.isArray(value) && value.every(isValidLeafValue);\n}\n\nmodule.exports = RelayRecordProxy;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\n\nvar _require = require('../store/RelayRecordState'),\n    EXISTENT = _require.EXISTENT,\n    NONEXISTENT = _require.NONEXISTENT;\n\nvar _require2 = require('../store/RelayStoreUtils'),\n    ROOT_ID = _require2.ROOT_ID,\n    ROOT_TYPE = _require2.ROOT_TYPE;\n\nvar _require3 = require('./readUpdatableQuery_EXPERIMENTAL'),\n    _readUpdatableQuery_EXPERIMENTAL = _require3.readUpdatableQuery_EXPERIMENTAL;\n\nvar RelayRecordProxy = require('./RelayRecordProxy');\n\nvar invariant = require('invariant');\n/**\n * @internal\n *\n * A helper for manipulating a `RecordSource` via an imperative/OO-style API.\n */\n\n\nvar RelayRecordSourceProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceProxy(mutator, getDataID, handlerProvider) {\n    this.__mutator = mutator;\n    this._handlerProvider = handlerProvider || null;\n    this._proxies = {};\n    this._getDataID = getDataID;\n    this._invalidatedStore = false;\n    this._idsMarkedForInvalidation = new Set();\n  }\n\n  var _proto = RelayRecordSourceProxy.prototype;\n\n  _proto.publishSource = function publishSource(source, fieldPayloads) {\n    var _this = this;\n\n    var dataIDs = source.getRecordIDs();\n    dataIDs.forEach(function (dataID) {\n      var status = source.getStatus(dataID);\n\n      if (status === EXISTENT) {\n        var sourceRecord = source.get(dataID);\n\n        if (sourceRecord) {\n          if (_this.__mutator.getStatus(dataID) !== EXISTENT) {\n            _this.create(dataID, RelayModernRecord.getType(sourceRecord));\n          }\n\n          _this.__mutator.copyFieldsFromRecord(sourceRecord, dataID);\n        }\n      } else if (status === NONEXISTENT) {\n        _this[\"delete\"](dataID);\n      }\n    });\n\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(_this, fieldPayload);\n      });\n    }\n  };\n\n  _proto.create = function create(dataID, typeName) {\n    this.__mutator.create(dataID, typeName);\n\n    delete this._proxies[dataID];\n    var record = this.get(dataID); // For flow\n\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#create(): Expected the created record to exist.') : invariant(false) : void 0;\n    return record;\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    !(dataID !== ROOT_ID) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#delete(): Cannot delete the root record.') : invariant(false) : void 0;\n    delete this._proxies[dataID];\n\n    this.__mutator[\"delete\"](dataID);\n  };\n\n  _proto.get = function get(dataID) {\n    if (!this._proxies.hasOwnProperty(dataID)) {\n      var status = this.__mutator.getStatus(dataID);\n\n      if (status === EXISTENT) {\n        this._proxies[dataID] = new RelayRecordProxy(this, this.__mutator, dataID);\n      } else {\n        this._proxies[dataID] = status === NONEXISTENT ? null : undefined;\n      }\n    }\n\n    return this._proxies[dataID];\n  };\n\n  _proto.getRoot = function getRoot() {\n    var root = this.get(ROOT_ID);\n\n    if (!root) {\n      root = this.create(ROOT_ID, ROOT_TYPE);\n    }\n\n    !(root && root.getType() === ROOT_TYPE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#getRoot(): Expected the source to contain a ' + 'root record, %s.', root == null ? 'no root record found' : \"found a root record of type `\".concat(root.getType(), \"`\")) : invariant(false) : void 0;\n    return root;\n  };\n\n  _proto.invalidateStore = function invalidateStore() {\n    this._invalidatedStore = true;\n  };\n\n  _proto.isStoreMarkedForInvalidation = function isStoreMarkedForInvalidation() {\n    return this._invalidatedStore;\n  };\n\n  _proto.markIDForInvalidation = function markIDForInvalidation(dataID) {\n    this._idsMarkedForInvalidation.add(dataID);\n  };\n\n  _proto.getIDsMarkedForInvalidation = function getIDsMarkedForInvalidation() {\n    return this._idsMarkedForInvalidation;\n  };\n\n  _proto.readUpdatableQuery_EXPERIMENTAL = function readUpdatableQuery_EXPERIMENTAL(query, variables) {\n    return _readUpdatableQuery_EXPERIMENTAL(query, variables, this);\n  };\n\n  return RelayRecordSourceProxy;\n}();\n\nmodule.exports = RelayRecordSourceProxy;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../store/RelayStoreUtils'),\n    ROOT_TYPE = _require.ROOT_TYPE,\n    getStorageKey = _require.getStorageKey;\n\nvar _require2 = require('./readUpdatableQuery_EXPERIMENTAL'),\n    _readUpdatableQuery_EXPERIMENTAL = _require2.readUpdatableQuery_EXPERIMENTAL;\n\nvar invariant = require('invariant');\n/**\n * @internal\n *\n * A subclass of RecordSourceProxy that provides convenience methods for\n * accessing the root fields of a given query/mutation. These fields accept\n * complex arguments and it can be tedious to re-construct the correct sets of\n * arguments to pass to e.g. `getRoot().getLinkedRecord()`.\n */\n\n\nvar RelayRecordSourceSelectorProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceSelectorProxy(mutator, recordSource, readSelector) {\n    this.__mutator = mutator;\n    this.__recordSource = recordSource;\n    this._readSelector = readSelector;\n  }\n\n  var _proto = RelayRecordSourceSelectorProxy.prototype;\n\n  _proto.create = function create(dataID, typeName) {\n    return this.__recordSource.create(dataID, typeName);\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this.__recordSource[\"delete\"](dataID);\n  };\n\n  _proto.get = function get(dataID) {\n    return this.__recordSource.get(dataID);\n  };\n\n  _proto.getRoot = function getRoot() {\n    return this.__recordSource.getRoot();\n  };\n\n  _proto.getOperationRoot = function getOperationRoot() {\n    var root = this.__recordSource.get(this._readSelector.dataID);\n\n    if (!root) {\n      root = this.__recordSource.create(this._readSelector.dataID, ROOT_TYPE);\n    }\n\n    return root;\n  };\n\n  _proto._getRootField = function _getRootField(selector, fieldName, plural) {\n    var field = selector.node.selections.find(function (selection) {\n      return selection.kind === 'LinkedField' && selection.name === fieldName || selection.kind === 'RequiredField' && selection.field.name === fieldName;\n    });\n\n    if (field && field.kind === 'RequiredField') {\n      field = field.field;\n    }\n\n    !(field && field.kind === 'LinkedField') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Cannot find root ' + 'field `%s`, no such field is defined on GraphQL document `%s`.', fieldName, selector.node.name) : invariant(false) : void 0;\n    !(field.plural === plural) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Expected root field ' + '`%s` to be %s.', fieldName, plural ? 'plural' : 'singular') : invariant(false) : void 0;\n    return field;\n  };\n\n  _proto.getRootField = function getRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, false);\n\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecord(storageKey);\n  };\n\n  _proto.getPluralRootField = function getPluralRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, true);\n\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecords(storageKey);\n  };\n\n  _proto.invalidateStore = function invalidateStore() {\n    this.__recordSource.invalidateStore();\n  };\n\n  _proto.readUpdatableQuery_EXPERIMENTAL = function readUpdatableQuery_EXPERIMENTAL(query, variables) {\n    return _readUpdatableQuery_EXPERIMENTAL(query, variables, this);\n  };\n\n  return RelayRecordSourceSelectorProxy;\n}();\n\nmodule.exports = RelayRecordSourceSelectorProxy;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar recycleNodesInto = require('../util/recycleNodesInto');\n\nvar _require = require('../util/RelayConcreteNode'),\n    RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER;\n\nvar _require2 = require('./ClientID'),\n    generateClientID = _require2.generateClientID;\n\nvar RelayModernRecord = require('./RelayModernRecord');\n\nvar _require3 = require('./RelayStoreUtils'),\n    RELAY_RESOLVER_ERROR_KEY = _require3.RELAY_RESOLVER_ERROR_KEY,\n    RELAY_RESOLVER_INPUTS_KEY = _require3.RELAY_RESOLVER_INPUTS_KEY,\n    RELAY_RESOLVER_INVALIDATION_KEY = _require3.RELAY_RESOLVER_INVALIDATION_KEY,\n    RELAY_RESOLVER_MISSING_REQUIRED_FIELDS_KEY = _require3.RELAY_RESOLVER_MISSING_REQUIRED_FIELDS_KEY,\n    RELAY_RESOLVER_READER_SELECTOR_KEY = _require3.RELAY_RESOLVER_READER_SELECTOR_KEY,\n    RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n    getStorageKey = _require3.getStorageKey;\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n\n// $FlowFixMe[unclear-type] - will always be empty\nvar emptySet = new Set();\n\nvar NoopResolverCache = /*#__PURE__*/function () {\n  function NoopResolverCache() {}\n\n  var _proto = NoopResolverCache.prototype;\n\n  _proto.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(record, field, variables, evaluate, getDataForResolverFragment) {\n    !(field.kind !== RELAY_LIVE_RESOLVER) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'This store does not support Live Resolvers') : invariant(false) : void 0;\n\n    var _evaluate = evaluate(),\n        resolverResult = _evaluate.resolverResult,\n        missingRequiredFields = _evaluate.missingRequiredFields,\n        errors = _evaluate.errors;\n\n    return [resolverResult, undefined, errors, missingRequiredFields];\n  };\n\n  _proto.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs) {};\n\n  return NoopResolverCache;\n}();\n\nfunction addDependencyEdge(edges, from, to) {\n  var set = edges.get(from);\n\n  if (!set) {\n    set = new Set();\n    edges.set(from, set);\n  }\n\n  set.add(to);\n}\n\nvar RecordResolverCache = /*#__PURE__*/function () {\n  function RecordResolverCache(getRecordSource) {\n    this._resolverIDToRecordIDs = new Map();\n    this._recordIDToResolverIDs = new Map();\n    this._getRecordSource = getRecordSource;\n  }\n\n  var _proto2 = RecordResolverCache.prototype;\n\n  _proto2.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(record, field, variables, evaluate, getDataForResolverFragment) {\n    var recordSource = this._getRecordSource();\n\n    var recordID = RelayModernRecord.getDataID(record);\n    var storageKey = getStorageKey(field, variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    var linkedRecord = linkedID == null ? null : recordSource.get(linkedID);\n\n    if (linkedRecord == null || this._isInvalid(linkedRecord, getDataForResolverFragment)) {\n      var _linkedID;\n\n      // Cache miss; evaluate the selector and store the result in a new record:\n      linkedID = (_linkedID = linkedID) !== null && _linkedID !== void 0 ? _linkedID : generateClientID(recordID, storageKey);\n      linkedRecord = RelayModernRecord.create(linkedID, '__RELAY_RESOLVER__');\n      var evaluationResult = evaluate();\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY, evaluationResult.resolverResult);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_INPUTS_KEY, evaluationResult.fragmentValue);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_READER_SELECTOR_KEY, evaluationResult.readerSelector);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_MISSING_REQUIRED_FIELDS_KEY, evaluationResult.missingRequiredFields);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY, evaluationResult.errors);\n      recordSource.set(linkedID, linkedRecord); // Link the resolver value record to the resolver field of the record being read:\n\n      var nextRecord = RelayModernRecord.clone(record);\n      RelayModernRecord.setLinkedRecordID(nextRecord, storageKey, linkedID);\n      recordSource.set(RelayModernRecord.getDataID(nextRecord), nextRecord); // Put records observed by the resolver into the dependency graph:\n\n      var resolverID = evaluationResult.resolverID;\n      addDependencyEdge(this._resolverIDToRecordIDs, resolverID, linkedID);\n      addDependencyEdge(this._recordIDToResolverIDs, recordID, resolverID);\n\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(evaluationResult.seenRecordIDs),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var seenRecordID = _step.value;\n          addDependencyEdge(this._recordIDToResolverIDs, seenRecordID, resolverID);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } // $FlowFixMe[incompatible-type] - will always be empty\n\n\n    var answer = linkedRecord[RELAY_RESOLVER_VALUE_KEY];\n    var missingRequiredFields = // $FlowFixMe[incompatible-type] - casting mixed\n    linkedRecord[RELAY_RESOLVER_MISSING_REQUIRED_FIELDS_KEY]; // $FlowFixMe[incompatible-type] - casting mixed\n\n    var errors = linkedRecord[RELAY_RESOLVER_ERROR_KEY];\n    return [answer, linkedID, errors, missingRequiredFields];\n  };\n\n  _proto2.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs) {\n    var recordSource = this._getRecordSource();\n\n    var visited = new Set();\n    var recordsToVisit = Array.from(updatedDataIDs);\n\n    while (recordsToVisit.length) {\n      var recordID = recordsToVisit.pop();\n      updatedDataIDs.add(recordID);\n\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_recordIDToReso = this._recordIDToResolverIDs.get(recordID)) !== null && _this$_recordIDToReso !== void 0 ? _this$_recordIDToReso : emptySet),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _this$_recordIDToReso;\n\n          var fragment = _step2.value;\n\n          if (!visited.has(fragment)) {\n            var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_resolverIDToRe = this._resolverIDToRecordIDs.get(fragment)) !== null && _this$_resolverIDToRe !== void 0 ? _this$_resolverIDToRe : emptySet),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _this$_resolverIDToRe;\n\n                var anotherRecordID = _step3.value;\n\n                this._markInvalidatedResolverRecord(anotherRecordID, recordSource, updatedDataIDs);\n\n                if (!visited.has(anotherRecordID)) {\n                  recordsToVisit.push(anotherRecordID);\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  };\n\n  _proto2._markInvalidatedResolverRecord = function _markInvalidatedResolverRecord(dataID, recordSource, // Written to\n  updatedDataIDs) // Mutated in place\n  {\n    var record = recordSource.get(dataID);\n\n    if (!record) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected a resolver record with ID %s, but it was missing.', dataID) : void 0;\n      return;\n    }\n\n    var nextRecord = RelayModernRecord.clone(record);\n    RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, true);\n    recordSource.set(dataID, nextRecord);\n  };\n\n  _proto2._isInvalid = function _isInvalid(record, getDataForResolverFragment) {\n    if (!RelayModernRecord.getValue(record, RELAY_RESOLVER_INVALIDATION_KEY)) {\n      return false;\n    }\n\n    var originalInputs = RelayModernRecord.getValue(record, RELAY_RESOLVER_INPUTS_KEY); // $FlowFixMe[incompatible-type] - storing values in records is not typed\n\n    var readerSelector = RelayModernRecord.getValue(record, RELAY_RESOLVER_READER_SELECTOR_KEY);\n\n    if (originalInputs == null || readerSelector == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected previous inputs and reader selector on resolver record with ID %s, but they were missing.', RelayModernRecord.getDataID(record)) : void 0;\n      return true;\n    }\n\n    var latestValues = getDataForResolverFragment(readerSelector);\n    var recycled = recycleNodesInto(originalInputs, latestValues);\n\n    if (recycled !== originalInputs) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return RecordResolverCache;\n}();\n\nmodule.exports = {\n  NoopResolverCache: NoopResolverCache,\n  RecordResolverCache: RecordResolverCache\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n    getFragment = _require.getFragment;\n\nvar _require2 = require('./RelayModernSelector'),\n    getSelector = _require2.getSelector;\n\nvar invariant = require('invariant'); // When we call the user-supplied resolver function, it will in turn call\n// `readFragment`, but that's a global function -- it needs information\n// about what resolver is being executed, which is supplied by putting the\n// info on this stack before we call the resolver function.\n\n\nvar contextStack = [];\n\nfunction withResolverContext(context, cb) {\n  contextStack.push(context);\n\n  try {\n    return cb();\n  } finally {\n    contextStack.pop();\n  }\n} // NOTE: these declarations are copied from 'useFragment'; it would be good\n// to figure out how to share the same type signature between the two functions.\n// The declarations ensure that the type of the returned data is:\n//   - non-nullable if the provided ref type is non-nullable\n//   - nullable if the provided ref type is nullable\n//   - array of non-nullable if the provided ref type is an array of\n//     non-nullable refs\n//   - array of nullable if the provided ref type is an array of nullable refs\n\n\nfunction readFragment(fragmentInput, fragmentKey) {\n  if (!contextStack.length) {\n    throw new Error('readFragment should be called only from within a Relay Resolver function.');\n  }\n\n  var context = contextStack[contextStack.length - 1];\n  var fragmentNode = getFragment(fragmentInput);\n  var fragmentSelector = getSelector(fragmentNode, fragmentKey);\n  !(fragmentSelector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected a selector for the fragment of the resolver \".concat(fragmentNode.name, \", but got null.\")) : invariant(false) : void 0;\n  !(fragmentSelector.kind === 'SingularReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected a singular reader selector for the fragment of the resolver \".concat(fragmentNode.name, \", but it was plural.\")) : invariant(false) : void 0;\n  return context.getDataForResolverFragment(fragmentSelector, fragmentKey);\n}\n\nmodule.exports = {\n  readFragment: readFragment,\n  withResolverContext: withResolverContext\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _require = require('../util/RelayConcreteNode'),\n    ACTOR_CHANGE = _require.ACTOR_CHANGE,\n    CLIENT_EDGE = _require.CLIENT_EDGE,\n    CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n    CONDITION = _require.CONDITION,\n    DEFER = _require.DEFER,\n    FLIGHT_FIELD = _require.FLIGHT_FIELD,\n    FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n    INLINE_DATA_FRAGMENT_SPREAD = _require.INLINE_DATA_FRAGMENT_SPREAD,\n    INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n    LINKED_FIELD = _require.LINKED_FIELD,\n    MODULE_IMPORT = _require.MODULE_IMPORT,\n    RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER,\n    RELAY_RESOLVER = _require.RELAY_RESOLVER,\n    REQUIRED_FIELD = _require.REQUIRED_FIELD,\n    SCALAR_FIELD = _require.SCALAR_FIELD,\n    STREAM = _require.STREAM;\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar ClientID = require('./ClientID');\n\nvar RelayModernRecord = require('./RelayModernRecord');\n\nvar _require2 = require('./RelayStoreReactFlightUtils'),\n    getReactFlightClientResponse = _require2.getReactFlightClientResponse;\n\nvar _require3 = require('./RelayStoreUtils'),\n    CLIENT_EDGE_TRAVERSAL_PATH = _require3.CLIENT_EDGE_TRAVERSAL_PATH,\n    FRAGMENT_OWNER_KEY = _require3.FRAGMENT_OWNER_KEY,\n    FRAGMENT_PROP_NAME_KEY = _require3.FRAGMENT_PROP_NAME_KEY,\n    FRAGMENTS_KEY = _require3.FRAGMENTS_KEY,\n    ID_KEY = _require3.ID_KEY,\n    IS_WITHIN_UNMATCHED_TYPE_REFINEMENT = _require3.IS_WITHIN_UNMATCHED_TYPE_REFINEMENT,\n    MODULE_COMPONENT_KEY = _require3.MODULE_COMPONENT_KEY,\n    ROOT_ID = _require3.ROOT_ID,\n    getArgumentValues = _require3.getArgumentValues,\n    getModuleComponentKey = _require3.getModuleComponentKey,\n    getStorageKey = _require3.getStorageKey;\n\nvar _require4 = require('./ResolverCache'),\n    NoopResolverCache = _require4.NoopResolverCache;\n\nvar _require5 = require('./ResolverFragments'),\n    withResolverContext = _require5.withResolverContext;\n\nvar _require6 = require('./TypeID'),\n    generateTypeID = _require6.generateTypeID;\n\nvar invariant = require('invariant');\n\nfunction read(recordSource, selector, resolverCache) {\n  var reader = new RelayReader(recordSource, selector, resolverCache !== null && resolverCache !== void 0 ? resolverCache : new NoopResolverCache());\n  return reader.read();\n}\n/**\n * @private\n */\n\n\nvar RelayReader = /*#__PURE__*/function () {\n  function RelayReader(recordSource, selector, resolverCache) {\n    var _selector$clientEdgeT;\n\n    this._clientEdgeTraversalPath = RelayFeatureFlags.ENABLE_CLIENT_EDGES && ((_selector$clientEdgeT = selector.clientEdgeTraversalPath) === null || _selector$clientEdgeT === void 0 ? void 0 : _selector$clientEdgeT.length) ? (0, _toConsumableArray2[\"default\"])(selector.clientEdgeTraversalPath) : [];\n    this._missingClientEdges = [];\n    this._isMissingData = false;\n    this._isWithinUnmatchedTypeRefinement = false;\n    this._missingRequiredFields = null;\n    this._owner = selector.owner;\n    this._recordSource = recordSource;\n    this._seenRecords = new Set();\n    this._selector = selector;\n    this._variables = selector.variables;\n    this._resolverCache = resolverCache;\n    this._resolverErrors = [];\n    this._fragmentName = selector.node.name;\n  }\n\n  var _proto = RelayReader.prototype;\n\n  _proto.read = function read() {\n    var _this$_selector = this._selector,\n        node = _this$_selector.node,\n        dataID = _this$_selector.dataID,\n        isWithinUnmatchedTypeRefinement = _this$_selector.isWithinUnmatchedTypeRefinement;\n    var abstractKey = node.abstractKey;\n\n    var record = this._recordSource.get(dataID); // Relay historically allowed child fragments to be read even if the root object\n    // did not match the type of the fragment: either the root object has a different\n    // concrete type than the fragment (for concrete fragments) or the root object does\n    // not conform to the interface/union for abstract fragments.\n    // For suspense purposes, however, we want to accurately compute whether any data\n    // is missing: but if the fragment type doesn't match (or a parent type didn't\n    // match), then no data is expected to be present.\n    // By default data is expected to be present unless this selector was read out\n    // from within a non-matching type refinement in a parent fragment:\n\n\n    var isDataExpectedToBePresent = !isWithinUnmatchedTypeRefinement; // If this is a concrete fragment and the concrete type of the record does not\n    // match, then no data is expected to be present.\n\n    if (isDataExpectedToBePresent && abstractKey == null && record != null) {\n      var recordType = RelayModernRecord.getType(record);\n\n      if (recordType !== node.type && // The root record type is a special `__Root` type and may not match the\n      // type on the ast, so ignore type mismatches at the root.\n      // We currently detect whether we're at the root by checking against ROOT_ID,\n      // but this does not work for mutations/subscriptions which generate unique\n      // root ids. This is acceptable in practice as we don't read data for mutations/\n      // subscriptions in a situation where we would use isMissingData to decide whether\n      // to suspend or not.\n      // TODO T96653810: Correctly detect reading from root of mutation/subscription\n      dataID !== ROOT_ID) {\n        isDataExpectedToBePresent = false;\n      }\n    } // If this is an abstract fragment (and the precise refinement GK is enabled)\n    // then data is only expected to be present if the record type is known to\n    // implement the interface. If we aren't sure whether the record implements\n    // the interface, that itself constitutes \"expected\" data being missing.\n\n\n    if (isDataExpectedToBePresent && abstractKey != null && record != null) {\n      var _recordType = RelayModernRecord.getType(record);\n\n      var typeID = generateTypeID(_recordType);\n\n      var typeRecord = this._recordSource.get(typeID);\n\n      var implementsInterface = typeRecord != null ? RelayModernRecord.getValue(typeRecord, abstractKey) : null;\n\n      if (implementsInterface === false) {\n        // Type known to not implement the interface\n        isDataExpectedToBePresent = false;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._isMissingData = true;\n      }\n    }\n\n    this._isWithinUnmatchedTypeRefinement = !isDataExpectedToBePresent;\n\n    var data = this._traverse(node, dataID, null);\n\n    return {\n      data: data,\n      isMissingData: this._isMissingData && isDataExpectedToBePresent,\n      missingClientEdges: RelayFeatureFlags.ENABLE_CLIENT_EDGES && this._missingClientEdges.length ? this._missingClientEdges : null,\n      seenRecords: this._seenRecords,\n      selector: this._selector,\n      missingRequiredFields: this._missingRequiredFields,\n      relayResolverErrors: this._resolverErrors\n    };\n  };\n\n  _proto._markDataAsMissing = function _markDataAsMissing() {\n    this._isMissingData = true;\n\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && this._clientEdgeTraversalPath.length) {\n      var top = this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1]; // Top can be null if we've traversed past a client edge into an ordinary\n      // client extension field; we never want to fetch in response to missing\n      // data off of a client extension field.\n\n      if (top !== null) {\n        this._missingClientEdges.push({\n          request: top.readerClientEdge.operation,\n          clientEdgeDestinationID: top.clientEdgeDestinationID\n        });\n      }\n    }\n  };\n\n  _proto._traverse = function _traverse(node, dataID, prevData) {\n    var record = this._recordSource.get(dataID);\n\n    this._seenRecords.add(dataID);\n\n    if (record == null) {\n      if (record === undefined) {\n        this._markDataAsMissing();\n      }\n\n      return record;\n    }\n\n    var data = prevData || {};\n\n    var hadRequiredData = this._traverseSelections(node.selections, record, data);\n\n    return hadRequiredData ? data : null;\n  };\n\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n\n  _proto._maybeReportUnexpectedNull = function _maybeReportUnexpectedNull(fieldPath, action, record) {\n    var _this$_missingRequire;\n\n    if (((_this$_missingRequire = this._missingRequiredFields) === null || _this$_missingRequire === void 0 ? void 0 : _this$_missingRequire.action) === 'THROW') {\n      // Chained @required directives may cause a parent `@required(action:\n      // THROW)` field to become null, so the first missing field we\n      // encounter is likely to be the root cause of the error.\n      return;\n    }\n\n    var owner = this._fragmentName;\n\n    switch (action) {\n      case 'THROW':\n        this._missingRequiredFields = {\n          action: action,\n          field: {\n            path: fieldPath,\n            owner: owner\n          }\n        };\n        return;\n\n      case 'LOG':\n        if (this._missingRequiredFields == null) {\n          this._missingRequiredFields = {\n            action: action,\n            fields: [{\n              path: fieldPath,\n              owner: owner\n            }]\n          };\n        } else {\n          this._missingRequiredFields = {\n            action: action,\n            fields: [].concat((0, _toConsumableArray2[\"default\"])(this._missingRequiredFields.fields), [{\n              path: fieldPath,\n              owner: owner\n            }])\n          };\n        }\n\n        return;\n\n      default:\n        action;\n    }\n  };\n\n  _proto._traverseSelections = function _traverseSelections(selections, record, data)\n  /* had all expected data */\n  {\n    for (var i = 0; i < selections.length; i++) {\n      var selection = selections[i];\n\n      switch (selection.kind) {\n        case REQUIRED_FIELD:\n          var fieldValue = this._readRequiredField(selection, record, data);\n\n          if (fieldValue == null) {\n            var action = selection.action;\n\n            if (action !== 'NONE') {\n              this._maybeReportUnexpectedNull(selection.path, action, record);\n            } // We are going to throw, or our parent is going to get nulled out.\n            // Either way, sibling values are going to be ignored, so we can\n            // bail early here as an optimization.\n\n\n            return false;\n          }\n\n          break;\n\n        case SCALAR_FIELD:\n          this._readScalar(selection, record, data);\n\n          break;\n\n        case LINKED_FIELD:\n          if (selection.plural) {\n            this._readPluralLink(selection, record, data);\n          } else {\n            this._readLink(selection, record, data);\n          }\n\n          break;\n\n        case CONDITION:\n          var conditionValue = Boolean(this._getVariableValue(selection.condition));\n\n          if (conditionValue === selection.passingValue) {\n            var hasExpectedData = this._traverseSelections(selection.selections, record, data);\n\n            if (!hasExpectedData) {\n              return false;\n            }\n          }\n\n          break;\n\n        case INLINE_FRAGMENT:\n          {\n            var abstractKey = selection.abstractKey;\n\n            if (abstractKey == null) {\n              // concrete type refinement: only read data if the type exactly matches\n              var typeName = RelayModernRecord.getType(record);\n\n              if (typeName != null && typeName === selection.type) {\n                var _hasExpectedData = this._traverseSelections(selection.selections, record, data);\n\n                if (!_hasExpectedData) {\n                  return false;\n                }\n              }\n            } else {\n              // Similar to the logic in read(): data is only expected to be present\n              // if the record is known to conform to the interface. If we don't know\n              // whether the type conforms or not, that constitutes missing data.\n              // store flags to reset after reading\n              var parentIsMissingData = this._isMissingData;\n              var parentIsWithinUnmatchedTypeRefinement = this._isWithinUnmatchedTypeRefinement;\n\n              var _typeName = RelayModernRecord.getType(record);\n\n              var typeID = generateTypeID(_typeName);\n\n              var typeRecord = this._recordSource.get(typeID);\n\n              var implementsInterface = typeRecord != null ? RelayModernRecord.getValue(typeRecord, abstractKey) : null;\n              this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement || implementsInterface === false;\n\n              this._traverseSelections(selection.selections, record, data);\n\n              this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement;\n\n              if (implementsInterface === false) {\n                // Type known to not implement the interface, no data expected\n                this._isMissingData = parentIsMissingData;\n              } else if (implementsInterface == null) {\n                // Don't know if the type implements the interface or not\n                this._markDataAsMissing();\n              }\n            }\n\n            break;\n          }\n\n        case RELAY_LIVE_RESOLVER:\n          {\n            if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n              throw new Error('Relay Resolver fields are not yet supported.');\n            }\n\n            this._readResolverField(selection, record, data);\n\n            break;\n          }\n\n        case RELAY_RESOLVER:\n          {\n            if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n              throw new Error('Relay Resolver fields are not yet supported.');\n            }\n\n            this._readResolverField(selection, record, data);\n\n            break;\n          }\n\n        case FRAGMENT_SPREAD:\n          this._createFragmentPointer(selection, record, data);\n\n          break;\n\n        case MODULE_IMPORT:\n          this._readModuleImport(selection, record, data);\n\n          break;\n\n        case INLINE_DATA_FRAGMENT_SPREAD:\n          this._createInlineDataOrResolverFragmentPointer(selection, record, data);\n\n          break;\n\n        case DEFER:\n        case CLIENT_EXTENSION:\n          {\n            var isMissingData = this._isMissingData;\n            var alreadyMissingClientEdges = this._missingClientEdges.length;\n\n            if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n              this._clientEdgeTraversalPath.push(null);\n            }\n\n            var _hasExpectedData2 = this._traverseSelections(selection.selections, record, data); // The only case where we want to suspend due to missing data off of\n            // a client extension is if we reached a client edge that we might be\n            // able to fetch:\n\n\n            this._isMissingData = isMissingData || this._missingClientEdges.length > alreadyMissingClientEdges;\n\n            if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n              this._clientEdgeTraversalPath.pop();\n            }\n\n            if (!_hasExpectedData2) {\n              return false;\n            }\n\n            break;\n          }\n\n        case STREAM:\n          {\n            var _hasExpectedData3 = this._traverseSelections(selection.selections, record, data);\n\n            if (!_hasExpectedData3) {\n              return false;\n            }\n\n            break;\n          }\n\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            this._readFlightField(selection, record, data);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n\n          break;\n\n        case ACTOR_CHANGE:\n          this._readActorChange(selection, record, data);\n\n          break;\n\n        case CLIENT_EDGE:\n          if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n            this._readClientEdge(selection, record, data);\n          } else {\n            throw new Error('Client edges are not yet supported.');\n          }\n\n          break;\n\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    }\n\n    return true;\n  };\n\n  _proto._readRequiredField = function _readRequiredField(selection, record, data) {\n    switch (selection.field.kind) {\n      case SCALAR_FIELD:\n        return this._readScalar(selection.field, record, data);\n\n      case LINKED_FIELD:\n        if (selection.field.plural) {\n          return this._readPluralLink(selection.field, record, data);\n        } else {\n          return this._readLink(selection.field, record, data);\n        }\n\n      case RELAY_RESOLVER:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n\n        return this._readResolverField(selection.field, record, data);\n\n      case RELAY_LIVE_RESOLVER:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n\n        return this._readResolverField(selection.field, record, data);\n\n      default:\n        selection.field.kind;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n    }\n  };\n\n  _proto._readResolverField = function _readResolverField(field, record, data) {\n    var _this = this;\n\n    var _field$alias;\n\n    var resolverModule = field.resolverModule,\n        fragment = field.fragment;\n    var storageKey = getStorageKey(field, this._variables);\n    var resolverID = ClientID.generateClientID(RelayModernRecord.getDataID(record), storageKey); // Found when reading the resolver fragment, which can happen either when\n    // evaluating the resolver and it calls readFragment, or when checking if the\n    // inputs have changed since a previous evaluation:\n\n    var fragmentValue;\n    var fragmentReaderSelector;\n    var fragmentMissingRequiredFields;\n    var previousMissingRequriedFields;\n    var currentResolverErrors;\n    var previousResolverErrors;\n    var fragmentSeenRecordIDs = new Set();\n\n    var getDataForResolverFragment = function getDataForResolverFragment(singularReaderSelector) {\n      if (fragmentValue != null) {\n        // It was already read when checking for input staleness; no need to read it again.\n        // Note that the variables like fragmentSeenRecordIDs in the outer closure will have\n        // already been set and will still be used in this case.\n        return fragmentValue;\n      }\n\n      fragmentReaderSelector = singularReaderSelector;\n      var existingSeenRecords = _this._seenRecords;\n\n      try {\n        var _resolverFragmentData;\n\n        _this._seenRecords = fragmentSeenRecordIDs;\n        var resolverFragmentData = {};\n        previousMissingRequriedFields = _this._missingRequiredFields;\n        _this._missingRequiredFields = null;\n        previousResolverErrors = _this._resolverErrors;\n        _this._resolverErrors = [];\n\n        _this._createInlineDataOrResolverFragmentPointer(singularReaderSelector.node, record, resolverFragmentData);\n\n        fragmentMissingRequiredFields = _this._missingRequiredFields;\n        currentResolverErrors = _this._resolverErrors;\n        fragmentValue = (_resolverFragmentData = resolverFragmentData[FRAGMENTS_KEY]) === null || _resolverFragmentData === void 0 ? void 0 : _resolverFragmentData[fragment.name];\n        !(typeof fragmentValue === 'object' && fragmentValue !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected reader data to contain a __fragments property with a property for the fragment named \".concat(fragment.name, \", but it is missing.\")) : invariant(false) : void 0;\n        return fragmentValue;\n      } finally {\n        _this._seenRecords = existingSeenRecords;\n        _this._missingRequiredFields = previousMissingRequriedFields;\n        _this._resolverErrors = previousResolverErrors;\n      }\n    };\n\n    var resolverContext = {\n      getDataForResolverFragment: getDataForResolverFragment\n    };\n\n    var evaluate = function evaluate() {\n      var key = {\n        __id: RelayModernRecord.getDataID(record),\n        __fragmentOwner: _this._owner,\n        __fragments: (0, _defineProperty2[\"default\"])({}, fragment.name, {})\n      };\n      return withResolverContext(resolverContext, function () {\n        var resolverResult = null;\n\n        try {\n          // $FlowFixMe[prop-missing] - resolver module's type signature is a lie\n          resolverResult = resolverModule(key);\n        } catch (e) {\n          var _field$path;\n\n          // `field.path` is typed as nullable while we rollout compiler changes.\n          var path = (_field$path = field.path) !== null && _field$path !== void 0 ? _field$path : '[UNKNOWN]';\n          currentResolverErrors.push({\n            field: {\n              path: path,\n              owner: _this._fragmentName\n            },\n            error: e\n          });\n        }\n\n        return {\n          resolverResult: resolverResult,\n          errors: currentResolverErrors,\n          fragmentValue: fragmentValue,\n          resolverID: resolverID,\n          seenRecordIDs: fragmentSeenRecordIDs,\n          readerSelector: fragmentReaderSelector,\n          missingRequiredFields: fragmentMissingRequiredFields\n        };\n      });\n    };\n\n    var _this$_resolverCache$ = this._resolverCache.readFromCacheOrEvaluate(record, field, this._variables, evaluate, getDataForResolverFragment),\n        result = _this$_resolverCache$[0],\n        seenRecord = _this$_resolverCache$[1],\n        resolverErrors = _this$_resolverCache$[2],\n        missingRequiredFields = _this$_resolverCache$[3];\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(resolverErrors),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var resolverError = _step.value;\n\n        this._resolverErrors.push(resolverError);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (missingRequiredFields != null) {\n      this._addMissingRequiredFields(missingRequiredFields);\n    }\n\n    if (seenRecord != null) {\n      this._seenRecords.add(seenRecord);\n    }\n\n    var applicationName = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    data[applicationName] = result;\n    return result;\n  };\n\n  _proto._readClientEdge = function _readClientEdge(field, record, data) {\n    var _backingField$alias;\n\n    var backingField = field.backingField; // Because ReaderClientExtension doesn't have `alias` or `name` and so I don't know\n    // how to get its applicationName or storageKey yet:\n\n    !(backingField.kind !== 'ClientExtension') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client extension client edges are not yet implemented.') : invariant(false) : void 0;\n    var applicationName = (_backingField$alias = backingField.alias) !== null && _backingField$alias !== void 0 ? _backingField$alias : backingField.name;\n    var backingFieldData = {};\n\n    this._traverseSelections([backingField], record, backingFieldData);\n\n    var destinationDataID = backingFieldData[applicationName];\n\n    if (destinationDataID == null) {\n      data[applicationName] = destinationDataID;\n      return;\n    }\n\n    !(typeof destinationDataID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Plural client edges not are yet implemented') : invariant(false) : void 0; // FIXME support plural\n    // Not wrapping the push/pop in a try/finally because if we throw, the\n    // Reader object is not usable after that anyway.\n\n    this._clientEdgeTraversalPath.push({\n      readerClientEdge: field,\n      clientEdgeDestinationID: destinationDataID\n    });\n\n    var prevData = data[applicationName];\n    !(prevData == null || typeof prevData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n\n    var value = this._traverse(field.linkedField, destinationDataID, // $FlowFixMe[incompatible-variance]\n    prevData);\n\n    data[applicationName] = value;\n\n    this._clientEdgeTraversalPath.pop();\n  };\n\n  _proto._readFlightField = function _readFlightField(field, record, data) {\n    var _field$alias2;\n\n    var applicationName = (_field$alias2 = field.alias) !== null && _field$alias2 !== void 0 ? _field$alias2 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var reactFlightClientResponseRecordID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n    if (reactFlightClientResponseRecordID == null) {\n      data[applicationName] = reactFlightClientResponseRecordID;\n\n      if (reactFlightClientResponseRecordID === undefined) {\n        this._markDataAsMissing();\n      }\n\n      return reactFlightClientResponseRecordID;\n    }\n\n    var reactFlightClientResponseRecord = this._recordSource.get(reactFlightClientResponseRecordID);\n\n    this._seenRecords.add(reactFlightClientResponseRecordID);\n\n    if (reactFlightClientResponseRecord == null) {\n      data[applicationName] = reactFlightClientResponseRecord;\n\n      if (reactFlightClientResponseRecord === undefined) {\n        this._markDataAsMissing();\n      }\n\n      return reactFlightClientResponseRecord;\n    }\n\n    var clientResponse = getReactFlightClientResponse(reactFlightClientResponseRecord);\n    data[applicationName] = clientResponse;\n    return clientResponse;\n  };\n\n  _proto._readScalar = function _readScalar(field, record, data) {\n    var _field$alias3;\n\n    var applicationName = (_field$alias3 = field.alias) !== null && _field$alias3 !== void 0 ? _field$alias3 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var value = RelayModernRecord.getValue(record, storageKey);\n\n    if (value === undefined) {\n      this._markDataAsMissing();\n    }\n\n    data[applicationName] = value;\n    return value;\n  };\n\n  _proto._readLink = function _readLink(field, record, data) {\n    var _field$alias4;\n\n    var applicationName = (_field$alias4 = field.alias) !== null && _field$alias4 !== void 0 ? _field$alias4 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n    if (linkedID == null) {\n      data[applicationName] = linkedID;\n\n      if (linkedID === undefined) {\n        this._markDataAsMissing();\n      }\n\n      return linkedID;\n    }\n\n    var prevData = data[applicationName];\n    !(prevData == null || typeof prevData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0; // $FlowFixMe[incompatible-variance]\n\n    var value = this._traverse(field, linkedID, prevData);\n\n    data[applicationName] = value;\n    return value;\n  };\n\n  _proto._readActorChange = function _readActorChange(field, record, data) {\n    var _field$alias5;\n\n    var applicationName = (_field$alias5 = field.alias) !== null && _field$alias5 !== void 0 ? _field$alias5 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var externalRef = RelayModernRecord.getActorLinkedRecordID(record, storageKey);\n\n    if (externalRef == null) {\n      data[applicationName] = externalRef;\n\n      if (externalRef === undefined) {\n        this._markDataAsMissing();\n      }\n\n      return data[applicationName];\n    }\n\n    var actorIdentifier = externalRef[0],\n        dataID = externalRef[1];\n    var fragmentRef = {};\n\n    this._createFragmentPointer(field.fragmentSpread, {\n      __id: dataID\n    }, fragmentRef);\n\n    data[applicationName] = {\n      __fragmentRef: fragmentRef,\n      __viewer: actorIdentifier\n    };\n    return data[applicationName];\n  };\n\n  _proto._readPluralLink = function _readPluralLink(field, record, data) {\n    var _this2 = this;\n\n    var _field$alias6;\n\n    var applicationName = (_field$alias6 = field.alias) !== null && _field$alias6 !== void 0 ? _field$alias6 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n\n    if (linkedIDs == null) {\n      data[applicationName] = linkedIDs;\n\n      if (linkedIDs === undefined) {\n        this._markDataAsMissing();\n      }\n\n      return linkedIDs;\n    }\n\n    var prevData = data[applicationName];\n    !(prevData == null || Array.isArray(prevData)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an array, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n    var linkedArray = prevData || [];\n    linkedIDs.forEach(function (linkedID, nextIndex) {\n      if (linkedID == null) {\n        if (linkedID === undefined) {\n          _this2._markDataAsMissing();\n        } // $FlowFixMe[cannot-write]\n\n\n        linkedArray[nextIndex] = linkedID;\n        return;\n      }\n\n      var prevItem = linkedArray[nextIndex];\n      !(prevItem == null || typeof prevItem === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevItem) : invariant(false) : void 0; // $FlowFixMe[cannot-write]\n      // $FlowFixMe[incompatible-variance]\n\n      linkedArray[nextIndex] = _this2._traverse(field, linkedID, prevItem);\n    });\n    data[applicationName] = linkedArray;\n    return linkedArray;\n  }\n  /**\n   * Reads a ReaderModuleImport, which was generated from using the @module\n   * directive.\n   */\n  ;\n\n  _proto._readModuleImport = function _readModuleImport(moduleImport, record, data) {\n    // Determine the component module from the store: if the field is missing\n    // it means we don't know what component to render the match with.\n    var componentKey = getModuleComponentKey(moduleImport.documentName);\n    var component = RelayModernRecord.getValue(record, componentKey);\n\n    if (component == null) {\n      if (component === undefined) {\n        this._markDataAsMissing();\n      }\n\n      return;\n    } // Otherwise, read the fragment and module associated to the concrete\n    // type, and put that data with the result:\n    // - For the matched fragment, create the relevant fragment pointer and add\n    //   the expected fragmentPropName\n    // - For the matched module, create a reference to the module\n\n\n    this._createFragmentPointer({\n      kind: 'FragmentSpread',\n      name: moduleImport.fragmentName,\n      args: moduleImport.args\n    }, record, data);\n\n    data[FRAGMENT_PROP_NAME_KEY] = moduleImport.fragmentPropName;\n    data[MODULE_COMPONENT_KEY] = component;\n  };\n\n  _proto._createFragmentPointer = function _createFragmentPointer(fragmentSpread, record, data) {\n    var fragmentPointers = data[FRAGMENTS_KEY];\n\n    if (fragmentPointers == null) {\n      fragmentPointers = data[FRAGMENTS_KEY] = {};\n    }\n\n    !(typeof fragmentPointers === 'object' && fragmentPointers != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader: Expected fragment spread data to be an object, got `%s`.', fragmentPointers) : invariant(false) : void 0;\n\n    if (data[ID_KEY] == null) {\n      data[ID_KEY] = RelayModernRecord.getDataID(record);\n    } // $FlowFixMe[cannot-write] - writing into read-only field\n\n\n    fragmentPointers[fragmentSpread.name] = fragmentSpread.args ? getArgumentValues(fragmentSpread.args, this._variables) : {};\n    data[FRAGMENT_OWNER_KEY] = this._owner;\n    data[IS_WITHIN_UNMATCHED_TYPE_REFINEMENT] = this._isWithinUnmatchedTypeRefinement;\n\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      if (this._clientEdgeTraversalPath.length > 0 && this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1] !== null) {\n        data[CLIENT_EDGE_TRAVERSAL_PATH] = (0, _toConsumableArray2[\"default\"])(this._clientEdgeTraversalPath);\n      }\n    }\n  };\n\n  _proto._createInlineDataOrResolverFragmentPointer = function _createInlineDataOrResolverFragmentPointer(fragmentSpreadOrFragment, record, data) {\n    var fragmentPointers = data[FRAGMENTS_KEY];\n\n    if (fragmentPointers == null) {\n      fragmentPointers = data[FRAGMENTS_KEY] = {};\n    }\n\n    !(typeof fragmentPointers === 'object' && fragmentPointers != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader: Expected fragment spread data to be an object, got `%s`.', fragmentPointers) : invariant(false) : void 0;\n\n    if (data[ID_KEY] == null) {\n      data[ID_KEY] = RelayModernRecord.getDataID(record);\n    }\n\n    var inlineData = {};\n    var parentFragmentName = this._fragmentName;\n    this._fragmentName = fragmentSpreadOrFragment.name;\n\n    this._traverseSelections(fragmentSpreadOrFragment.selections, record, inlineData);\n\n    this._fragmentName = parentFragmentName; // $FlowFixMe[cannot-write] - writing into read-only field\n\n    fragmentPointers[fragmentSpreadOrFragment.name] = inlineData;\n  };\n\n  _proto._addMissingRequiredFields = function _addMissingRequiredFields(additional) {\n    if (this._missingRequiredFields == null) {\n      this._missingRequiredFields = additional;\n      return;\n    }\n\n    if (this._missingRequiredFields.action === 'THROW') {\n      return;\n    }\n\n    if (additional.action === 'THROW') {\n      this._missingRequiredFields = additional;\n      return;\n    }\n\n    this._missingRequiredFields = {\n      action: 'LOG',\n      fields: [].concat((0, _toConsumableArray2[\"default\"])(this._missingRequiredFields.fields), (0, _toConsumableArray2[\"default\"])(additional.fields))\n    };\n  };\n\n  return RelayReader;\n}();\n\nmodule.exports = {\n  read: read\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _global$ErrorUtils$ap, _global$ErrorUtils;\n\nvar RelayRecordSourceMutator = require('../mutations/RelayRecordSourceMutator');\n\nvar RelayRecordSourceProxy = require('../mutations/RelayRecordSourceProxy');\n\nvar RelayRecordSourceSelectorProxy = require('../mutations/RelayRecordSourceSelectorProxy');\n\nvar RelayReader = require('./RelayReader');\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\n\nvar applyWithGuard = (_global$ErrorUtils$ap = _global === null || _global === void 0 ? void 0 : (_global$ErrorUtils = _global.ErrorUtils) === null || _global$ErrorUtils === void 0 ? void 0 : _global$ErrorUtils.applyWithGuard) !== null && _global$ErrorUtils$ap !== void 0 ? _global$ErrorUtils$ap : function (callback, context, args, onError, name) {\n  return callback.apply(context, args);\n};\n/**\n * Coordinates the concurrent modification of a `Store` due to optimistic and\n * non-revertable client updates and server payloads:\n * - Applies optimistic updates.\n * - Reverts optimistic updates, rebasing any subsequent updates.\n * - Commits client updates (typically for client schema extensions).\n * - Commits server updates:\n *   - Normalizes query/mutation/subscription responses.\n *   - Executes handlers for \"handle\" fields.\n *   - Reverts and reapplies pending optimistic updates.\n */\n\nvar RelayPublishQueue = /*#__PURE__*/function () {\n  // True if the next `run()` should apply the backup and rerun all optimistic\n  // updates performing a rebase.\n  // Payloads to apply or Sources to publish to the store with the next `run()`.\n  // $FlowFixMe[unclear-type] See explanation below.\n  // Optimistic updaters to add with the next `run()`.\n  // $FlowFixMe[unclear-type] See explanation below.\n  // Optimistic updaters that are already added and might be rerun in order to\n  // rebase them.\n  // $FlowFixMe[unclear-type] See explanation below.\n  // For _pendingOptimisticUpdates, _appliedOptimisticUpdates, and _pendingData,\n  // we want to parametrize by \"any\" since the type is effectively\n  // \"the union of all T's that PublishQueue's methods were called with\".\n  // Garbage collection hold, should rerun gc on dispose\n  function RelayPublishQueue(store, handlerProvider, getDataID) {\n    this._hasStoreSnapshot = false;\n    this._handlerProvider = handlerProvider || null;\n    this._pendingBackupRebase = false;\n    this._pendingData = new Set();\n    this._pendingOptimisticUpdates = new Set();\n    this._store = store;\n    this._appliedOptimisticUpdates = new Set();\n    this._gcHold = null;\n    this._getDataID = getDataID;\n  }\n  /**\n   * Schedule applying an optimistic updates on the next `run()`.\n   */\n\n\n  var _proto = RelayPublishQueue.prototype;\n\n  _proto.applyUpdate = function applyUpdate(updater) {\n    !(!this._appliedOptimisticUpdates.has(updater) && !this._pendingOptimisticUpdates.has(updater)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayPublishQueue: Cannot apply the same update function more than ' + 'once concurrently.') : invariant(false) : void 0;\n\n    this._pendingOptimisticUpdates.add(updater);\n  }\n  /**\n   * Schedule reverting an optimistic updates on the next `run()`.\n   */\n  ;\n\n  _proto.revertUpdate = function revertUpdate(updater) {\n    if (this._pendingOptimisticUpdates.has(updater)) {\n      // Reverted before it was applied\n      this._pendingOptimisticUpdates[\"delete\"](updater);\n    } else if (this._appliedOptimisticUpdates.has(updater)) {\n      this._pendingBackupRebase = true;\n\n      this._appliedOptimisticUpdates[\"delete\"](updater);\n    }\n  }\n  /**\n   * Schedule a revert of all optimistic updates on the next `run()`.\n   */\n  ;\n\n  _proto.revertAll = function revertAll() {\n    this._pendingBackupRebase = true;\n\n    this._pendingOptimisticUpdates.clear();\n\n    this._appliedOptimisticUpdates.clear();\n  }\n  /**\n   * Schedule applying a payload to the store on the next `run()`.\n   */\n  ;\n\n  _proto.commitPayload = function commitPayload(operation, payload, updater) {\n    this._pendingBackupRebase = true;\n\n    this._pendingData.add({\n      kind: 'payload',\n      operation: operation,\n      payload: payload,\n      updater: updater\n    });\n  }\n  /**\n   * Schedule an updater to mutate the store on the next `run()` typically to\n   * update client schema fields.\n   */\n  ;\n\n  _proto.commitUpdate = function commitUpdate(updater) {\n    this._pendingBackupRebase = true;\n\n    this._pendingData.add({\n      kind: 'updater',\n      updater: updater\n    });\n  }\n  /**\n   * Schedule a publish to the store from the provided source on the next\n   * `run()`. As an example, to update the store with substituted fields that\n   * are missing in the store.\n   */\n  ;\n\n  _proto.commitSource = function commitSource(source) {\n    this._pendingBackupRebase = true;\n\n    this._pendingData.add({\n      kind: 'source',\n      source: source\n    });\n  }\n  /**\n   * Execute all queued up operations from the other public methods.\n   */\n  ;\n\n  _proto.run = function run(sourceOperation) {\n    var runWillClearGcHold = this._appliedOptimisticUpdates === 0 && !!this._gcHold;\n    var runIsANoop = // this._pendingBackupRebase is true if an applied optimistic\n    // update has potentially been reverted or if this._pendingData is not empty.\n    !this._pendingBackupRebase && this._pendingOptimisticUpdates.size === 0 && !runWillClearGcHold;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(!runIsANoop, 'RelayPublishQueue.run was called, but the call would have been a noop.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(this._isRunning !== true, 'A store update was detected within another store update. Please ' + \"make sure new store updates aren't being executed within an \" + 'updater function for a different update.') : void 0;\n      this._isRunning = true;\n    }\n\n    if (runIsANoop) {\n      if (process.env.NODE_ENV !== \"production\") {\n        this._isRunning = false;\n      }\n\n      return [];\n    }\n\n    if (this._pendingBackupRebase) {\n      if (this._hasStoreSnapshot) {\n        this._store.restore();\n\n        this._hasStoreSnapshot = false;\n      }\n    }\n\n    var invalidatedStore = this._commitData();\n\n    if (this._pendingOptimisticUpdates.size || this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n      if (!this._hasStoreSnapshot) {\n        this._store.snapshot();\n\n        this._hasStoreSnapshot = true;\n      }\n\n      this._applyUpdates();\n    }\n\n    this._pendingBackupRebase = false;\n\n    if (this._appliedOptimisticUpdates.size > 0) {\n      if (!this._gcHold) {\n        this._gcHold = this._store.holdGC();\n      }\n    } else {\n      if (this._gcHold) {\n        this._gcHold.dispose();\n\n        this._gcHold = null;\n      }\n    }\n\n    if (process.env.NODE_ENV !== \"production\") {\n      this._isRunning = false;\n    }\n\n    return this._store.notify(sourceOperation, invalidatedStore);\n  }\n  /**\n   * _publishSourceFromPayload will return a boolean indicating if the\n   * publish caused the store to be globally invalidated.\n   */\n  ;\n\n  _proto._publishSourceFromPayload = function _publishSourceFromPayload(pendingPayload) {\n    var _this = this;\n\n    var payload = pendingPayload.payload,\n        operation = pendingPayload.operation,\n        updater = pendingPayload.updater;\n    var source = payload.source,\n        fieldPayloads = payload.fieldPayloads;\n    var mutator = new RelayRecordSourceMutator(this._store.getSource(), source);\n    var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID);\n\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for ' + 'handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(recordSourceProxy, fieldPayload);\n      });\n    }\n\n    if (updater) {\n      var selector = operation.fragment;\n      !(selector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a selector to be provided with updater function.') : invariant(false) : void 0;\n      var recordSourceSelectorProxy = new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, selector);\n      var selectorData = lookupSelector(source, selector);\n      updater(recordSourceSelectorProxy, selectorData);\n    }\n\n    var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();\n\n    this._store.publish(source, idsMarkedForInvalidation);\n\n    return recordSourceProxy.isStoreMarkedForInvalidation();\n  }\n  /**\n   * _commitData will return a boolean indicating if any of\n   * the pending commits caused the store to be globally invalidated.\n   */\n  ;\n\n  _proto._commitData = function _commitData() {\n    var _this2 = this;\n\n    if (!this._pendingData.size) {\n      return false;\n    }\n\n    var invalidatedStore = false;\n\n    this._pendingData.forEach(function (data) {\n      if (data.kind === 'payload') {\n        var payloadInvalidatedStore = _this2._publishSourceFromPayload(data);\n\n        invalidatedStore = invalidatedStore || payloadInvalidatedStore;\n      } else if (data.kind === 'source') {\n        var source = data.source;\n\n        _this2._store.publish(source);\n      } else {\n        var updater = data.updater;\n        var sink = RelayRecordSource.create();\n        var mutator = new RelayRecordSourceMutator(_this2._store.getSource(), sink);\n        var recordSourceProxy = new RelayRecordSourceProxy(mutator, _this2._getDataID);\n        applyWithGuard(updater, null, [recordSourceProxy], null, 'RelayPublishQueue:commitData');\n        invalidatedStore = invalidatedStore || recordSourceProxy.isStoreMarkedForInvalidation();\n        var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();\n\n        _this2._store.publish(sink, idsMarkedForInvalidation);\n      }\n    });\n\n    this._pendingData.clear();\n\n    return invalidatedStore;\n  }\n  /**\n   * Note that unlike _commitData, _applyUpdates will NOT return a boolean\n   * indicating if the store was globally invalidated, since invalidating the\n   * store during an optimistic update is a no-op.\n   */\n  ;\n\n  _proto._applyUpdates = function _applyUpdates() {\n    var _this3 = this;\n\n    var sink = RelayRecordSource.create();\n    var mutator = new RelayRecordSourceMutator(this._store.getSource(), sink);\n    var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, this._handlerProvider); // $FlowFixMe[unclear-type] see explanation above.\n\n    var processUpdate = function processUpdate(optimisticUpdate) {\n      if (optimisticUpdate.storeUpdater) {\n        var storeUpdater = optimisticUpdate.storeUpdater;\n        applyWithGuard(storeUpdater, null, [recordSourceProxy], null, 'RelayPublishQueue:applyUpdates');\n      } else {\n        var operation = optimisticUpdate.operation,\n            payload = optimisticUpdate.payload,\n            updater = optimisticUpdate.updater;\n        var source = payload.source,\n            fieldPayloads = payload.fieldPayloads;\n\n        if (source) {\n          recordSourceProxy.publishSource(source, fieldPayloads);\n        }\n\n        if (updater) {\n          var selectorData;\n\n          if (source) {\n            selectorData = lookupSelector(source, operation.fragment);\n          }\n\n          var recordSourceSelectorProxy = new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, operation.fragment);\n          applyWithGuard(updater, null, [recordSourceSelectorProxy, selectorData], null, 'RelayPublishQueue:applyUpdates');\n        }\n      }\n    }; // rerun all updaters in case we are running a rebase\n\n\n    if (this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n      this._appliedOptimisticUpdates.forEach(processUpdate);\n    } // apply any new updaters\n\n\n    if (this._pendingOptimisticUpdates.size) {\n      this._pendingOptimisticUpdates.forEach(function (optimisticUpdate) {\n        processUpdate(optimisticUpdate);\n\n        _this3._appliedOptimisticUpdates.add(optimisticUpdate);\n      });\n\n      this._pendingOptimisticUpdates.clear();\n    }\n\n    this._store.publish(sink);\n  };\n\n  return RelayPublishQueue;\n}();\n\nfunction lookupSelector(source, selector) {\n  var selectorData = RelayReader.read(source, selector).data;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var deepFreeze = require('../util/deepFreeze');\n\n    if (selectorData) {\n      deepFreeze(selectorData);\n    }\n  }\n\n  return selectorData;\n}\n\nmodule.exports = RelayPublishQueue;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar inspect = function inspect() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  var formattersInstalled = false;\n  /**\n   * Installs a Chrome Developer Tools custom formatter for Relay proxy objects\n   * returned by StoreInspector.inspect.\n   *\n   * bit.ly/object-formatters\n   */\n\n  var installDevtoolFormatters = function installDevtoolFormatters() {\n    var _window$devtoolsForma;\n\n    if (formattersInstalled) {\n      return;\n    }\n\n    formattersInstalled = true;\n\n    if (window.devtoolsFormatters == null) {\n      window.devtoolsFormatters = [];\n    }\n\n    if (!Array.isArray(window.devtoolsFormatters)) {\n      return;\n    } // eslint-disable-next-line no-console\n\n\n    console.info('Make sure to select \"Enable custom formatters\" in the Chrome ' + 'Developer Tools settings, tab \"Preferences\" under the \"Console\" ' + 'section.');\n\n    (_window$devtoolsForma = window.devtoolsFormatters).push.apply(_window$devtoolsForma, (0, _toConsumableArray2[\"default\"])(createFormatters()));\n  };\n\n  var createFormatters = function createFormatters() {\n    var listStyle = {\n      style: 'list-style-type: none; padding: 0; margin: 0 0 0 12px; font-style: normal'\n    };\n    var keyStyle = {\n      style: 'rgb(136, 19, 145)'\n    };\n    var nullStyle = {\n      style: 'color: #777'\n    };\n\n    var reference = function reference(object, config) {\n      return object == null ? ['span', nullStyle, 'undefined'] : ['object', {\n        object: object,\n        config: config\n      }];\n    };\n\n    var renderRecordHeader = function renderRecordHeader(record) {\n      return ['span', {\n        style: 'font-style: italic'\n      }, record.__typename, ['span', nullStyle, ' {id: \"', record.__id, '\", \u2026}']];\n    };\n\n    var isRecord = function isRecord(o) {\n      return o != null && typeof o.__id === 'string';\n    };\n\n    var RecordEntry = function RecordEntry(key, value) {\n      this.key = key;\n      this.value = value;\n    };\n\n    var renderRecordEntries = function renderRecordEntries(record) {\n      var children = Object.keys(record).map(function (key) {\n        return ['li', {}, ['object', {\n          object: new RecordEntry(key, record[key])\n        }]];\n      });\n      return ['ol', listStyle].concat((0, _toConsumableArray2[\"default\"])(children));\n    };\n\n    var recordFormatter = {\n      header: function header(obj) {\n        if (!isRecord(obj)) {\n          return null;\n        }\n\n        return renderRecordHeader(obj);\n      },\n      hasBody: function hasBody(obj) {\n        return true;\n      },\n      body: function body(obj) {\n        return renderRecordEntries(obj);\n      }\n    };\n    var recordEntryFormatter = {\n      header: function header(obj) {\n        if (obj instanceof RecordEntry) {\n          var value = isRecord(obj.value) ? renderRecordHeader(obj.value) : reference(obj.value);\n          return ['span', keyStyle, obj.key, ': ', value];\n        }\n\n        return null;\n      },\n      hasBody: function hasBody(obj) {\n        return isRecord(obj.value);\n      },\n      body: function body(obj) {\n        return renderRecordEntries(obj.value);\n      }\n    };\n    return [recordFormatter, recordEntryFormatter];\n  };\n\n  var getWrappedRecord = function getWrappedRecord(source, dataID) {\n    var record = source.get(dataID);\n\n    if (record == null) {\n      return record;\n    }\n\n    return new Proxy((0, _objectSpread2[\"default\"])({}, record), {\n      get: function get(target, prop) {\n        var value = target[prop];\n\n        if (value == null) {\n          return value;\n        }\n\n        if (typeof value === 'object') {\n          if (typeof value.__ref === 'string') {\n            return getWrappedRecord(source, value.__ref);\n          }\n\n          if (Array.isArray(value.__refs)) {\n            // $FlowFixMe[incompatible-call]\n            return value.__refs.map(function (ref) {\n              return getWrappedRecord(source, ref);\n            });\n          }\n        }\n\n        return value;\n      }\n    });\n  };\n\n  inspect = function inspect(environment, dataID) {\n    installDevtoolFormatters();\n    return getWrappedRecord(environment.getStore().getSource(), dataID !== null && dataID !== void 0 ? dataID : 'client:root');\n  };\n}\n\nmodule.exports = {\n  inspect: inspect\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @emails oncall+relay\n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar RelayDefaultHandlerProvider = require('../handlers/RelayDefaultHandlerProvider');\n\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n    INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n    assertInternalActorIndentifier = _require.assertInternalActorIndentifier;\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar wrapNetworkWithLogObserver = require('../network/wrapNetworkWithLogObserver');\n\nvar RelayOperationTracker = require('../store/RelayOperationTracker');\n\nvar registerEnvironmentWithDevTools = require('../util/registerEnvironmentWithDevTools');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar defaultGetDataID = require('./defaultGetDataID');\n\nvar defaultRequiredFieldLogger = require('./defaultRequiredFieldLogger');\n\nvar OperationExecutor = require('./OperationExecutor');\n\nvar RelayPublishQueue = require('./RelayPublishQueue');\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar invariant = require('invariant');\n\nvar RelayModernEnvironment = /*#__PURE__*/function () {\n  function RelayModernEnvironment(config) {\n    var _this = this;\n\n    var _config$log, _config$requiredField, _config$UNSTABLE_defa, _config$getDataID, _config$handlerProvid, _config$scheduler, _config$isServer, _config$operationTrac;\n\n    this.configName = config.configName;\n    this._treatMissingFieldsAsNull = config.treatMissingFieldsAsNull === true;\n    var operationLoader = config.operationLoader;\n    var reactFlightPayloadDeserializer = config.reactFlightPayloadDeserializer;\n    var reactFlightServerErrorHandler = config.reactFlightServerErrorHandler;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (operationLoader != null) {\n        !(typeof operationLoader === 'object' && typeof operationLoader.get === 'function' && typeof operationLoader.load === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `operationLoader` to be an object ' + 'with get() and load() functions, got `%s`.', operationLoader) : invariant(false) : void 0;\n      }\n\n      if (reactFlightPayloadDeserializer != null) {\n        !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `reactFlightPayloadDeserializer` ' + ' to be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n      }\n    }\n\n    this.__log = (_config$log = config.log) !== null && _config$log !== void 0 ? _config$log : emptyFunction;\n    this.requiredFieldLogger = (_config$requiredField = config.requiredFieldLogger) !== null && _config$requiredField !== void 0 ? _config$requiredField : defaultRequiredFieldLogger;\n    this._defaultRenderPolicy = ((_config$UNSTABLE_defa = config.UNSTABLE_defaultRenderPolicy) !== null && _config$UNSTABLE_defa !== void 0 ? _config$UNSTABLE_defa : RelayFeatureFlags.ENABLE_PARTIAL_RENDERING_DEFAULT === true) ? 'partial' : 'full';\n    this._operationLoader = operationLoader;\n    this._operationExecutions = new Map();\n    this._network = wrapNetworkWithLogObserver(this, config.network);\n    this._getDataID = (_config$getDataID = config.getDataID) !== null && _config$getDataID !== void 0 ? _config$getDataID : defaultGetDataID;\n    this._publishQueue = new RelayPublishQueue(config.store, (_config$handlerProvid = config.handlerProvider) !== null && _config$handlerProvid !== void 0 ? _config$handlerProvid : RelayDefaultHandlerProvider, this._getDataID);\n    this._scheduler = (_config$scheduler = config.scheduler) !== null && _config$scheduler !== void 0 ? _config$scheduler : null;\n    this._store = config.store;\n    this.options = config.options;\n    this._isServer = (_config$isServer = config.isServer) !== null && _config$isServer !== void 0 ? _config$isServer : false;\n\n    this.__setNet = function (newNet) {\n      return _this._network = wrapNetworkWithLogObserver(_this, newNet);\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      var _require2 = require('./StoreInspector'),\n          inspect = _require2.inspect;\n\n      this.DEBUG_inspect = function (dataID) {\n        return inspect(_this, dataID);\n      };\n    }\n\n    this._missingFieldHandlers = config.missingFieldHandlers;\n    this._operationTracker = (_config$operationTrac = config.operationTracker) !== null && _config$operationTrac !== void 0 ? _config$operationTrac : new RelayOperationTracker();\n    this._reactFlightPayloadDeserializer = reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = config.shouldProcessClientComponents; // Register this Relay Environment with Relay DevTools if it exists.\n    // Note: this must always be the last step in the constructor.\n\n    registerEnvironmentWithDevTools(this);\n  }\n\n  var _proto = RelayModernEnvironment.prototype;\n\n  _proto.getStore = function getStore() {\n    return this._store;\n  };\n\n  _proto.getNetwork = function getNetwork() {\n    return this._network;\n  };\n\n  _proto.getOperationTracker = function getOperationTracker() {\n    return this._operationTracker;\n  };\n\n  _proto.isRequestActive = function isRequestActive(requestIdentifier) {\n    var activeState = this._operationExecutions.get(requestIdentifier);\n\n    return activeState === 'active';\n  };\n\n  _proto.UNSTABLE_getDefaultRenderPolicy = function UNSTABLE_getDefaultRenderPolicy() {\n    return this._defaultRenderPolicy;\n  };\n\n  _proto.applyUpdate = function applyUpdate(optimisticUpdate) {\n    var _this2 = this;\n\n    var dispose = function dispose() {\n      _this2._scheduleUpdates(function () {\n        _this2._publishQueue.revertUpdate(optimisticUpdate);\n\n        _this2._publishQueue.run();\n      });\n    };\n\n    this._scheduleUpdates(function () {\n      _this2._publishQueue.applyUpdate(optimisticUpdate);\n\n      _this2._publishQueue.run();\n    });\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.revertUpdate = function revertUpdate(update) {\n    var _this3 = this;\n\n    this._scheduleUpdates(function () {\n      _this3._publishQueue.revertUpdate(update);\n\n      _this3._publishQueue.run();\n    });\n  };\n\n  _proto.replaceUpdate = function replaceUpdate(update, newUpdate) {\n    var _this4 = this;\n\n    this._scheduleUpdates(function () {\n      _this4._publishQueue.revertUpdate(update);\n\n      _this4._publishQueue.applyUpdate(newUpdate);\n\n      _this4._publishQueue.run();\n    });\n  };\n\n  _proto.applyMutation = function applyMutation(optimisticConfig) {\n    var subscription = this._execute({\n      createSource: function createSource() {\n        return RelayObservable.create(function (_sink) {});\n      },\n      isClientPayload: false,\n      operation: optimisticConfig.operation,\n      optimisticConfig: optimisticConfig,\n      updater: null\n    }).subscribe({});\n\n    return {\n      dispose: function dispose() {\n        return subscription.unsubscribe();\n      }\n    };\n  };\n\n  _proto.check = function check(operation) {\n    if (this._missingFieldHandlers == null || this._missingFieldHandlers.length === 0) {\n      return this._store.check(operation);\n    }\n\n    return this._checkSelectorAndHandleMissingFields(operation, this._missingFieldHandlers);\n  };\n\n  _proto.commitPayload = function commitPayload(operation, payload) {\n    this._execute({\n      createSource: function createSource() {\n        return RelayObservable.from({\n          data: payload\n        });\n      },\n      isClientPayload: true,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    }).subscribe({});\n  };\n\n  _proto.commitUpdate = function commitUpdate(updater) {\n    var _this5 = this;\n\n    this._scheduleUpdates(function () {\n      _this5._publishQueue.commitUpdate(updater);\n\n      _this5._publishQueue.run();\n    });\n  };\n\n  _proto.lookup = function lookup(readSelector) {\n    return this._store.lookup(readSelector);\n  };\n\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._store.subscribe(snapshot, callback);\n  };\n\n  _proto.retain = function retain(operation) {\n    return this._store.retain(operation);\n  };\n\n  _proto.isServer = function isServer() {\n    return this._isServer;\n  };\n\n  _proto._checkSelectorAndHandleMissingFields = function _checkSelectorAndHandleMissingFields(operation, handlers) {\n    var _this6 = this;\n\n    var target = RelayRecordSource.create();\n\n    var source = this._store.getSource();\n\n    var result = this._store.check(operation, {\n      handlers: handlers,\n      defaultActorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n      getSourceForActor: function getSourceForActor(actorIdentifier) {\n        assertInternalActorIndentifier(actorIdentifier);\n        return source;\n      },\n      getTargetForActor: function getTargetForActor(actorIdentifier) {\n        assertInternalActorIndentifier(actorIdentifier);\n        return target;\n      }\n    });\n\n    if (target.size() > 0) {\n      this._scheduleUpdates(function () {\n        _this6._publishQueue.commitSource(target);\n\n        _this6._publishQueue.run();\n      });\n    }\n\n    return result;\n  };\n\n  _proto._scheduleUpdates = function _scheduleUpdates(task) {\n    var scheduler = this._scheduler;\n\n    if (scheduler != null) {\n      scheduler.schedule(task);\n    } else {\n      task();\n    }\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.execute = function execute(_ref) {\n    var _this7 = this;\n\n    var operation = _ref.operation;\n    return this._execute({\n      createSource: function createSource() {\n        return _this7.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Subscription operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeSubscription = function executeSubscription(_ref2) {\n    var _this8 = this;\n\n    var operation = _ref2.operation,\n        updater = _ref2.updater;\n    return this._execute({\n      createSource: function createSource() {\n        return _this8.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: updater\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Mutation operation, the result of which is then normalized and\n   * committed to the publish queue along with an optional optimistic response\n   * or updater.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeMutation({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeMutation = function executeMutation(_ref3) {\n    var _this9 = this;\n\n    var operation = _ref3.operation,\n        optimisticResponse = _ref3.optimisticResponse,\n        optimisticUpdater = _ref3.optimisticUpdater,\n        updater = _ref3.updater,\n        uploadables = _ref3.uploadables;\n    var optimisticConfig;\n\n    if (optimisticResponse || optimisticUpdater) {\n      optimisticConfig = {\n        operation: operation,\n        response: optimisticResponse,\n        updater: optimisticUpdater\n      };\n    }\n\n    return this._execute({\n      createSource: function createSource() {\n        return _this9.getNetwork().execute(operation.request.node.params, operation.request.variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, operation.request.cacheConfig), {}, {\n          force: true\n        }), uploadables);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: optimisticConfig,\n      updater: updater\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation responses, the result of which is\n   * then normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeWithSource({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeWithSource = function executeWithSource(_ref4) {\n    var operation = _ref4.operation,\n        source = _ref4.source;\n    return this._execute({\n      createSource: function createSource() {\n        return source;\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this$configName;\n\n    return \"RelayModernEnvironment(\".concat((_this$configName = this.configName) !== null && _this$configName !== void 0 ? _this$configName : '', \")\");\n  };\n\n  _proto._execute = function _execute(_ref5) {\n    var _this10 = this;\n\n    var createSource = _ref5.createSource,\n        isClientPayload = _ref5.isClientPayload,\n        operation = _ref5.operation,\n        optimisticConfig = _ref5.optimisticConfig,\n        updater = _ref5.updater;\n    var publishQueue = this._publishQueue;\n    var store = this._store;\n    return RelayObservable.create(function (sink) {\n      var executor = OperationExecutor.execute({\n        actorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n        getDataID: _this10._getDataID,\n        isClientPayload: isClientPayload,\n        log: _this10.__log,\n        operation: operation,\n        operationExecutions: _this10._operationExecutions,\n        operationLoader: _this10._operationLoader,\n        operationTracker: _this10._operationTracker,\n        optimisticConfig: optimisticConfig,\n        getPublishQueue: function getPublishQueue(actorIdentifier) {\n          assertInternalActorIndentifier(actorIdentifier);\n          return publishQueue;\n        },\n        reactFlightPayloadDeserializer: _this10._reactFlightPayloadDeserializer,\n        reactFlightServerErrorHandler: _this10._reactFlightServerErrorHandler,\n        scheduler: _this10._scheduler,\n        shouldProcessClientComponents: _this10._shouldProcessClientComponents,\n        sink: sink,\n        // NOTE: Some product tests expect `Network.execute` to be called only\n        //       when the Observable is executed.\n        source: createSource(),\n        getStore: function getStore(actorIdentifier) {\n          assertInternalActorIndentifier(actorIdentifier);\n          return store;\n        },\n        treatMissingFieldsAsNull: _this10._treatMissingFieldsAsNull,\n        updater: updater\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  };\n\n  return RelayModernEnvironment;\n}(); // Add a sigil for detection by `isRelayModernEnvironment()` to avoid a\n// realm-specific instanceof check, and to aid in module tree-shaking to\n// avoid requiring all of RelayRuntime just to detect its environment.\n\n\nRelayModernEnvironment.prototype['@@RelayModernEnvironment'] = true;\n\nfunction emptyFunction() {}\n\nmodule.exports = RelayModernEnvironment;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar resolvedPromise = Promise.resolve();\n/**\n * An alternative to setImmediate based on Promise.\n */\n\nfunction resolveImmediate(callback) {\n  resolvedPromise.then(callback)[\"catch\"](throwNext);\n}\n\nfunction throwNext(error) {\n  setTimeout(function () {\n    throw error;\n  }, 0);\n}\n\nmodule.exports = resolveImmediate;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../util/RelayConcreteNode'),\n    LINKED_FIELD = _require.LINKED_FIELD;\n\nvar _require2 = require('./RelayStoreUtils'),\n    getHandleStorageKey = _require2.getHandleStorageKey;\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\n\nvar invariant = require('invariant');\n/**\n * @private\n *\n * Creates a clone of the supplied `handleField` by finding the original linked\n * field (on which the handle was declared) among the sibling `selections`, and\n * copying its selections into the clone.\n */\n\n\nfunction cloneRelayHandleSourceField(handleField, selections, variables) {\n  var sourceField = selections.find(function (source) {\n    return source.kind === LINKED_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);\n  });\n  !(sourceField && sourceField.kind === LINKED_FIELD) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'cloneRelayHandleSourceField: Expected a corresponding source field for ' + 'handle `%s`.', handleField.handle) : invariant(false) : void 0;\n  var handleKey = getHandleStorageKey(handleField, variables);\n  return {\n    kind: 'LinkedField',\n    alias: sourceField.alias,\n    name: handleKey,\n    storageKey: handleKey,\n    args: null,\n    concreteType: sourceField.concreteType,\n    plural: sourceField.plural,\n    selections: sourceField.selections\n  };\n}\n\nmodule.exports = cloneRelayHandleSourceField;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../util/RelayConcreteNode'),\n    SCALAR_FIELD = _require.SCALAR_FIELD;\n\nvar _require2 = require('./RelayStoreUtils'),\n    getHandleStorageKey = _require2.getHandleStorageKey;\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\n\nvar invariant = require('invariant');\n/**\n * @private\n *\n * Creates a clone of the supplied `handleField` by finding the original scalar\n * field (on which the handle was declared) among the sibling `selections`.\n */\n\n\nfunction cloneRelayScalarHandleSourceField(handleField, selections, variables) {\n  var sourceField = selections.find(function (source) {\n    return source.kind === SCALAR_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);\n  });\n  !(sourceField && sourceField.kind === SCALAR_FIELD) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'cloneRelayScalarHandleSourceField: Expected a corresponding source field for ' + 'handle `%s`.', handleField.handle) : invariant(false) : void 0;\n  var handleKey = getHandleStorageKey(handleField, variables);\n  return {\n    kind: 'ScalarField',\n    alias: sourceField.alias,\n    name: handleKey,\n    storageKey: handleKey,\n    args: null\n  };\n}\n\nmodule.exports = cloneRelayScalarHandleSourceField;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar RelayRecordSourceMutator = require('../mutations/RelayRecordSourceMutator');\n\nvar RelayRecordSourceProxy = require('../mutations/RelayRecordSourceProxy');\n\nvar getOperation = require('../util/getOperation');\n\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar _require = require('./ClientID'),\n    isClientID = _require.isClientID;\n\nvar cloneRelayHandleSourceField = require('./cloneRelayHandleSourceField');\n\nvar cloneRelayScalarHandleSourceField = require('./cloneRelayScalarHandleSourceField');\n\nvar _require2 = require('./RelayConcreteVariables'),\n    getLocalVariables = _require2.getLocalVariables;\n\nvar RelayModernRecord = require('./RelayModernRecord');\n\nvar _require3 = require('./RelayRecordState'),\n    EXISTENT = _require3.EXISTENT,\n    UNKNOWN = _require3.UNKNOWN;\n\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\n\nvar RelayStoreUtils = require('./RelayStoreUtils');\n\nvar _require4 = require('./TypeID'),\n    generateTypeID = _require4.generateTypeID;\n\nvar invariant = require('invariant');\n\nvar ACTOR_CHANGE = RelayConcreteNode.ACTOR_CHANGE,\n    CONDITION = RelayConcreteNode.CONDITION,\n    CLIENT_COMPONENT = RelayConcreteNode.CLIENT_COMPONENT,\n    CLIENT_EXTENSION = RelayConcreteNode.CLIENT_EXTENSION,\n    DEFER = RelayConcreteNode.DEFER,\n    FLIGHT_FIELD = RelayConcreteNode.FLIGHT_FIELD,\n    FRAGMENT_SPREAD = RelayConcreteNode.FRAGMENT_SPREAD,\n    INLINE_FRAGMENT = RelayConcreteNode.INLINE_FRAGMENT,\n    LINKED_FIELD = RelayConcreteNode.LINKED_FIELD,\n    LINKED_HANDLE = RelayConcreteNode.LINKED_HANDLE,\n    MODULE_IMPORT = RelayConcreteNode.MODULE_IMPORT,\n    SCALAR_FIELD = RelayConcreteNode.SCALAR_FIELD,\n    SCALAR_HANDLE = RelayConcreteNode.SCALAR_HANDLE,\n    STREAM = RelayConcreteNode.STREAM,\n    TYPE_DISCRIMINATOR = RelayConcreteNode.TYPE_DISCRIMINATOR;\nvar ROOT_ID = RelayStoreUtils.ROOT_ID,\n    getModuleOperationKey = RelayStoreUtils.getModuleOperationKey,\n    getStorageKey = RelayStoreUtils.getStorageKey,\n    getArgumentValues = RelayStoreUtils.getArgumentValues;\n/**\n * Synchronously check whether the records required to fulfill the given\n * `selector` are present in `source`.\n *\n * If a field is missing, it uses the provided handlers to attempt to substitute\n * data. The `target` will store all records that are modified because of a\n * successful substitution.\n *\n * If all records are present, returns `true`, otherwise `false`.\n */\n\nfunction check(getSourceForActor, getTargetForActor, defaultActorIdentifier, selector, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n  var dataID = selector.dataID,\n      node = selector.node,\n      variables = selector.variables;\n  var checker = new DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents);\n  return checker.check(node, dataID);\n}\n/**\n * @private\n */\n\n\nvar DataChecker = /*#__PURE__*/function () {\n  function DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n    this._getSourceForActor = getSourceForActor;\n    this._getTargetForActor = getTargetForActor;\n    this._getDataID = getDataID;\n    this._source = getSourceForActor(defaultActorIdentifier);\n    this._mutatorRecordSourceProxyCache = new Map();\n\n    var _this$_getMutatorAndR = this._getMutatorAndRecordProxyForActor(defaultActorIdentifier),\n        mutator = _this$_getMutatorAndR[0],\n        recordSourceProxy = _this$_getMutatorAndR[1];\n\n    this._mostRecentlyInvalidatedAt = null;\n    this._handlers = handlers;\n    this._mutator = mutator;\n    this._operationLoader = operationLoader !== null && operationLoader !== void 0 ? operationLoader : null;\n    this._recordSourceProxy = recordSourceProxy;\n    this._recordWasMissing = false;\n    this._variables = variables;\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n  }\n\n  var _proto = DataChecker.prototype;\n\n  _proto._getMutatorAndRecordProxyForActor = function _getMutatorAndRecordProxyForActor(actorIdentifier) {\n    var tuple = this._mutatorRecordSourceProxyCache.get(actorIdentifier);\n\n    if (tuple == null) {\n      var target = this._getTargetForActor(actorIdentifier);\n\n      var mutator = new RelayRecordSourceMutator(this._getSourceForActor(actorIdentifier), target);\n      var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID);\n      tuple = [mutator, recordSourceProxy];\n\n      this._mutatorRecordSourceProxyCache.set(actorIdentifier, tuple);\n    }\n\n    return tuple;\n  };\n\n  _proto.check = function check(node, dataID) {\n    this._traverse(node, dataID);\n\n    return this._recordWasMissing === true ? {\n      status: 'missing',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    } : {\n      status: 'available',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    };\n  };\n\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n\n  _proto._handleMissing = function _handleMissing() {\n    this._recordWasMissing = true;\n  };\n\n  _proto._getDataForHandlers = function _getDataForHandlers(field, dataID) {\n    return {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      args: field.args ? getArgumentValues(field.args, this._variables) : {},\n      // Getting a snapshot of the record state is potentially expensive since\n      // we will need to merge the sink and source records. Since we do not create\n      // any new records in this process, it is probably reasonable to provide\n      // handlers with a copy of the source record.\n      // The only thing that the provided record will not contain is fields\n      // added by previous handlers.\n      record: this._source.get(dataID)\n    };\n  };\n\n  _proto._handleMissingScalarField = function _handleMissingScalarField(field, dataID) {\n    if (field.name === 'id' && field.alias == null && isClientID(dataID)) {\n      return undefined;\n    }\n\n    var _this$_getDataForHand = this._getDataForHandlers(field, dataID),\n        args = _this$_getDataForHand.args,\n        record = _this$_getDataForHand.record;\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var handler = _step.value;\n\n        if (handler.kind === 'scalar') {\n          var newValue = handler.handle(field, record, args, this._recordSourceProxy);\n\n          if (newValue !== undefined) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    this._handleMissing();\n  };\n\n  _proto._handleMissingLinkField = function _handleMissingLinkField(field, dataID) {\n    var _this$_getDataForHand2 = this._getDataForHandlers(field, dataID),\n        args = _this$_getDataForHand2.args,\n        record = _this$_getDataForHand2.record;\n\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var handler = _step2.value;\n\n        if (handler.kind === 'linked') {\n          var newValue = handler.handle(field, record, args, this._recordSourceProxy);\n\n          if (newValue !== undefined && (newValue === null || this._mutator.getStatus(newValue) === EXISTENT)) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    this._handleMissing();\n  };\n\n  _proto._handleMissingPluralLinkField = function _handleMissingPluralLinkField(field, dataID) {\n    var _this = this;\n\n    var _this$_getDataForHand3 = this._getDataForHandlers(field, dataID),\n        args = _this$_getDataForHand3.args,\n        record = _this$_getDataForHand3.record;\n\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var handler = _step3.value;\n\n        if (handler.kind === 'pluralLinked') {\n          var newValue = handler.handle(field, record, args, this._recordSourceProxy);\n\n          if (newValue != null) {\n            var allItemsKnown = newValue.every(function (linkedID) {\n              return linkedID != null && _this._mutator.getStatus(linkedID) === EXISTENT;\n            });\n\n            if (allItemsKnown) {\n              return newValue;\n            }\n          } else if (newValue === null) {\n            return null;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    this._handleMissing();\n  };\n\n  _proto._traverse = function _traverse(node, dataID) {\n    var status = this._mutator.getStatus(dataID);\n\n    if (status === UNKNOWN) {\n      this._handleMissing();\n    }\n\n    if (status === EXISTENT) {\n      var record = this._source.get(dataID);\n\n      var invalidatedAt = RelayModernRecord.getInvalidationEpoch(record);\n\n      if (invalidatedAt != null) {\n        this._mostRecentlyInvalidatedAt = this._mostRecentlyInvalidatedAt != null ? Math.max(this._mostRecentlyInvalidatedAt, invalidatedAt) : invalidatedAt;\n      }\n\n      this._traverseSelections(node.selections, dataID);\n    }\n  };\n\n  _proto._traverseSelections = function _traverseSelections(selections, dataID) {\n    var _this2 = this;\n\n    selections.forEach(function (selection) {\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n          _this2._checkScalar(selection, dataID);\n\n          break;\n\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this2._checkPluralLink(selection, dataID);\n          } else {\n            _this2._checkLink(selection, dataID);\n          }\n\n          break;\n\n        case ACTOR_CHANGE:\n          _this2._checkActorChange(selection.linkedField, dataID);\n\n          break;\n\n        case CONDITION:\n          var conditionValue = Boolean(_this2._getVariableValue(selection.condition));\n\n          if (conditionValue === selection.passingValue) {\n            _this2._traverseSelections(selection.selections, dataID);\n          }\n\n          break;\n\n        case INLINE_FRAGMENT:\n          {\n            var _abstractKey = selection.abstractKey;\n\n            if (_abstractKey == null) {\n              // concrete type refinement: only check data if the type exactly matches\n              var typeName = _this2._mutator.getType(dataID);\n\n              if (typeName === selection.type) {\n                _this2._traverseSelections(selection.selections, dataID);\n              }\n            } else {\n              // Abstract refinement: check data depending on whether the type\n              // conforms to the interface/union or not:\n              // - Type known to _not_ implement the interface: don't check the selections.\n              // - Type is known _to_ implement the interface: check selections.\n              // - Unknown whether the type implements the interface: don't check the selections\n              //   and treat the data as missing; we do this because the Relay Compiler\n              //   guarantees that the type discriminator will always be fetched.\n              var _recordType = _this2._mutator.getType(dataID);\n\n              !(_recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n\n              var _typeID = generateTypeID(_recordType);\n\n              var _implementsInterface = _this2._mutator.getValue(_typeID, _abstractKey);\n\n              if (_implementsInterface === true) {\n                _this2._traverseSelections(selection.selections, dataID);\n              } else if (_implementsInterface == null) {\n                // unsure if the type implements the interface: data is\n                // missing so don't bother reading the fragment\n                _this2._handleMissing();\n              } // else false: known to not implement the interface\n\n            }\n\n            break;\n          }\n\n        case LINKED_HANDLE:\n          {\n            // Handles have no selections themselves; traverse the original field\n            // where the handle was set-up instead.\n            var handleField = cloneRelayHandleSourceField(selection, selections, _this2._variables);\n\n            if (handleField.plural) {\n              _this2._checkPluralLink(handleField, dataID);\n            } else {\n              _this2._checkLink(handleField, dataID);\n            }\n\n            break;\n          }\n\n        case SCALAR_HANDLE:\n          {\n            var _handleField = cloneRelayScalarHandleSourceField(selection, selections, _this2._variables);\n\n            _this2._checkScalar(_handleField, dataID);\n\n            break;\n          }\n\n        case MODULE_IMPORT:\n          _this2._checkModuleImport(selection, dataID);\n\n          break;\n\n        case DEFER:\n        case STREAM:\n          _this2._traverseSelections(selection.selections, dataID);\n\n          break;\n\n        case FRAGMENT_SPREAD:\n          var prevVariables = _this2._variables;\n          _this2._variables = getLocalVariables(_this2._variables, selection.fragment.argumentDefinitions, selection.args);\n\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n\n          _this2._variables = prevVariables;\n          break;\n\n        case CLIENT_EXTENSION:\n          var recordWasMissing = _this2._recordWasMissing;\n\n          _this2._traverseSelections(selection.selections, dataID);\n\n          _this2._recordWasMissing = recordWasMissing;\n          break;\n\n        case TYPE_DISCRIMINATOR:\n          var abstractKey = selection.abstractKey;\n\n          var recordType = _this2._mutator.getType(dataID);\n\n          !(recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n          var typeID = generateTypeID(recordType);\n\n          var implementsInterface = _this2._mutator.getValue(typeID, abstractKey);\n\n          if (implementsInterface == null) {\n            // unsure if the type implements the interface: data is\n            // missing\n            _this2._handleMissing();\n          } // else: if it does or doesn't implement, we don't need to check or skip anything else\n\n\n          break;\n\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            _this2._checkFlightField(selection, dataID);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n\n          break;\n\n        case CLIENT_COMPONENT:\n          if (_this2._shouldProcessClientComponents === false) {\n            break;\n          }\n\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n\n          break;\n\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    });\n  };\n\n  _proto._checkModuleImport = function _checkModuleImport(moduleImport, dataID) {\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using `@module`.') : invariant(false) : void 0;\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n\n    var operationReference = this._mutator.getValue(dataID, operationKey);\n\n    if (operationReference == null) {\n      if (operationReference === undefined) {\n        this._handleMissing();\n      }\n\n      return;\n    }\n\n    var normalizationRootNode = operationLoader.get(operationReference);\n\n    if (normalizationRootNode != null) {\n      var operation = getOperation(normalizationRootNode);\n      var prevVariables = this._variables;\n      this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args);\n\n      this._traverse(operation, dataID);\n\n      this._variables = prevVariables;\n    } else {\n      // If the fragment is not available, we assume that the data cannot have been\n      // processed yet and must therefore be missing.\n      this._handleMissing();\n    }\n  };\n\n  _proto._checkScalar = function _checkScalar(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n\n    var fieldValue = this._mutator.getValue(dataID, storageKey);\n\n    if (fieldValue === undefined) {\n      fieldValue = this._handleMissingScalarField(field, dataID);\n\n      if (fieldValue !== undefined) {\n        this._mutator.setValue(dataID, storageKey, fieldValue);\n      }\n    }\n  };\n\n  _proto._checkLink = function _checkLink(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n\n    if (linkedID === undefined) {\n      linkedID = this._handleMissingLinkField(field, dataID);\n\n      if (linkedID != null) {\n        this._mutator.setLinkedRecordID(dataID, storageKey, linkedID);\n      } else if (linkedID === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n\n    if (linkedID != null) {\n      this._traverse(field, linkedID);\n    }\n  };\n\n  _proto._checkPluralLink = function _checkPluralLink(field, dataID) {\n    var _this3 = this;\n\n    var storageKey = getStorageKey(field, this._variables);\n\n    var linkedIDs = this._mutator.getLinkedRecordIDs(dataID, storageKey);\n\n    if (linkedIDs === undefined) {\n      linkedIDs = this._handleMissingPluralLinkField(field, dataID);\n\n      if (linkedIDs != null) {\n        this._mutator.setLinkedRecordIDs(dataID, storageKey, linkedIDs);\n      } else if (linkedIDs === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n\n    if (linkedIDs) {\n      linkedIDs.forEach(function (linkedID) {\n        if (linkedID != null) {\n          _this3._traverse(field, linkedID);\n        }\n      });\n    }\n  };\n\n  _proto._checkActorChange = function _checkActorChange(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n\n    var record = this._source.get(dataID);\n\n    var tuple = record != null ? RelayModernRecord.getActorLinkedRecordID(record, storageKey) : record;\n\n    if (tuple == null) {\n      if (tuple === undefined) {\n        this._handleMissing();\n      }\n    } else {\n      var _actorIdentifier = tuple[0],\n          linkedID = tuple[1];\n      var prevSource = this._source;\n      var prevMutator = this._mutator;\n      var prevRecordSourceProxy = this._recordSourceProxy;\n\n      var _this$_getMutatorAndR2 = this._getMutatorAndRecordProxyForActor(_actorIdentifier),\n          mutator = _this$_getMutatorAndR2[0],\n          recordSourceProxy = _this$_getMutatorAndR2[1];\n\n      this._source = this._getSourceForActor(_actorIdentifier);\n      this._mutator = mutator;\n      this._recordSourceProxy = recordSourceProxy;\n\n      this._traverse(field, linkedID);\n\n      this._source = prevSource;\n      this._mutator = prevMutator;\n      this._recordSourceProxy = prevRecordSourceProxy;\n    }\n  };\n\n  _proto._checkFlightField = function _checkFlightField(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n\n    if (linkedID == null) {\n      if (linkedID === undefined) {\n        this._handleMissing();\n\n        return;\n      }\n\n      return;\n    }\n\n    var tree = this._mutator.getValue(linkedID, RelayStoreReactFlightUtils.REACT_FLIGHT_TREE_STORAGE_KEY);\n\n    var reachableExecutableDefinitions = this._mutator.getValue(linkedID, RelayStoreReactFlightUtils.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY);\n\n    if (tree == null || !Array.isArray(reachableExecutableDefinitions)) {\n      this._handleMissing();\n\n      return;\n    }\n\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using ' + 'React Flight.') : invariant(false) : void 0; // In Flight, the variables that are in scope for reachable executable\n    // definitions aren't the same as what's in scope for the outer query.\n\n    var prevVariables = this._variables; // $FlowFixMe[incompatible-cast]\n\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(reachableExecutableDefinitions),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var definition = _step4.value;\n        this._variables = definition.variables;\n        var normalizationRootNode = operationLoader.get(definition.module);\n\n        if (normalizationRootNode != null) {\n          var operation = getOperation(normalizationRootNode);\n\n          this._traverseSelections(operation.selections, ROOT_ID);\n        } else {\n          // If the fragment is not available, we assume that the data cannot have\n          // been processed yet and must therefore be missing.\n          this._handleMissing();\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    this._variables = prevVariables;\n  };\n\n  return DataChecker;\n}();\n\nmodule.exports = {\n  check: check\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\n\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n\n  var _proto = RelayOptimisticRecordSource.prototype;\n\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n\n    this._sink.clear();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n\n    var merged = (0, _objectSpread2[\"default\"])({}, this._base.toJSON());\n\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n\n    return merged;\n  };\n\n  return RelayOptimisticRecordSource;\n}();\n\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\n\nmodule.exports = {\n  create: create\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar getOperation = require('../util/getOperation');\n\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar cloneRelayHandleSourceField = require('./cloneRelayHandleSourceField');\n\nvar _require = require('./RelayConcreteVariables'),\n    getLocalVariables = _require.getLocalVariables;\n\nvar RelayModernRecord = require('./RelayModernRecord');\n\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\n\nvar RelayStoreUtils = require('./RelayStoreUtils');\n\nvar _require2 = require('./TypeID'),\n    generateTypeID = _require2.generateTypeID;\n\nvar invariant = require('invariant');\n\nvar ACTOR_CHANGE = RelayConcreteNode.ACTOR_CHANGE,\n    CONDITION = RelayConcreteNode.CONDITION,\n    CLIENT_COMPONENT = RelayConcreteNode.CLIENT_COMPONENT,\n    CLIENT_EXTENSION = RelayConcreteNode.CLIENT_EXTENSION,\n    DEFER = RelayConcreteNode.DEFER,\n    FLIGHT_FIELD = RelayConcreteNode.FLIGHT_FIELD,\n    FRAGMENT_SPREAD = RelayConcreteNode.FRAGMENT_SPREAD,\n    INLINE_FRAGMENT = RelayConcreteNode.INLINE_FRAGMENT,\n    LINKED_FIELD = RelayConcreteNode.LINKED_FIELD,\n    MODULE_IMPORT = RelayConcreteNode.MODULE_IMPORT,\n    LINKED_HANDLE = RelayConcreteNode.LINKED_HANDLE,\n    SCALAR_FIELD = RelayConcreteNode.SCALAR_FIELD,\n    SCALAR_HANDLE = RelayConcreteNode.SCALAR_HANDLE,\n    STREAM = RelayConcreteNode.STREAM,\n    TYPE_DISCRIMINATOR = RelayConcreteNode.TYPE_DISCRIMINATOR;\nvar ROOT_ID = RelayStoreUtils.ROOT_ID,\n    getStorageKey = RelayStoreUtils.getStorageKey,\n    getModuleOperationKey = RelayStoreUtils.getModuleOperationKey;\n\nfunction mark(recordSource, selector, references, operationLoader, shouldProcessClientComponents) {\n  var dataID = selector.dataID,\n      node = selector.node,\n      variables = selector.variables;\n  var marker = new RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents);\n  marker.mark(node, dataID);\n}\n/**\n * @private\n */\n\n\nvar RelayReferenceMarker = /*#__PURE__*/function () {\n  function RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents) {\n    this._operationLoader = operationLoader !== null && operationLoader !== void 0 ? operationLoader : null;\n    this._operationName = null;\n    this._recordSource = recordSource;\n    this._references = references;\n    this._variables = variables;\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n  }\n\n  var _proto = RelayReferenceMarker.prototype;\n\n  _proto.mark = function mark(node, dataID) {\n    if (node.kind === 'Operation' || node.kind === 'SplitOperation') {\n      this._operationName = node.name;\n    }\n\n    this._traverse(node, dataID);\n  };\n\n  _proto._traverse = function _traverse(node, dataID) {\n    this._references.add(dataID);\n\n    var record = this._recordSource.get(dataID);\n\n    if (record == null) {\n      return;\n    }\n\n    this._traverseSelections(node.selections, record);\n  };\n\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n\n  _proto._traverseSelections = function _traverseSelections(selections, record) {\n    var _this = this;\n\n    selections.forEach(function (selection) {\n      /* eslint-disable no-fallthrough */\n      switch (selection.kind) {\n        case ACTOR_CHANGE:\n          // TODO: T89695151 Support multi-actor record sources in RelayReferenceMarker.js\n          _this._traverseLink(selection.linkedField, record);\n\n          break;\n\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this._traversePluralLink(selection, record);\n          } else {\n            _this._traverseLink(selection, record);\n          }\n\n          break;\n\n        case CONDITION:\n          var conditionValue = Boolean(_this._getVariableValue(selection.condition));\n\n          if (conditionValue === selection.passingValue) {\n            _this._traverseSelections(selection.selections, record);\n          }\n\n          break;\n\n        case INLINE_FRAGMENT:\n          if (selection.abstractKey == null) {\n            var typeName = RelayModernRecord.getType(record);\n\n            if (typeName != null && typeName === selection.type) {\n              _this._traverseSelections(selection.selections, record);\n            }\n          } else {\n            var _typeName = RelayModernRecord.getType(record);\n\n            var typeID = generateTypeID(_typeName);\n\n            _this._references.add(typeID);\n\n            _this._traverseSelections(selection.selections, record);\n          }\n\n          break;\n\n        case FRAGMENT_SPREAD:\n          var prevVariables = _this._variables;\n          _this._variables = getLocalVariables(_this._variables, selection.fragment.argumentDefinitions, selection.args);\n\n          _this._traverseSelections(selection.fragment.selections, record);\n\n          _this._variables = prevVariables;\n          break;\n\n        case LINKED_HANDLE:\n          // The selections for a \"handle\" field are the same as those of the\n          // original linked field where the handle was applied. Reference marking\n          // therefore requires traversing the original field selections against\n          // the synthesized client field.\n          //\n          // TODO: Instead of finding the source field in `selections`, change\n          // the concrete structure to allow shared subtrees, and have the linked\n          // handle directly refer to the same selections as the LinkedField that\n          // it was split from.\n          var handleField = cloneRelayHandleSourceField(selection, selections, _this._variables);\n\n          if (handleField.plural) {\n            _this._traversePluralLink(handleField, record);\n          } else {\n            _this._traverseLink(handleField, record);\n          }\n\n          break;\n\n        case DEFER:\n        case STREAM:\n          _this._traverseSelections(selection.selections, record);\n\n          break;\n\n        case SCALAR_FIELD:\n        case SCALAR_HANDLE:\n          break;\n\n        case TYPE_DISCRIMINATOR:\n          {\n            var _typeName2 = RelayModernRecord.getType(record);\n\n            var _typeID = generateTypeID(_typeName2);\n\n            _this._references.add(_typeID);\n\n            break;\n          }\n\n        case MODULE_IMPORT:\n          _this._traverseModuleImport(selection, record);\n\n          break;\n\n        case CLIENT_EXTENSION:\n          _this._traverseSelections(selection.selections, record);\n\n          break;\n\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            _this._traverseFlightField(selection, record);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n\n          break;\n\n        case CLIENT_COMPONENT:\n          if (_this._shouldProcessClientComponents === false) {\n            break;\n          }\n\n          _this._traverseSelections(selection.fragment.selections, record);\n\n          break;\n\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker: Unknown AST node `%s`.', selection) : invariant(false) : void 0;\n      }\n    });\n  };\n\n  _proto._traverseModuleImport = function _traverseModuleImport(moduleImport, record) {\n    var _this$_operationName;\n\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker: Expected an operationLoader to be configured when using `@module`. ' + 'Could not load fragment `%s` in operation `%s`.', moduleImport.fragmentName, (_this$_operationName = this._operationName) !== null && _this$_operationName !== void 0 ? _this$_operationName : '(unknown)') : invariant(false) : void 0;\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = RelayModernRecord.getValue(record, operationKey);\n\n    if (operationReference == null) {\n      return;\n    }\n\n    var normalizationRootNode = operationLoader.get(operationReference);\n\n    if (normalizationRootNode != null) {\n      var operation = getOperation(normalizationRootNode);\n      var prevVariables = this._variables;\n      this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args);\n\n      this._traverseSelections(operation.selections, record);\n\n      this._variables = prevVariables;\n    } // Otherwise, if the operation is not available, we assume that the data\n    // cannot have been processed yet and therefore isn't in the store to\n    // begin with.\n\n  };\n\n  _proto._traverseLink = function _traverseLink(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n    if (linkedID == null) {\n      return;\n    }\n\n    this._traverse(field, linkedID);\n  };\n\n  _proto._traversePluralLink = function _traversePluralLink(field, record) {\n    var _this2 = this;\n\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n\n    if (linkedIDs == null) {\n      return;\n    }\n\n    linkedIDs.forEach(function (linkedID) {\n      if (linkedID != null) {\n        _this2._traverse(field, linkedID);\n      }\n    });\n  };\n\n  _proto._traverseFlightField = function _traverseFlightField(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n    if (linkedID == null) {\n      return;\n    }\n\n    this._references.add(linkedID);\n\n    var reactFlightClientResponseRecord = this._recordSource.get(linkedID);\n\n    if (reactFlightClientResponseRecord == null) {\n      return;\n    }\n\n    var reachableExecutableDefinitions = RelayModernRecord.getValue(reactFlightClientResponseRecord, RelayStoreReactFlightUtils.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY);\n\n    if (!Array.isArray(reachableExecutableDefinitions)) {\n      return;\n    }\n\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using ' + 'React Flight') : invariant(false) : void 0; // In Flight, the variables that are in scope for reachable executable\n    // definitions aren't the same as what's in scope for the outer query.\n\n    var prevVariables = this._variables; // $FlowFixMe[incompatible-cast]\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(reachableExecutableDefinitions),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var definition = _step.value;\n        this._variables = definition.variables;\n        var operationReference = definition.module;\n        var normalizationRootNode = operationLoader.get(operationReference);\n\n        if (normalizationRootNode != null) {\n          var operation = getOperation(normalizationRootNode);\n\n          this._traverse(operation, ROOT_ID);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    this._variables = prevVariables;\n  };\n\n  return RelayReferenceMarker;\n}();\n\nmodule.exports = {\n  mark: mark\n};", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar ITERATOR_KEY = Symbol.iterator;\n\nfunction hasOverlappingIDs(seenRecords, updatedRecordIDs) {\n  // $FlowFixMe[incompatible-use]: Set is an iterable type, accessing its iterator is allowed.\n  var iterator = seenRecords[ITERATOR_KEY]();\n  var next = iterator.next();\n\n  while (!next.done) {\n    var key = next.value;\n\n    if (updatedRecordIDs.has(key)) {\n      return true;\n    }\n\n    next = iterator.next();\n  }\n\n  return false;\n}\n\nmodule.exports = hasOverlappingIDs;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar deepFreeze = require('../util/deepFreeze');\n\nvar recycleNodesInto = require('../util/recycleNodesInto');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar hasOverlappingIDs = require('./hasOverlappingIDs');\n\nvar RelayReader = require('./RelayReader');\n\nvar RelayStoreSubscriptions = /*#__PURE__*/function () {\n  function RelayStoreSubscriptions(log, resolverCache) {\n    this._subscriptions = new Set();\n    this.__log = log;\n    this._resolverCache = resolverCache;\n  }\n\n  var _proto = RelayStoreSubscriptions.prototype;\n\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    var _this = this;\n\n    var subscription = {\n      backup: null,\n      callback: callback,\n      snapshot: snapshot,\n      stale: false\n    };\n\n    var dispose = function dispose() {\n      _this._subscriptions[\"delete\"](subscription);\n    };\n\n    this._subscriptions.add(subscription);\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.snapshotSubscriptions = function snapshotSubscriptions(source) {\n    var _this2 = this;\n\n    this._subscriptions.forEach(function (subscription) {\n      // Backup occurs after writing a new \"final\" payload(s) and before (re)applying\n      // optimistic changes. Each subscription's `snapshot` represents what was *last\n      // published to the subscriber*, which notably may include previous optimistic\n      // updates. Therefore a subscription can be in any of the following states:\n      // - stale=true: This subscription was restored to a different value than\n      //   `snapshot`. That means this subscription has changes relative to its base,\n      //   but its base has changed (we just applied a final payload): recompute\n      //   a backup so that we can later restore to the state the subscription\n      //   should be in.\n      // - stale=false: This subscription was restored to the same value as\n      //   `snapshot`. That means this subscription does *not* have changes relative\n      //   to its base, so the current `snapshot` is valid to use as a backup.\n      if (!subscription.stale) {\n        subscription.backup = subscription.snapshot;\n        return;\n      }\n\n      var snapshot = subscription.snapshot;\n      var backup = RelayReader.read(source, snapshot.selector, _this2._resolverCache);\n      var nextData = recycleNodesInto(snapshot.data, backup.data);\n      backup.data = nextData; // backup owns the snapshot and can safely mutate\n\n      subscription.backup = backup;\n    });\n  };\n\n  _proto.restoreSubscriptions = function restoreSubscriptions() {\n    this._subscriptions.forEach(function (subscription) {\n      var backup = subscription.backup;\n      subscription.backup = null;\n\n      if (backup) {\n        if (backup.data !== subscription.snapshot.data) {\n          subscription.stale = true;\n        }\n\n        subscription.snapshot = {\n          data: subscription.snapshot.data,\n          isMissingData: backup.isMissingData,\n          missingClientEdges: backup.missingClientEdges,\n          seenRecords: backup.seenRecords,\n          selector: backup.selector,\n          missingRequiredFields: backup.missingRequiredFields,\n          relayResolverErrors: backup.relayResolverErrors\n        };\n      } else {\n        subscription.stale = true;\n      }\n    });\n  };\n\n  _proto.updateSubscriptions = function updateSubscriptions(source, updatedRecordIDs, updatedOwners, sourceOperation) {\n    var _this3 = this;\n\n    var hasUpdatedRecords = updatedRecordIDs.size !== 0;\n\n    this._subscriptions.forEach(function (subscription) {\n      var owner = _this3._updateSubscription(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation);\n\n      if (owner != null) {\n        updatedOwners.push(owner);\n      }\n    });\n  }\n  /**\n   * Notifies the callback for the subscription if the data for the associated\n   * snapshot has changed.\n   * Additionally, updates the subscription snapshot with the latest snapshot,\n   * and marks it as not stale.\n   * Returns the owner (RequestDescriptor) if the subscription was affected by the\n   * latest update, or null if it was not affected.\n   */\n  ;\n\n  _proto._updateSubscription = function _updateSubscription(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation) {\n    var backup = subscription.backup,\n        callback = subscription.callback,\n        snapshot = subscription.snapshot,\n        stale = subscription.stale;\n    var hasOverlappingUpdates = hasUpdatedRecords && hasOverlappingIDs(snapshot.seenRecords, updatedRecordIDs);\n\n    if (!stale && !hasOverlappingUpdates) {\n      return;\n    }\n\n    var nextSnapshot = hasOverlappingUpdates || !backup ? RelayReader.read(source, snapshot.selector, this._resolverCache) : backup;\n    var nextData = recycleNodesInto(snapshot.data, nextSnapshot.data);\n    nextSnapshot = {\n      data: nextData,\n      isMissingData: nextSnapshot.isMissingData,\n      missingClientEdges: nextSnapshot.missingClientEdges,\n      seenRecords: nextSnapshot.seenRecords,\n      selector: nextSnapshot.selector,\n      missingRequiredFields: nextSnapshot.missingRequiredFields,\n      relayResolverErrors: nextSnapshot.relayResolverErrors\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(nextSnapshot);\n    }\n\n    subscription.snapshot = nextSnapshot;\n    subscription.stale = false;\n\n    if (nextSnapshot.data !== snapshot.data) {\n      if (this.__log && RelayFeatureFlags.ENABLE_NOTIFY_SUBSCRIPTION) {\n        this.__log({\n          name: 'store.notify.subscription',\n          sourceOperation: sourceOperation,\n          snapshot: snapshot,\n          nextSnapshot: nextSnapshot\n        });\n      }\n\n      callback(nextSnapshot);\n      return snapshot.selector.owner;\n    }\n  };\n\n  return RelayStoreSubscriptions;\n}();\n\nmodule.exports = RelayStoreSubscriptions;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n    INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n    assertInternalActorIndentifier = _require.assertInternalActorIndentifier;\n\nvar deepFreeze = require('../util/deepFreeze');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar resolveImmediate = require('../util/resolveImmediate');\n\nvar DataChecker = require('./DataChecker');\n\nvar defaultGetDataID = require('./defaultGetDataID');\n\nvar RelayModernRecord = require('./RelayModernRecord');\n\nvar RelayOptimisticRecordSource = require('./RelayOptimisticRecordSource');\n\nvar RelayReader = require('./RelayReader');\n\nvar RelayReferenceMarker = require('./RelayReferenceMarker');\n\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\n\nvar RelayStoreSubscriptions = require('./RelayStoreSubscriptions');\n\nvar RelayStoreUtils = require('./RelayStoreUtils');\n\nvar _require2 = require('./RelayStoreUtils'),\n    ROOT_ID = _require2.ROOT_ID,\n    ROOT_TYPE = _require2.ROOT_TYPE;\n\nvar _require3 = require('./ResolverCache'),\n    RecordResolverCache = _require3.RecordResolverCache;\n\nvar invariant = require('invariant');\n\nvar DEFAULT_RELEASE_BUFFER_SIZE = 10;\n/**\n * @public\n *\n * An implementation of the `Store` interface defined in `RelayStoreTypes`.\n *\n * Note that a Store takes ownership of all records provided to it: other\n * objects may continue to hold a reference to such records but may not mutate\n * them. The static Relay core is architected to avoid mutating records that may have been\n * passed to a store: operations that mutate records will either create fresh\n * records or clone existing records and modify the clones. Record immutability\n * is also enforced in development mode by freezing all records passed to a store.\n */\n\nvar RelayModernStore = /*#__PURE__*/function () {\n  function RelayModernStore(source, options) {\n    var _this = this;\n\n    var _options$gcReleaseBuf, _options$gcScheduler, _options$getDataID, _options$log, _options$operationLoa;\n\n    (0, _defineProperty2[\"default\"])(this, \"_gcStep\", function () {\n      if (_this._gcRun) {\n        if (_this._gcRun.next().done) {\n          _this._gcRun = null;\n        } else {\n          _this._gcScheduler(_this._gcStep);\n        }\n      }\n    });\n\n    // Prevent mutation of a record from outside the store.\n    if (process.env.NODE_ENV !== \"production\") {\n      var storeIDs = source.getRecordIDs();\n\n      for (var ii = 0; ii < storeIDs.length; ii++) {\n        var record = source.get(storeIDs[ii]);\n\n        if (record) {\n          RelayModernRecord.freeze(record);\n        }\n      }\n    }\n\n    this._currentWriteEpoch = 0;\n    this._gcHoldCounter = 0;\n    this._gcReleaseBufferSize = (_options$gcReleaseBuf = options === null || options === void 0 ? void 0 : options.gcReleaseBufferSize) !== null && _options$gcReleaseBuf !== void 0 ? _options$gcReleaseBuf : DEFAULT_RELEASE_BUFFER_SIZE;\n    this._gcRun = null;\n    this._gcScheduler = (_options$gcScheduler = options === null || options === void 0 ? void 0 : options.gcScheduler) !== null && _options$gcScheduler !== void 0 ? _options$gcScheduler : resolveImmediate;\n    this._getDataID = (_options$getDataID = options === null || options === void 0 ? void 0 : options.getDataID) !== null && _options$getDataID !== void 0 ? _options$getDataID : defaultGetDataID;\n    this._globalInvalidationEpoch = null;\n    this._invalidationSubscriptions = new Set();\n    this._invalidatedRecordIDs = new Set();\n    this.__log = (_options$log = options === null || options === void 0 ? void 0 : options.log) !== null && _options$log !== void 0 ? _options$log : null;\n    this._queryCacheExpirationTime = options === null || options === void 0 ? void 0 : options.queryCacheExpirationTime;\n    this._operationLoader = (_options$operationLoa = options === null || options === void 0 ? void 0 : options.operationLoader) !== null && _options$operationLoa !== void 0 ? _options$operationLoa : null;\n    this._optimisticSource = null;\n    this._recordSource = source;\n    this._releaseBuffer = [];\n    this._roots = new Map();\n    this._shouldScheduleGC = false;\n    this._resolverCache = new RecordResolverCache(function () {\n      return _this._getMutableRecordSource();\n    });\n    this._storeSubscriptions = new RelayStoreSubscriptions(options === null || options === void 0 ? void 0 : options.log, this._resolverCache);\n    this._updatedRecordIDs = new Set();\n    this._shouldProcessClientComponents = options === null || options === void 0 ? void 0 : options.shouldProcessClientComponents;\n    initializeRecordSource(this._recordSource);\n  }\n\n  var _proto = RelayModernStore.prototype;\n\n  _proto.getSource = function getSource() {\n    var _this$_optimisticSour;\n\n    return (_this$_optimisticSour = this._optimisticSource) !== null && _this$_optimisticSour !== void 0 ? _this$_optimisticSour : this._recordSource;\n  };\n\n  _proto._getMutableRecordSource = function _getMutableRecordSource() {\n    var _this$_optimisticSour2;\n\n    return (_this$_optimisticSour2 = this._optimisticSource) !== null && _this$_optimisticSour2 !== void 0 ? _this$_optimisticSour2 : this._recordSource;\n  };\n\n  _proto.check = function check(operation, options) {\n    var _options$handlers, _options$getSourceFor, _options$getTargetFor, _options$defaultActor;\n\n    var selector = operation.root;\n\n    var source = this._getMutableRecordSource();\n\n    var globalInvalidationEpoch = this._globalInvalidationEpoch;\n\n    var rootEntry = this._roots.get(operation.request.identifier);\n\n    var operationLastWrittenAt = rootEntry != null ? rootEntry.epoch : null; // Check if store has been globally invalidated\n\n    if (globalInvalidationEpoch != null) {\n      // If so, check if the operation we're checking was last written\n      // before or after invalidation occurred.\n      if (operationLastWrittenAt == null || operationLastWrittenAt <= globalInvalidationEpoch) {\n        // If the operation was written /before/ global invalidation occurred,\n        // or if this operation has never been written to the store before,\n        // we will consider the data for this operation to be stale\n        // (i.e. not resolvable from the store).\n        return {\n          status: 'stale'\n        };\n      }\n    }\n\n    var handlers = (_options$handlers = options === null || options === void 0 ? void 0 : options.handlers) !== null && _options$handlers !== void 0 ? _options$handlers : [];\n    var getSourceForActor = (_options$getSourceFor = options === null || options === void 0 ? void 0 : options.getSourceForActor) !== null && _options$getSourceFor !== void 0 ? _options$getSourceFor : function (actorIdentifier) {\n      assertInternalActorIndentifier(actorIdentifier);\n      return source;\n    };\n    var getTargetForActor = (_options$getTargetFor = options === null || options === void 0 ? void 0 : options.getTargetForActor) !== null && _options$getTargetFor !== void 0 ? _options$getTargetFor : function (actorIdentifier) {\n      assertInternalActorIndentifier(actorIdentifier);\n      return source;\n    };\n    var operationAvailability = DataChecker.check(getSourceForActor, getTargetForActor, (_options$defaultActor = options === null || options === void 0 ? void 0 : options.defaultActorIdentifier) !== null && _options$defaultActor !== void 0 ? _options$defaultActor : INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE, selector, handlers, this._operationLoader, this._getDataID, this._shouldProcessClientComponents);\n    return getAvailabilityStatus(operationAvailability, operationLastWrittenAt, rootEntry === null || rootEntry === void 0 ? void 0 : rootEntry.fetchTime, this._queryCacheExpirationTime);\n  };\n\n  _proto.retain = function retain(operation) {\n    var _this2 = this;\n\n    var id = operation.request.identifier;\n    var disposed = false;\n\n    var dispose = function dispose() {\n      // Ensure each retain can only dispose once\n      if (disposed) {\n        return;\n      }\n\n      disposed = true; // For Flow: guard against the entry somehow not existing\n\n      var rootEntry = _this2._roots.get(id);\n\n      if (rootEntry == null) {\n        return;\n      } // Decrement the ref count: if it becomes zero it is eligible\n      // for release.\n\n\n      rootEntry.refCount--;\n\n      if (rootEntry.refCount === 0) {\n        var _queryCacheExpirationTime = _this2._queryCacheExpirationTime;\n\n        var rootEntryIsStale = rootEntry.fetchTime != null && _queryCacheExpirationTime != null && rootEntry.fetchTime <= Date.now() - _queryCacheExpirationTime;\n\n        if (rootEntryIsStale) {\n          _this2._roots[\"delete\"](id);\n\n          _this2.scheduleGC();\n        } else {\n          _this2._releaseBuffer.push(id); // If the release buffer is now over-full, remove the least-recently\n          // added entry and schedule a GC. Note that all items in the release\n          // buffer have a refCount of 0.\n\n\n          if (_this2._releaseBuffer.length > _this2._gcReleaseBufferSize) {\n            var _id = _this2._releaseBuffer.shift();\n\n            _this2._roots[\"delete\"](_id);\n\n            _this2.scheduleGC();\n          }\n        }\n      }\n    };\n\n    var rootEntry = this._roots.get(id);\n\n    if (rootEntry != null) {\n      if (rootEntry.refCount === 0) {\n        // This entry should be in the release buffer, but it no longer belongs\n        // there since it's retained. Remove it to maintain the invariant that\n        // all release buffer entries have a refCount of 0.\n        this._releaseBuffer = this._releaseBuffer.filter(function (_id) {\n          return _id !== id;\n        });\n      } // If we've previously retained this operation, increment the refCount\n\n\n      rootEntry.refCount += 1;\n    } else {\n      // Otherwise create a new entry for the operation\n      this._roots.set(id, {\n        operation: operation,\n        refCount: 1,\n        epoch: null,\n        fetchTime: null\n      });\n    }\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.lookup = function lookup(selector) {\n    var source = this.getSource();\n    var snapshot = RelayReader.read(source, selector, this._resolverCache);\n\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(snapshot);\n    }\n\n    return snapshot;\n  } // This method will return a list of updated owners from the subscriptions\n  ;\n\n  _proto.notify = function notify(sourceOperation, invalidateStore) {\n    var _this3 = this;\n\n    var log = this.__log;\n\n    if (log != null) {\n      log({\n        name: 'store.notify.start',\n        sourceOperation: sourceOperation\n      });\n    } // Increment the current write when notifying after executing\n    // a set of changes to the store.\n\n\n    this._currentWriteEpoch++;\n\n    if (invalidateStore === true) {\n      this._globalInvalidationEpoch = this._currentWriteEpoch;\n    }\n\n    if (RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n      // When a record is updated, we need to also handle records that depend on it,\n      // specifically Relay Resolver result records containing results based on the\n      // updated records. This both adds to updatedRecordIDs and invalidates any\n      // cached data as needed.\n      this._resolverCache.invalidateDataIDs(this._updatedRecordIDs);\n    }\n\n    var source = this.getSource();\n    var updatedOwners = [];\n\n    this._storeSubscriptions.updateSubscriptions(source, this._updatedRecordIDs, updatedOwners, sourceOperation);\n\n    this._invalidationSubscriptions.forEach(function (subscription) {\n      _this3._updateInvalidationSubscription(subscription, invalidateStore === true);\n    });\n\n    if (log != null) {\n      log({\n        name: 'store.notify.complete',\n        sourceOperation: sourceOperation,\n        updatedRecordIDs: this._updatedRecordIDs,\n        invalidatedRecordIDs: this._invalidatedRecordIDs\n      });\n    }\n\n    this._updatedRecordIDs.clear();\n\n    this._invalidatedRecordIDs.clear(); // If a source operation was provided (indicating the operation\n    // that produced this update to the store), record the current epoch\n    // at which this operation was written.\n\n\n    if (sourceOperation != null) {\n      // We only track the epoch at which the operation was written if\n      // it was previously retained, to keep the size of our operation\n      // epoch map bounded. If a query wasn't retained, we assume it can\n      // may be deleted at any moment and thus is not relevant for us to track\n      // for the purposes of invalidation.\n      var id = sourceOperation.request.identifier;\n\n      var rootEntry = this._roots.get(id);\n\n      if (rootEntry != null) {\n        rootEntry.epoch = this._currentWriteEpoch;\n        rootEntry.fetchTime = Date.now();\n      } else if (sourceOperation.request.node.params.operationKind === 'query' && this._gcReleaseBufferSize > 0 && this._releaseBuffer.length < this._gcReleaseBufferSize) {\n        // The operation isn't retained but there is space in the release buffer:\n        // temporarily track this operation in case the data can be reused soon.\n        var temporaryRootEntry = {\n          operation: sourceOperation,\n          refCount: 0,\n          epoch: this._currentWriteEpoch,\n          fetchTime: Date.now()\n        };\n\n        this._releaseBuffer.push(id);\n\n        this._roots.set(id, temporaryRootEntry);\n      }\n    }\n\n    return updatedOwners;\n  };\n\n  _proto.publish = function publish(source, idsMarkedForInvalidation) {\n    var target = this._getMutableRecordSource();\n\n    updateTargetFromSource(target, source, // We increment the current epoch at the end of the set of updates,\n    // in notify(). Here, we pass what will be the incremented value of\n    // the epoch to use to write to invalidated records.\n    this._currentWriteEpoch + 1, idsMarkedForInvalidation, this._updatedRecordIDs, this._invalidatedRecordIDs); // NOTE: log *after* processing the source so that even if a bad log function\n    // mutates the source, it doesn't affect Relay processing of it.\n\n    var log = this.__log;\n\n    if (log != null) {\n      log({\n        name: 'store.publish',\n        source: source,\n        optimistic: target === this._optimisticSource\n      });\n    }\n  };\n\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._storeSubscriptions.subscribe(snapshot, callback);\n  };\n\n  _proto.holdGC = function holdGC() {\n    var _this4 = this;\n\n    if (this._gcRun) {\n      this._gcRun = null;\n      this._shouldScheduleGC = true;\n    }\n\n    this._gcHoldCounter++;\n\n    var dispose = function dispose() {\n      if (_this4._gcHoldCounter > 0) {\n        _this4._gcHoldCounter--;\n\n        if (_this4._gcHoldCounter === 0 && _this4._shouldScheduleGC) {\n          _this4.scheduleGC();\n\n          _this4._shouldScheduleGC = false;\n        }\n      }\n    };\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.toJSON = function toJSON() {\n    return 'RelayModernStore()';\n  };\n\n  _proto.getEpoch = function getEpoch() {\n    return this._currentWriteEpoch;\n  } // Internal API\n  ;\n\n  _proto.__getUpdatedRecordIDs = function __getUpdatedRecordIDs() {\n    return this._updatedRecordIDs;\n  };\n\n  _proto.lookupInvalidationState = function lookupInvalidationState(dataIDs) {\n    var _this5 = this;\n\n    var invalidations = new Map();\n    dataIDs.forEach(function (dataID) {\n      var _RelayModernRecord$ge;\n\n      var record = _this5.getSource().get(dataID);\n\n      invalidations.set(dataID, (_RelayModernRecord$ge = RelayModernRecord.getInvalidationEpoch(record)) !== null && _RelayModernRecord$ge !== void 0 ? _RelayModernRecord$ge : null);\n    });\n    invalidations.set('global', this._globalInvalidationEpoch);\n    return {\n      dataIDs: dataIDs,\n      invalidations: invalidations\n    };\n  };\n\n  _proto.checkInvalidationState = function checkInvalidationState(prevInvalidationState) {\n    var latestInvalidationState = this.lookupInvalidationState(prevInvalidationState.dataIDs);\n    var currentInvalidations = latestInvalidationState.invalidations;\n    var prevInvalidations = prevInvalidationState.invalidations; // Check if global invalidation has changed\n\n    if (currentInvalidations.get('global') !== prevInvalidations.get('global')) {\n      return true;\n    } // Check if the invalidation state for any of the ids has changed.\n\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(prevInvalidationState.dataIDs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var dataID = _step.value;\n\n        if (currentInvalidations.get(dataID) !== prevInvalidations.get(dataID)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return false;\n  };\n\n  _proto.subscribeToInvalidationState = function subscribeToInvalidationState(invalidationState, callback) {\n    var _this6 = this;\n\n    var subscription = {\n      callback: callback,\n      invalidationState: invalidationState\n    };\n\n    var dispose = function dispose() {\n      _this6._invalidationSubscriptions[\"delete\"](subscription);\n    };\n\n    this._invalidationSubscriptions.add(subscription);\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto._updateInvalidationSubscription = function _updateInvalidationSubscription(subscription, invalidatedStore) {\n    var _this7 = this;\n\n    var callback = subscription.callback,\n        invalidationState = subscription.invalidationState;\n    var dataIDs = invalidationState.dataIDs;\n    var isSubscribedToInvalidatedIDs = invalidatedStore || dataIDs.some(function (dataID) {\n      return _this7._invalidatedRecordIDs.has(dataID);\n    });\n\n    if (!isSubscribedToInvalidatedIDs) {\n      return;\n    }\n\n    callback();\n  };\n\n  _proto.snapshot = function snapshot() {\n    !(this._optimisticSource == null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernStore: Unexpected call to snapshot() while a previous ' + 'snapshot exists.') : invariant(false) : void 0;\n    var log = this.__log;\n\n    if (log != null) {\n      log({\n        name: 'store.snapshot'\n      });\n    }\n\n    this._storeSubscriptions.snapshotSubscriptions(this.getSource());\n\n    if (this._gcRun) {\n      this._gcRun = null;\n      this._shouldScheduleGC = true;\n    }\n\n    this._optimisticSource = RelayOptimisticRecordSource.create(this.getSource());\n  };\n\n  _proto.restore = function restore() {\n    !(this._optimisticSource != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernStore: Unexpected call to restore(), expected a snapshot ' + 'to exist (make sure to call snapshot()).') : invariant(false) : void 0;\n    var log = this.__log;\n\n    if (log != null) {\n      log({\n        name: 'store.restore'\n      });\n    }\n\n    this._optimisticSource = null;\n\n    if (this._shouldScheduleGC) {\n      this.scheduleGC();\n    }\n\n    this._storeSubscriptions.restoreSubscriptions();\n  };\n\n  _proto.scheduleGC = function scheduleGC() {\n    if (this._gcHoldCounter > 0) {\n      this._shouldScheduleGC = true;\n      return;\n    }\n\n    if (this._gcRun) {\n      return;\n    }\n\n    this._gcRun = this._collect();\n\n    this._gcScheduler(this._gcStep);\n  }\n  /**\n   * Run a full GC synchronously.\n   */\n  ;\n\n  _proto.__gc = function __gc() {\n    // Don't run GC while there are optimistic updates applied\n    if (this._optimisticSource != null) {\n      return;\n    }\n\n    var gcRun = this._collect();\n\n    while (!gcRun.next().done) {}\n  };\n\n  _proto._collect = function* _collect() {\n    /* eslint-disable no-labels */\n    top: while (true) {\n      var startEpoch = this._currentWriteEpoch;\n      var references = new Set(); // Mark all records that are traversable from a root\n\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(this._roots.values()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var operation = _step2.value.operation;\n          var selector = operation.root;\n          RelayReferenceMarker.mark(this._recordSource, selector, references, this._operationLoader, this._shouldProcessClientComponents); // Yield for other work after each operation\n\n          yield; // If the store was updated, restart\n\n          if (startEpoch !== this._currentWriteEpoch) {\n            continue top;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      var log = this.__log;\n\n      if (log != null) {\n        log({\n          name: 'store.gc',\n          references: references\n        });\n      } // Sweep records without references\n\n\n      if (references.size === 0) {\n        // Short-circuit if *nothing* is referenced\n        this._recordSource.clear();\n      } else {\n        // Evict any unreferenced nodes\n        var storeIDs = this._recordSource.getRecordIDs();\n\n        for (var ii = 0; ii < storeIDs.length; ii++) {\n          var dataID = storeIDs[ii];\n\n          if (!references.has(dataID)) {\n            this._recordSource.remove(dataID);\n          }\n        }\n      }\n\n      return;\n    }\n  };\n\n  return RelayModernStore;\n}();\n\nfunction initializeRecordSource(target) {\n  if (!target.has(ROOT_ID)) {\n    var rootRecord = RelayModernRecord.create(ROOT_ID, ROOT_TYPE);\n    target.set(ROOT_ID, rootRecord);\n  }\n}\n/**\n * Updates the target with information from source, also updating a mapping of\n * which records in the target were changed as a result.\n * Additionally, will mark records as invalidated at the current write epoch\n * given the set of record ids marked as stale in this update.\n */\n\n\nfunction updateTargetFromSource(target, source, currentWriteEpoch, idsMarkedForInvalidation, updatedRecordIDs, invalidatedRecordIDs) {\n  // First, update any records that were marked for invalidation.\n  // For each provided dataID that was invalidated, we write the\n  // INVALIDATED_AT_KEY on the record, indicating\n  // the epoch at which the record was invalidated.\n  if (idsMarkedForInvalidation) {\n    idsMarkedForInvalidation.forEach(function (dataID) {\n      var targetRecord = target.get(dataID);\n      var sourceRecord = source.get(dataID); // If record was deleted during the update (and also invalidated),\n      // we don't need to count it as an invalidated id\n\n      if (sourceRecord === null) {\n        return;\n      }\n\n      var nextRecord;\n\n      if (targetRecord != null) {\n        // If the target record exists, use it to set the epoch\n        // at which it was invalidated. This record will be updated with\n        // any changes from source in the section below\n        // where we update the target records based on the source.\n        nextRecord = RelayModernRecord.clone(targetRecord);\n      } else {\n        // If the target record doesn't exist, it means that a new record\n        // in the source was created (and also invalidated), so we use that\n        // record to set the epoch at which it was invalidated. This record\n        // will be updated with any changes from source in the section below\n        // where we update the target records based on the source.\n        nextRecord = sourceRecord != null ? RelayModernRecord.clone(sourceRecord) : null;\n      }\n\n      if (!nextRecord) {\n        return;\n      }\n\n      RelayModernRecord.setValue(nextRecord, RelayStoreUtils.INVALIDATED_AT_KEY, currentWriteEpoch);\n      invalidatedRecordIDs.add(dataID);\n      target.set(dataID, nextRecord);\n    });\n  } // Update the target based on the changes present in source\n\n\n  var dataIDs = source.getRecordIDs();\n\n  for (var ii = 0; ii < dataIDs.length; ii++) {\n    var dataID = dataIDs[ii];\n    var sourceRecord = source.get(dataID);\n    var targetRecord = target.get(dataID); // Prevent mutation of a record from outside the store.\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (sourceRecord) {\n        RelayModernRecord.freeze(sourceRecord);\n      }\n    }\n\n    if (sourceRecord && targetRecord) {\n      // ReactFlightClientResponses are lazy and only materialize when readRoot\n      // is called when we read the field, so if the record is a Flight field\n      // we always use the new record's data regardless of whether\n      // it actually changed. Let React take care of reconciliation instead.\n      var nextRecord = RelayModernRecord.getType(targetRecord) === RelayStoreReactFlightUtils.REACT_FLIGHT_TYPE_NAME ? sourceRecord : RelayModernRecord.update(targetRecord, sourceRecord);\n\n      if (nextRecord !== targetRecord) {\n        // Prevent mutation of a record from outside the store.\n        if (process.env.NODE_ENV !== \"production\") {\n          RelayModernRecord.freeze(nextRecord);\n        }\n\n        updatedRecordIDs.add(dataID);\n        target.set(dataID, nextRecord);\n      }\n    } else if (sourceRecord === null) {\n      target[\"delete\"](dataID);\n\n      if (targetRecord !== null) {\n        updatedRecordIDs.add(dataID);\n      }\n    } else if (sourceRecord) {\n      target.set(dataID, sourceRecord);\n      updatedRecordIDs.add(dataID);\n    } // don't add explicit undefined\n\n  }\n}\n/**\n * Returns an OperationAvailability given the Availability returned\n * by checking an operation, and when that operation was last written to the store.\n * Specifically, the provided Availability of an operation will contain the\n * value of when a record referenced by the operation was most recently\n * invalidated; given that value, and given when this operation was last\n * written to the store, this function will return the overall\n * OperationAvailability for the operation.\n */\n\n\nfunction getAvailabilityStatus(operationAvailability, operationLastWrittenAt, operationFetchTime, queryCacheExpirationTime) {\n  var mostRecentlyInvalidatedAt = operationAvailability.mostRecentlyInvalidatedAt,\n      status = operationAvailability.status;\n\n  if (typeof mostRecentlyInvalidatedAt === 'number') {\n    // If some record referenced by this operation is stale, then the operation itself is stale\n    // if either the operation itself was never written *or* the operation was last written\n    // before the most recent invalidation of its reachable records.\n    if (operationLastWrittenAt == null || mostRecentlyInvalidatedAt > operationLastWrittenAt) {\n      return {\n        status: 'stale'\n      };\n    }\n  }\n\n  if (status === 'missing') {\n    return {\n      status: 'missing'\n    };\n  }\n\n  if (operationFetchTime != null && queryCacheExpirationTime != null) {\n    var isStale = operationFetchTime <= Date.now() - queryCacheExpirationTime;\n\n    if (isStale) {\n      return {\n        status: 'stale'\n      };\n    }\n  } // There were no invalidations of any reachable records *or* the operation is known to have\n  // been fetched after the most recent record invalidation.\n\n\n  return {\n    status: 'available',\n    fetchTime: operationFetchTime !== null && operationFetchTime !== void 0 ? operationFetchTime : null\n  };\n}\n\nmodule.exports = RelayModernStore;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayDeclarativeMutationConfig = require('../mutations/RelayDeclarativeMutationConfig');\n\nvar _require = require('../query/GraphQLTag'),\n    getRequest = _require.getRequest;\n\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require2.createOperationDescriptor;\n\nvar _require3 = require('../store/RelayModernSelector'),\n    createReaderSelector = _require3.createReaderSelector;\n\nvar warning = require(\"fbjs/lib/warning\");\n\nfunction requestSubscription(environment, config) {\n  var subscription = getRequest(config.subscription);\n\n  if (subscription.params.operationKind !== 'subscription') {\n    throw new Error('requestSubscription: Must use Subscription operation');\n  }\n\n  var configs = config.configs,\n      onCompleted = config.onCompleted,\n      onError = config.onError,\n      onNext = config.onNext,\n      variables = config.variables,\n      cacheConfig = config.cacheConfig;\n  var operation = createOperationDescriptor(subscription, variables, cacheConfig);\n  process.env.NODE_ENV !== \"production\" ? warning(!(config.updater && configs), 'requestSubscription: Expected only one of `updater` and `configs` to be provided') : void 0;\n\n  var _ref = configs ? RelayDeclarativeMutationConfig.convert(configs, subscription, null\n  /* optimisticUpdater */\n  ,\n  /* optimisticUpdater */\n  config.updater) : config,\n      updater = _ref.updater;\n\n  var sub = environment.executeSubscription({\n    operation: operation,\n    updater: updater\n  }).subscribe({\n    next: function next(responses) {\n      if (onNext != null) {\n        var selector = operation.fragment;\n        var nextID;\n\n        if (Array.isArray(responses)) {\n          var _responses$, _responses$$extension;\n\n          nextID = (_responses$ = responses[0]) === null || _responses$ === void 0 ? void 0 : (_responses$$extension = _responses$.extensions) === null || _responses$$extension === void 0 ? void 0 : _responses$$extension.__relay_subscription_root_id;\n        } else {\n          var _responses$extensions;\n\n          nextID = (_responses$extensions = responses.extensions) === null || _responses$extensions === void 0 ? void 0 : _responses$extensions.__relay_subscription_root_id;\n        }\n\n        if (typeof nextID === 'string') {\n          selector = createReaderSelector(selector.node, nextID, selector.variables, selector.owner);\n        }\n\n        var data = environment.lookup(selector).data; // $FlowFixMe[incompatible-cast]\n\n        onNext(data);\n      }\n    },\n    error: onError,\n    complete: onCompleted\n  });\n  return {\n    dispose: sub.unsubscribe\n  };\n}\n\nmodule.exports = requestSubscription;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _require = require('../store/RelayStoreUtils'),\n    getModuleComponentKey = _require.getModuleComponentKey,\n    getModuleOperationKey = _require.getModuleOperationKey;\n\nfunction createPayloadFor3DField(name, operation, component, response) {\n  var data = (0, _objectSpread2[\"default\"])({}, response);\n  data[getModuleComponentKey(name)] = component;\n  data[getModuleOperationKey(name)] = operation;\n  return data;\n}\n\nmodule.exports = createPayloadFor3DField;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n'use strict'; // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isEmptyObject(obj) {\n  for (var _key in obj) {\n    if (hasOwnProperty.call(obj, _key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isEmptyObject;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../store/RelayModernSelector'),\n    getDataIDsFromFragment = _require.getDataIDsFromFragment,\n    getSelector = _require.getSelector,\n    getVariablesFromFragment = _require.getVariablesFromFragment;\n\nvar isEmptyObject = require('./isEmptyObject');\n\nvar RelayFeatureFlags = require('./RelayFeatureFlags');\n\nvar stableCopy = require('./stableCopy');\n\nvar _require2 = require('./StringInterner'),\n    intern = _require2.intern;\n\nfunction getFragmentIdentifier(fragmentNode, fragmentRef) {\n  var selector = getSelector(fragmentNode, fragmentRef);\n  var fragmentOwnerIdentifier = selector == null ? 'null' : selector.kind === 'SingularReaderSelector' ? selector.owner.identifier : '[' + selector.selectors.map(function (sel) {\n    return sel.owner.identifier;\n  }).join(',') + ']';\n  var fragmentVariables = getVariablesFromFragment(fragmentNode, fragmentRef);\n  var dataIDs = getDataIDsFromFragment(fragmentNode, fragmentRef);\n\n  if (RelayFeatureFlags.ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION) {\n    var ids = typeof dataIDs === 'undefined' ? 'missing' : dataIDs == null ? 'null' : Array.isArray(dataIDs) ? '[' + dataIDs.join(',') + ']' : dataIDs;\n    ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? ids : intern(ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + (fragmentVariables == null || isEmptyObject(fragmentVariables) ? '{}' : JSON.stringify(stableCopy(fragmentVariables))) + '/' + ids;\n  } else {\n    var _JSON$stringify;\n\n    var _ids = (_JSON$stringify = JSON.stringify(dataIDs)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'missing';\n\n    _ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? _ids : intern(_ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + JSON.stringify(stableCopy(fragmentVariables)) + '/' + _ids;\n  }\n}\n\nmodule.exports = getFragmentIdentifier;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require('invariant');\n\nfunction getRefetchMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n\n  !(((_fragmentNode$metadat = fragmentNode.metadata) === null || _fragmentNode$metadat === void 0 ? void 0 : _fragmentNode$metadat.plural) !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` not to be plural when using ' + '`%s`. Remove `@relay(plural: true)` from fragment `%s` ' + 'in order to use it with `%s`.', fragmentNode.name, componentDisplayName, fragmentNode.name, componentDisplayName) : invariant(false) : void 0;\n  var refetchMetadata = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.refetch;\n  !(refetchMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` to be refetchable when using `%s`. ' + 'Did you forget to add a @refetchable directive to the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0; // handle both commonjs and es modules\n\n  var refetchableRequest = refetchMetadata.operation[\"default\"] ? refetchMetadata.operation[\"default\"] : refetchMetadata.operation;\n  var fragmentRefPathInResponse = refetchMetadata.fragmentPathInResult;\n  !(typeof refetchableRequest !== 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected refetch query to be an ' + \"operation and not a string when using `%s`. If you're seeing this, \" + 'this is likely a bug in Relay.', componentDisplayName) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    fragmentRefPathInResponse: fragmentRefPathInResponse,\n    identifierField: identifierField,\n    refetchableRequest: refetchableRequest,\n    refetchMetadata: refetchMetadata\n  };\n}\n\nmodule.exports = getRefetchMetadata;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar getRefetchMetadata = require('./getRefetchMetadata');\n\nvar invariant = require('invariant');\n\nfunction getPaginationMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n\n  var _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName),\n      paginationRequest = _getRefetchMetadata.refetchableRequest,\n      refetchMetadata = _getRefetchMetadata.refetchMetadata;\n\n  var paginationMetadata = refetchMetadata.connection;\n  !(paginationMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var connectionPathInFragmentData = paginationMetadata.path;\n  var connectionMetadata = ((_fragmentNode$metadat = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.connection) !== null && _fragmentNode$metadat !== void 0 ? _fragmentNode$metadat : [])[0];\n  !(connectionMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    connectionPathInFragmentData: connectionPathInFragmentData,\n    identifierField: identifierField,\n    paginationRequest: paginationRequest,\n    paginationMetadata: paginationMetadata,\n    stream: connectionMetadata.stream === true\n  };\n}\n\nmodule.exports = getPaginationMetadata;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectSpread4 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nfunction getPaginationVariables(direction, count, cursor, baseVariables, extraVariables, paginationMetadata) {\n  var _objectSpread3;\n\n  var backwardMetadata = paginationMetadata.backward,\n      forwardMetadata = paginationMetadata.forward;\n\n  if (direction === 'backward') {\n    var _objectSpread2;\n\n    !(backwardMetadata != null && backwardMetadata.count != null && backwardMetadata.cursor != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected backward pagination metadata to be available. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(backwardMetadata.cursor), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain cursor variable `%s`. This variable is automatically ' + 'determined by Relay.', backwardMetadata.cursor) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(backwardMetadata.count), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain count variable `%s`. This variable is automatically ' + 'determined by Relay.', backwardMetadata.count) : void 0;\n\n    var _paginationVariables = (0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])({}, baseVariables), extraVariables), {}, (_objectSpread2 = {}, (0, _defineProperty2[\"default\"])(_objectSpread2, backwardMetadata.cursor, cursor), (0, _defineProperty2[\"default\"])(_objectSpread2, backwardMetadata.count, count), _objectSpread2));\n\n    if (forwardMetadata && forwardMetadata.cursor) {\n      _paginationVariables[forwardMetadata.cursor] = null;\n    }\n\n    if (forwardMetadata && forwardMetadata.count) {\n      _paginationVariables[forwardMetadata.count] = null;\n    }\n\n    return _paginationVariables;\n  }\n\n  !(forwardMetadata != null && forwardMetadata.count != null && forwardMetadata.cursor != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected forward pagination metadata to be available. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(forwardMetadata.cursor), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain cursor variable `%s`. This variable is automatically ' + 'determined by Relay.', forwardMetadata.cursor) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(forwardMetadata.count), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain count variable `%s`. This variable is automatically ' + 'determined by Relay.', forwardMetadata.count) : void 0;\n  var paginationVariables = (0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])({}, baseVariables), extraVariables), {}, (_objectSpread3 = {}, (0, _defineProperty2[\"default\"])(_objectSpread3, forwardMetadata.cursor, cursor), (0, _defineProperty2[\"default\"])(_objectSpread3, forwardMetadata.count, count), _objectSpread3));\n\n  if (backwardMetadata && backwardMetadata.cursor) {\n    paginationVariables[backwardMetadata.cursor] = null;\n  }\n\n  if (backwardMetadata && backwardMetadata.count) {\n    paginationVariables[backwardMetadata.count] = null;\n  }\n\n  return paginationVariables;\n}\n\nmodule.exports = getPaginationVariables;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar invariant = require('invariant');\n\nfunction getValueAtPath(data, path) {\n  var result = data;\n\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(path),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n\n      if (result == null) {\n        return null;\n      }\n\n      if (typeof key === 'number') {\n        !Array.isArray(result) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected an array when extracting value at path. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n        result = result[key];\n      } else {\n        !(typeof result === 'object' && !Array.isArray(result)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected an object when extracting value at path. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n        result = result[key];\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return result;\n}\n\nmodule.exports = getValueAtPath;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar profileHandlersByName = {};\nvar defaultProfiler = {\n  stop: function stop() {}\n};\n/**\n * @public\n *\n * Instruments methods to allow profiling various parts of Relay. Profiling code\n * in Relay consists of three steps:\n *\n *  - Instrument the function to be profiled.\n *  - Attach handlers to the instrumented function.\n *  - Run the code which triggers the handlers.\n *\n * Handlers attached to instrumented methods are called with an instrumentation\n * name and a callback that must be synchronously executed:\n *\n *   instrumentedMethod.attachHandler(function(name, callback) {\n *     const start = performance.now();\n *     callback();\n *     console.log('Duration', performance.now() - start);\n *   });\n *\n * Handlers for profiles are callbacks that return a stop method:\n *\n *   RelayProfiler.attachProfileHandler('profileName', (name, state) => {\n *     const start = performance.now();\n *     return function stop(name, state) {\n *       console.log(`Duration (${name})`, performance.now() - start);\n *     }\n *   });\n */\n\nvar RelayProfiler = {\n  /**\n   * Instruments profiling for arbitrarily asynchronous code by a name.\n   *\n   *   const timerProfiler = RelayProfiler.profile('timeout');\n   *   setTimeout(function() {\n   *     timerProfiler.stop();\n   *   }, 1000);\n   *\n   *   RelayProfiler.attachProfileHandler('timeout', ...);\n   *\n   * Arbitrary state can also be passed into `profile` as a second argument. The\n   * attached profile handlers will receive this as the second argument.\n   */\n  profile: function profile(name, state) {\n    var handlers = profileHandlersByName[name];\n\n    if (handlers && handlers.length > 0) {\n      var stopHandlers = [];\n\n      for (var ii = handlers.length - 1; ii >= 0; ii--) {\n        var stopHandler = handlers[ii](name, state);\n        stopHandlers.unshift(stopHandler);\n      }\n\n      return {\n        stop: function stop(error) {\n          stopHandlers.forEach(function (stopHandler) {\n            return stopHandler(error);\n          });\n        }\n      };\n    }\n\n    return defaultProfiler;\n  },\n\n  /**\n   * Attaches a handler to profiles with the supplied name.\n   */\n  attachProfileHandler: function attachProfileHandler(name, handler) {\n    if (!profileHandlersByName.hasOwnProperty(name)) {\n      profileHandlersByName[name] = [];\n    }\n\n    profileHandlersByName[name].push(handler);\n  },\n\n  /**\n   * Detaches a handler attached via `attachProfileHandler`.\n   */\n  detachProfileHandler: function detachProfileHandler(name, handler) {\n    if (profileHandlersByName.hasOwnProperty(name)) {\n      removeFromArray(profileHandlersByName[name], handler);\n    }\n  }\n};\n\nfunction removeFromArray(array, element) {\n  var index = array.indexOf(element);\n\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\n\nmodule.exports = RelayProfiler;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar ConnectionHandler = require('./handlers/connection/ConnectionHandler');\n\nvar ConnectionInterface = require('./handlers/connection/ConnectionInterface');\n\nvar MutationHandlers = require('./handlers/connection/MutationHandlers');\n\nvar RelayDefaultHandlerProvider = require('./handlers/RelayDefaultHandlerProvider');\n\nvar applyOptimisticMutation = require('./mutations/applyOptimisticMutation');\n\nvar commitLocalUpdate = require('./mutations/commitLocalUpdate');\n\nvar commitMutation = require('./mutations/commitMutation');\n\nvar RelayDeclarativeMutationConfig = require('./mutations/RelayDeclarativeMutationConfig');\n\nvar RelayNetwork = require('./network/RelayNetwork');\n\nvar RelayObservable = require('./network/RelayObservable');\n\nvar RelayQueryResponseCache = require('./network/RelayQueryResponseCache');\n\nvar fetchQuery = require('./query/fetchQuery');\n\nvar fetchQuery_DEPRECATED = require('./query/fetchQuery_DEPRECATED');\n\nvar fetchQueryInternal = require('./query/fetchQueryInternal');\n\nvar GraphQLTag = require('./query/GraphQLTag');\n\nvar PreloadableQueryRegistry = require('./query/PreloadableQueryRegistry');\n\nvar _require = require('./store/ClientID'),\n    generateClientID = _require.generateClientID,\n    generateUniqueClientID = _require.generateUniqueClientID,\n    isClientID = _require.isClientID;\n\nvar createFragmentSpecResolver = require('./store/createFragmentSpecResolver');\n\nvar createRelayContext = require('./store/createRelayContext');\n\nvar isRelayModernEnvironment = require('./store/isRelayModernEnvironment');\n\nvar readInlineData = require('./store/readInlineData');\n\nvar RelayConcreteVariables = require('./store/RelayConcreteVariables');\n\nvar RelayModernEnvironment = require('./store/RelayModernEnvironment');\n\nvar RelayModernOperationDescriptor = require('./store/RelayModernOperationDescriptor');\n\nvar RelayModernRecord = require('./store/RelayModernRecord');\n\nvar RelayModernSelector = require('./store/RelayModernSelector');\n\nvar RelayModernStore = require('./store/RelayModernStore');\n\nvar RelayOperationTracker = require('./store/RelayOperationTracker');\n\nvar RelayRecordSource = require('./store/RelayRecordSource');\n\nvar RelayStoreUtils = require('./store/RelayStoreUtils');\n\nvar ResolverFragments = require('./store/ResolverFragments');\n\nvar ViewerPattern = require('./store/ViewerPattern');\n\nvar requestSubscription = require('./subscription/requestSubscription');\n\nvar createPayloadFor3DField = require('./util/createPayloadFor3DField');\n\nvar deepFreeze = require('./util/deepFreeze');\n\nvar getFragmentIdentifier = require('./util/getFragmentIdentifier');\n\nvar getPaginationMetadata = require('./util/getPaginationMetadata');\n\nvar getPaginationVariables = require('./util/getPaginationVariables');\n\nvar getPendingOperationsForFragment = require('./util/getPendingOperationsForFragment');\n\nvar getRefetchMetadata = require('./util/getRefetchMetadata');\n\nvar getRelayHandleKey = require('./util/getRelayHandleKey');\n\nvar getRequestIdentifier = require('./util/getRequestIdentifier');\n\nvar getValueAtPath = require('./util/getValueAtPath');\n\nvar handlePotentialSnapshotErrors = require('./util/handlePotentialSnapshotErrors');\n\nvar isPromise = require('./util/isPromise');\n\nvar isScalarAndEqual = require('./util/isScalarAndEqual');\n\nvar recycleNodesInto = require('./util/recycleNodesInto');\n\nvar RelayConcreteNode = require('./util/RelayConcreteNode');\n\nvar RelayDefaultHandleKey = require('./util/RelayDefaultHandleKey');\n\nvar RelayError = require('./util/RelayError');\n\nvar RelayFeatureFlags = require('./util/RelayFeatureFlags');\n\nvar RelayProfiler = require('./util/RelayProfiler');\n\nvar RelayReplaySubject = require('./util/RelayReplaySubject');\n\nvar stableCopy = require('./util/stableCopy');\n\nvar withProvidedVariables = require('./util/withProvidedVariables');\n\n// As early as possible, check for the existence of the JavaScript globals which\n// Relay Runtime relies upon, and produce a clear message if they do not exist.\nif (process.env.NODE_ENV !== \"production\") {\n  var mapStr = typeof Map !== 'function' ? 'Map' : null;\n  var setStr = typeof Set !== 'function' ? 'Set' : null;\n  var promiseStr = typeof Promise !== 'function' ? 'Promise' : null;\n  var objStr = typeof Object.assign !== 'function' ? 'Object.assign' : null;\n\n  if (mapStr || setStr || promiseStr || objStr) {\n    throw new Error(\"relay-runtime requires \".concat([mapStr, setStr, promiseStr, objStr].filter(Boolean).join(', and '), \" to exist. \") + 'Use a polyfill to provide these for older browsers.');\n  }\n}\n/**\n * The public interface to Relay Runtime.\n */\n\n\nmodule.exports = {\n  // Core API\n  Environment: RelayModernEnvironment,\n  Network: RelayNetwork,\n  Observable: RelayObservable,\n  QueryResponseCache: RelayQueryResponseCache,\n  RecordSource: RelayRecordSource,\n  Record: RelayModernRecord,\n  ReplaySubject: RelayReplaySubject,\n  Store: RelayModernStore,\n  areEqualSelectors: RelayModernSelector.areEqualSelectors,\n  createFragmentSpecResolver: createFragmentSpecResolver,\n  createNormalizationSelector: RelayModernSelector.createNormalizationSelector,\n  createOperationDescriptor: RelayModernOperationDescriptor.createOperationDescriptor,\n  createReaderSelector: RelayModernSelector.createReaderSelector,\n  createRequestDescriptor: RelayModernOperationDescriptor.createRequestDescriptor,\n  getDataIDsFromFragment: RelayModernSelector.getDataIDsFromFragment,\n  getDataIDsFromObject: RelayModernSelector.getDataIDsFromObject,\n  getNode: GraphQLTag.getNode,\n  getFragment: GraphQLTag.getFragment,\n  getInlineDataFragment: GraphQLTag.getInlineDataFragment,\n  getModuleComponentKey: RelayStoreUtils.getModuleComponentKey,\n  getModuleOperationKey: RelayStoreUtils.getModuleOperationKey,\n  getPaginationFragment: GraphQLTag.getPaginationFragment,\n  getPluralSelector: RelayModernSelector.getPluralSelector,\n  getRefetchableFragment: GraphQLTag.getRefetchableFragment,\n  getRequest: GraphQLTag.getRequest,\n  getRequestIdentifier: getRequestIdentifier,\n  getSelector: RelayModernSelector.getSelector,\n  getSelectorsFromObject: RelayModernSelector.getSelectorsFromObject,\n  getSingularSelector: RelayModernSelector.getSingularSelector,\n  getStorageKey: RelayStoreUtils.getStorageKey,\n  getVariablesFromFragment: RelayModernSelector.getVariablesFromFragment,\n  getVariablesFromObject: RelayModernSelector.getVariablesFromObject,\n  getVariablesFromPluralFragment: RelayModernSelector.getVariablesFromPluralFragment,\n  getVariablesFromSingularFragment: RelayModernSelector.getVariablesFromSingularFragment,\n  handlePotentialSnapshotErrors: handlePotentialSnapshotErrors,\n  graphql: GraphQLTag.graphql,\n  isFragment: GraphQLTag.isFragment,\n  isInlineDataFragment: GraphQLTag.isInlineDataFragment,\n  isRequest: GraphQLTag.isRequest,\n  readInlineData: readInlineData,\n  // Declarative mutation API\n  MutationTypes: RelayDeclarativeMutationConfig.MutationTypes,\n  RangeOperations: RelayDeclarativeMutationConfig.RangeOperations,\n  // Extensions\n  DefaultHandlerProvider: RelayDefaultHandlerProvider,\n  ConnectionHandler: ConnectionHandler,\n  MutationHandlers: MutationHandlers,\n  VIEWER_ID: ViewerPattern.VIEWER_ID,\n  VIEWER_TYPE: ViewerPattern.VIEWER_TYPE,\n  // Helpers (can be implemented via the above API)\n  applyOptimisticMutation: applyOptimisticMutation,\n  commitLocalUpdate: commitLocalUpdate,\n  commitMutation: commitMutation,\n  fetchQuery: fetchQuery,\n  fetchQuery_DEPRECATED: fetchQuery_DEPRECATED,\n  isRelayModernEnvironment: isRelayModernEnvironment,\n  requestSubscription: requestSubscription,\n  // Configuration interface for legacy or special uses\n  ConnectionInterface: ConnectionInterface,\n  // Utilities\n  PreloadableQueryRegistry: PreloadableQueryRegistry,\n  RelayProfiler: RelayProfiler,\n  createPayloadFor3DField: createPayloadFor3DField,\n  // INTERNAL-ONLY: These exports might be removed at any point.\n  RelayConcreteNode: RelayConcreteNode,\n  RelayError: RelayError,\n  RelayFeatureFlags: RelayFeatureFlags,\n  DEFAULT_HANDLE_KEY: RelayDefaultHandleKey.DEFAULT_HANDLE_KEY,\n  FRAGMENTS_KEY: RelayStoreUtils.FRAGMENTS_KEY,\n  FRAGMENT_OWNER_KEY: RelayStoreUtils.FRAGMENT_OWNER_KEY,\n  ID_KEY: RelayStoreUtils.ID_KEY,\n  REF_KEY: RelayStoreUtils.REF_KEY,\n  REFS_KEY: RelayStoreUtils.REFS_KEY,\n  ROOT_ID: RelayStoreUtils.ROOT_ID,\n  ROOT_TYPE: RelayStoreUtils.ROOT_TYPE,\n  TYPENAME_KEY: RelayStoreUtils.TYPENAME_KEY,\n  deepFreeze: deepFreeze,\n  generateClientID: generateClientID,\n  generateUniqueClientID: generateUniqueClientID,\n  getRelayHandleKey: getRelayHandleKey,\n  isClientID: isClientID,\n  isPromise: isPromise,\n  isScalarAndEqual: isScalarAndEqual,\n  recycleNodesInto: recycleNodesInto,\n  stableCopy: stableCopy,\n  getFragmentIdentifier: getFragmentIdentifier,\n  getRefetchMetadata: getRefetchMetadata,\n  getPaginationMetadata: getPaginationMetadata,\n  getPaginationVariables: getPaginationVariables,\n  getPendingOperationsForFragment: getPendingOperationsForFragment,\n  getValueAtPath: getValueAtPath,\n  __internal: {\n    ResolverFragments: ResolverFragments,\n    OperationTracker: RelayOperationTracker,\n    createRelayContext: createRelayContext,\n    getOperationVariables: RelayConcreteVariables.getOperationVariables,\n    fetchQuery: fetchQueryInternal.fetchQuery,\n    fetchQueryDeduped: fetchQueryInternal.fetchQueryDeduped,\n    getPromiseForActiveRequest: fetchQueryInternal.getPromiseForActiveRequest,\n    getObservableForActiveRequest: fetchQueryInternal.getObservableForActiveRequest,\n    withProvidedVariables: withProvidedVariables\n  }\n};", "/**\n * Relay v13.2.0\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = require('./lib/index.js');\n"],
  "mappings": "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",
  "names": []
}
